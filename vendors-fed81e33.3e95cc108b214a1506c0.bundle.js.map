{"version":3,"file":"vendors-fed81e33.3e95cc108b214a1506c0.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvhbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACzcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnhzPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACzxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA","sources":["webpack://web-client/./node_modules/@aurelia-mdc-web/all/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/banner/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/banner/dist/native-modules/mdc-banner.js","webpack://web-client/./node_modules/@aurelia-mdc-web/base/dist/native-modules/attributes/mdc-focus-trap.js","webpack://web-client/./node_modules/@aurelia-mdc-web/base/dist/native-modules/attributes/mdc-size-attribute.js","webpack://web-client/./node_modules/@aurelia-mdc-web/base/dist/native-modules/elements/mdc-promisify-reference.js","webpack://web-client/./node_modules/@aurelia-mdc-web/base/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/base/dist/native-modules/material-palette.js","webpack://web-client/./node_modules/@aurelia-mdc-web/base/dist/native-modules/mdc-component-adapters.js","webpack://web-client/./node_modules/@aurelia-mdc-web/base/dist/native-modules/mdc-component.js","webpack://web-client/./node_modules/@aurelia-mdc-web/base/dist/native-modules/next-element.js","webpack://web-client/./node_modules/@aurelia-mdc-web/button/dist/native-modules/enhance-mdc-button.js","webpack://web-client/./node_modules/@aurelia-mdc-web/button/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/button/dist/native-modules/mdc-button-label.js","webpack://web-client/./node_modules/@aurelia-mdc-web/button/dist/native-modules/mdc-button.js","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card-action-buttons.js","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card-action-icons.js","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card-actions/mdc-card-actions.js","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card-media/mdc-card-media.js","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card-primary-action.js","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card.js","webpack://web-client/./node_modules/@aurelia-mdc-web/checkbox/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/checkbox/dist/native-modules/mdc-checkbox.js","webpack://web-client/./node_modules/@aurelia-mdc-web/chips/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/chips/dist/native-modules/mdc-chip-action/enhance-mdc-chip-action.js","webpack://web-client/./node_modules/@aurelia-mdc-web/chips/dist/native-modules/mdc-chip-action/mdc-chip-action.js","webpack://web-client/./node_modules/@aurelia-mdc-web/chips/dist/native-modules/mdc-chip-set/mdc-chip-set.js","webpack://web-client/./node_modules/@aurelia-mdc-web/chips/dist/native-modules/mdc-chip/mdc-chip.js","webpack://web-client/./node_modules/@aurelia-mdc-web/circular-progress/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/circular-progress/dist/native-modules/mdc-circular-progress.js","webpack://web-client/./node_modules/@aurelia-mdc-web/data-table/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/data-table/dist/native-modules/mdc-data-table-row.js","webpack://web-client/./node_modules/@aurelia-mdc-web/data-table/dist/native-modules/mdc-data-table.js","webpack://web-client/./node_modules/@aurelia-mdc-web/dialog/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/dialog/dist/native-modules/mdc-dialog-actions.js","webpack://web-client/./node_modules/@aurelia-mdc-web/dialog/dist/native-modules/mdc-dialog-content.js","webpack://web-client/./node_modules/@aurelia-mdc-web/dialog/dist/native-modules/mdc-dialog-service.js","webpack://web-client/./node_modules/@aurelia-mdc-web/dialog/dist/native-modules/mdc-dialog-title.js","webpack://web-client/./node_modules/@aurelia-mdc-web/dialog/dist/native-modules/mdc-dialog.js","webpack://web-client/./node_modules/@aurelia-mdc-web/drawer/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/drawer/dist/native-modules/mdc-drawer-app-content.js","webpack://web-client/./node_modules/@aurelia-mdc-web/drawer/dist/native-modules/mdc-drawer-content.js","webpack://web-client/./node_modules/@aurelia-mdc-web/drawer/dist/native-modules/mdc-drawer-header/mdc-drawer-header.js","webpack://web-client/./node_modules/@aurelia-mdc-web/drawer/dist/native-modules/mdc-drawer.js","webpack://web-client/./node_modules/@aurelia-mdc-web/elevation/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/elevation/dist/native-modules/mdc-elevation.js","webpack://web-client/./node_modules/@aurelia-mdc-web/banner/dist/native-modules/mdc-banner.html","webpack://web-client/./node_modules/@aurelia-mdc-web/button/dist/native-modules/mdc-button.html","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card-actions/mdc-card-actions.html","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card-media/mdc-card-media.html","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card-primary-action.html","webpack://web-client/./node_modules/@aurelia-mdc-web/card/dist/native-modules/mdc-card.html","webpack://web-client/./node_modules/@aurelia-mdc-web/checkbox/dist/native-modules/mdc-checkbox.html","webpack://web-client/./node_modules/@aurelia-mdc-web/chips/dist/native-modules/mdc-chip-action/mdc-chip-action.html","webpack://web-client/./node_modules/@aurelia-mdc-web/chips/dist/native-modules/mdc-chip-set/mdc-chip-set.html","webpack://web-client/./node_modules/@aurelia-mdc-web/chips/dist/native-modules/mdc-chip/mdc-chip.html","webpack://web-client/./node_modules/@aurelia-mdc-web/circular-progress/dist/native-modules/mdc-circular-progress.html","webpack://web-client/./node_modules/@aurelia-mdc-web/data-table/dist/native-modules/mdc-data-table.html","webpack://web-client/./node_modules/@aurelia-mdc-web/dialog/dist/native-modules/mdc-dialog.html","webpack://web-client/./node_modules/@aurelia-mdc-web/drawer/dist/native-modules/mdc-drawer-header/mdc-drawer-header.html","webpack://web-client/./node_modules/@aurelia-mdc-web/drawer/dist/native-modules/mdc-drawer.html"],"sourcesContent":["import { PLATFORM } from 'aurelia-framework';\nexport function configure(config) {\n    config\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/base'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/banner'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/button'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/card'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/checkbox'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/chips'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/circular-progress'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/data-table'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/dialog'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/drawer'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/expandable'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/elevation'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/fab'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/form-field'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/icon'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/icon-button'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/image-list'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/layout-grid'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/linear-progress'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/list'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/lookup'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/menu'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/menu-surface'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/radio'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/segmented-button'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/select'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/slider'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/snackbar'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/switch'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/tab-bar'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/text-field'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/tooltip'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/top-app-bar'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/tree-view'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/typography'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/validation'));\n}\n//# sourceMappingURL=index.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcBanner } from './mdc-banner';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-banner')\n    ]);\n    config.aurelia.use.plugin(PLATFORM.moduleName('@aurelia-mdc-web/button'));\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __extends, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { events, MDCBannerFoundation } from '@material/banner';\nimport { inject } from 'aurelia-dependency-injection';\nimport { PLATFORM } from 'aurelia-pal';\nimport { customElement, useView } from 'aurelia-templating';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nevents.CLOSED = events.CLOSED.toLowerCase();\nevents.CLOSING = events.CLOSING.toLowerCase();\nevents.OPENED = events.OPENED.toLowerCase();\nevents.OPENING = events.OPENING.toLowerCase();\n/**\n * @selector mdc-banner\n */\nvar MdcBanner = /** @class */ (function (_super) {\n    __extends(MdcBanner, _super);\n    function MdcBanner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MdcBanner.prototype.handlePrimaryActionClick = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handlePrimaryActionClick(this.disablePrimaryAutoClose);\n    };\n    MdcBanner.prototype.handleSecondaryActionClick = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleSecondaryActionClick(this.disableSecondaryAutoClose);\n    };\n    /**\n     * Opens the banner and fires events.OPENING to indicate the beginning of its\n     * opening animation and then events.OPENED once the animation finishes.\n     */\n    MdcBanner.prototype.open = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.open();\n    };\n    /**\n     * Closes the banner and fires events.CLOSING to indicate the beginning of its\n     * closing animation and then events.CLOSED once the animation finishes.\n     * @param reason Why the banner was closed. Value will be passed to\n     *     events.CLOSING and events.CLOSED via the `event.detail.reason`\n     *     property. Standard values are CloseReason.PRIMARY and\n     *     CloseReason.SECONDARY, but CloseReason.UNSPECIFIED is provided for\n     *     custom handling of programmatic closing of the banner.\n     */\n    MdcBanner.prototype.close = function (reason) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.close(reason);\n    };\n    MdcBanner.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) {\n                _this.root.classList.add(className);\n            },\n            getContentHeight: function () {\n                return _this.contentEl.offsetHeight;\n            },\n            notifyClosed: function (reason) {\n                _this.emit(events.CLOSED, { reason: reason });\n            },\n            notifyClosing: function (reason) {\n                _this.emit(events.CLOSING, { reason: reason });\n            },\n            notifyOpened: function () {\n                _this.emit(events.OPENED, {});\n            },\n            notifyOpening: function () {\n                _this.emit(events.OPENING, {});\n            },\n            notifyActionClicked: function (action) {\n                _this.emit(events.ACTION_CLICKED, { action: action });\n            },\n            releaseFocus: function () {\n                var _a;\n                (_a = _this.mdcFocusTrap) === null || _a === void 0 ? void 0 : _a.releaseFocus();\n            },\n            removeClass: function (className) {\n                _this.root.classList.remove(className);\n            },\n            setStyleProperty: function (propertyName, value) {\n                _this.root.style.setProperty(propertyName, value);\n            },\n            trapFocus: function () {\n                var _a;\n                (_a = _this.mdcFocusTrap) === null || _a === void 0 ? void 0 : _a.trapFocus();\n            },\n        };\n        return new MDCBannerFoundation(adapter);\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcBanner.prototype, \"fixed\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcBanner.prototype, \"centered\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcBanner.prototype, \"icon\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcBanner.prototype, \"primaryAction\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcBanner.prototype, \"secondaryAction\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcBanner.prototype, \"disablePrimaryAutoClose\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcBanner.prototype, \"disableSecondaryAutoClose\", void 0);\n    MdcBanner = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-banner.html')),\n        customElement('mdc-banner')\n    ], MdcBanner);\n    return MdcBanner;\n}(MdcComponent));\nexport { MdcBanner };\n//# sourceMappingURL=mdc-banner.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { inject } from 'aurelia-dependency-injection';\nimport { customAttribute } from 'aurelia-templating';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { FocusTrap } from '@material/dom/focus-trap';\nvar MdcFocusTrap = /** @class */ (function () {\n    function MdcFocusTrap(root) {\n        this.root = root;\n    }\n    MdcFocusTrap.prototype.attached = function () {\n        if (!this.delay) {\n            this.create();\n        }\n    };\n    MdcFocusTrap.prototype.create = function () {\n        var el = this.initialFocusEl instanceof HTMLElement || this.initialFocusEl === undefined ? this.initialFocusEl : this.initialFocusEl();\n        this.focusTrap = new FocusTrap(this.root, { initialFocusEl: el, skipInitialFocus: this.skipInitialFocus, skipRestoreFocus: this.skipRestoreFocus });\n    };\n    MdcFocusTrap.prototype.trapFocus = function () {\n        var _a;\n        (_a = this.focusTrap) === null || _a === void 0 ? void 0 : _a.trapFocus();\n    };\n    MdcFocusTrap.prototype.releaseFocus = function () {\n        var _a;\n        (_a = this.focusTrap) === null || _a === void 0 ? void 0 : _a.releaseFocus();\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcFocusTrap.prototype, \"delay\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcFocusTrap.prototype, \"initialFocusEl\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcFocusTrap.prototype, \"skipInitialFocus\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcFocusTrap.prototype, \"skipRestoreFocus\", void 0);\n    MdcFocusTrap = __decorate([\n        customAttribute('mdc-focus-trap'),\n        inject(Element),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcFocusTrap);\n    return MdcFocusTrap;\n}());\nexport { MdcFocusTrap };\n//# sourceMappingURL=mdc-focus-trap.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customAttribute, bindingMode, inject, bindable } from 'aurelia-framework';\nimport { PLATFORM } from 'aurelia-pal';\nvar MdcSizeCustomAttribute = /** @class */ (function () {\n    function MdcSizeCustomAttribute(element) {\n        this.element = element;\n        this.value = { width: 0, height: 0 };\n        this.width = 0;\n        this.height = 0;\n    }\n    MdcSizeCustomAttribute.prototype.bind = function () {\n        var _a;\n        this.observer = this.getObserver();\n        (_a = this.observer) === null || _a === void 0 ? void 0 : _a.observe(this.element);\n    };\n    MdcSizeCustomAttribute.prototype.unbind = function () {\n        var _a;\n        (_a = this.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.observer = void 0;\n    };\n    MdcSizeCustomAttribute.prototype.getObserver = function () {\n        var _this = this;\n        if (typeof PLATFORM.global.ResizeObserver === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return new PLATFORM.global.ResizeObserver(function (records) {\n                var rect = records[0].contentRect;\n                _this.value = { width: rect.width, height: rect.height };\n            });\n        }\n        else {\n            return new ElementSizeDirtyChecker(function (size) {\n                _this.value = size;\n            });\n        }\n    };\n    MdcSizeCustomAttribute.prototype.valueChanged = function (size) {\n        this.value = size;\n        this.width = size.width;\n        this.height = size.height;\n    };\n    __decorate([\n        bindable({ defaultBindingMode: bindingMode.fromView, primaryProperty: true }),\n        __metadata(\"design:type\", Object)\n    ], MdcSizeCustomAttribute.prototype, \"value\", void 0);\n    __decorate([\n        bindable({ defaultBindingMode: bindingMode.fromView }),\n        __metadata(\"design:type\", Number)\n    ], MdcSizeCustomAttribute.prototype, \"width\", void 0);\n    __decorate([\n        bindable({ defaultBindingMode: bindingMode.fromView }),\n        __metadata(\"design:type\", Number)\n    ], MdcSizeCustomAttribute.prototype, \"height\", void 0);\n    MdcSizeCustomAttribute = __decorate([\n        customAttribute('mdc-size'),\n        inject(Element),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcSizeCustomAttribute);\n    return MdcSizeCustomAttribute;\n}());\nexport { MdcSizeCustomAttribute };\nvar ElementSizeDirtyChecker = /** @class */ (function () {\n    function ElementSizeDirtyChecker(callback, rate /* 3 times a second */) {\n        if (rate === void 0) { rate = 330; }\n        this.callback = callback;\n        this.rate = rate;\n        this.size = { width: 0, height: 0 };\n    }\n    ElementSizeDirtyChecker.prototype.observe = function (element) {\n        var _this = this;\n        this.timerId = setInterval(function () {\n            var _a = element.getBoundingClientRect(), width = _a.width, height = _a.height;\n            var currentSize = _this.size;\n            if (width !== currentSize.width || height !== currentSize.height) {\n                _this.size = { width: width, height: height };\n                if (typeof _this.callback === 'function') {\n                    _this.callback(_this.size);\n                }\n            }\n        }, this.rate);\n    };\n    ElementSizeDirtyChecker.prototype.disconnect = function () {\n        clearInterval(this.timerId);\n    };\n    return ElementSizeDirtyChecker;\n}());\n//# sourceMappingURL=mdc-size-attribute.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { bindingMode } from 'aurelia-binding';\nimport { bindable, customElement, noView } from 'aurelia-templating';\nvar MdcPromisifyReference = /** @class */ (function () {\n    function MdcPromisifyReference() {\n    }\n    MdcPromisifyReference.prototype.referenceChanged = function () {\n        if (this.reference) {\n            this.resolve(this.reference);\n        }\n    };\n    MdcPromisifyReference.prototype.attached = function () {\n        var _this = this;\n        this.promise = new Promise(function (r) { return _this.resolve = r; });\n    };\n    __decorate([\n        bindable({ defaultBindingMode: bindingMode.fromView }),\n        __metadata(\"design:type\", Promise)\n    ], MdcPromisifyReference.prototype, \"promise\", void 0);\n    __decorate([\n        bindable({ defaultBindingMode: bindingMode.toView }),\n        __metadata(\"design:type\", Object)\n    ], MdcPromisifyReference.prototype, \"reference\", void 0);\n    MdcPromisifyReference = __decorate([\n        customElement('mdc-promisify-reference'),\n        noView\n    ], MdcPromisifyReference);\n    return MdcPromisifyReference;\n}());\nexport { MdcPromisifyReference };\n//# sourceMappingURL=mdc-promisify-reference.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcComponent } from './mdc-component';\nexport { MdcComponentAdapters } from './mdc-component-adapters';\nexport { MATERIAL_PALETTE } from './material-palette';\nexport { MdcFocusTrap } from './attributes/mdc-focus-trap';\nexport { nextElement } from './next-element';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./attributes/mdc-size-attribute'),\n        PLATFORM.moduleName('./attributes/mdc-focus-trap'),\n        PLATFORM.moduleName('./elements/mdc-promisify-reference')\n    ]);\n}\n//# sourceMappingURL=index.js.map","/** @hidden */\nexport var MATERIAL_PALETTE = {\n    red: { b50: '#FFEBEE', b100: '#FFCDD2', b200: '#EF9A9A', b300: '#E57373', b400: '#EF5350', b500: '#F44336', b600: '#E53935', b700: '#D32F2F', b800: '#C62828', b900: '#B71C1C', a100: '#FF8A80', a200: '#FF5252', a400: '#FF1744', a700: '#D50000' },\n    pink: { b50: '#FCE4EC', b100: '#F8BBD0', b200: '#F48FB1', b300: '#F06292', b400: '#EC407A', b500: '#E91E63', b600: '#D81B60', b700: '#C2185B', b800: '#AD1457', b900: '#880E4F', a100: '#FF80AB', a200: '#FF4081', a400: '#F50057', a700: '#C51162' },\n    purple: { b50: '#F3E5F5', b100: '#E1BEE7', b200: '#CE93D8', b300: '#BA68C8', b400: '#AB47BC', b500: '#9C27B0', b600: '#8E24AA', b700: '#7B1FA2', b800: '#6A1B9A', b900: '#4A148C', a100: '#EA80FC', a200: '#E040FB', a400: '#D500F9', a700: '#AA00FF' },\n    deepPurple: { b50: '#EDE7F6', b100: '#D1C4E9', b200: '#B39DDB', b300: '#9575CD', b400: '#7E57C2', b500: '#673AB7', b600: '#5E35B1', b700: '#512DA8', b800: '#4527A0', b900: '#311B92', a100: '#B388FF', a200: '#7C4DFF', a400: '#651FFF', a700: '#6200EA' },\n    indigo: { b50: '#E8EAF6', b100: '#C5CAE9', b200: '#9FA8DA', b300: '#7986CB', b400: '#5C6BC0', b500: '#3F51B5', b600: '#3949AB', b700: '#303F9F', b800: '#283593', b900: '#1A237E', a100: '#8C9EFF', a200: '#536DFE', a400: '#3D5AFE', a700: '#304FFE' },\n    blue: { b50: '#E3F2FD', b100: '#BBDEFB', b200: '#90CAF9', b300: '#64B5F6', b400: '#42A5F5', b500: '#2196F3', b600: '#1E88E5', b700: '#1976D2', b800: '#1565C0', b900: '#0D47A1', a100: '#82B1FF', a200: '#448AFF', a400: '#2979FF', a700: '#2962FF' },\n    lightBlue: { b50: '#E1F5FE', b100: '#B3E5FC', b200: '#81D4FA', b300: '#4FC3F7', b400: '#29B6F6', b500: '#03A9F4', b600: '#039BE5', b700: '#0288D1', b800: '#0277BD', b900: '#01579B', a100: '#80D8FF', a200: '#40C4FF', a400: '#00B0FF', a700: '#0091EA' },\n    cyan: { b50: '#E0F7FA', b100: '#B2EBF2', b200: '#80DEEA', b300: '#4DD0E1', b400: '#26C6DA', b500: '#00BCD4', b600: '#00ACC1', b700: '#0097A7', b800: '#00838F', b900: '#006064', a100: '#84FFFF', a200: '#18FFFF', a400: '#00E5FF', a700: '#00B8D4' },\n    teal: { b50: '#E0F2F1', b100: '#B2DFDB', b200: '#80CBC4', b300: '#4DB6AC', b400: '#26A69A', b500: '#009688', b600: '#00897B', b700: '#00796B', b800: '#00695C', b900: '#004D40', a100: '#A7FFEB', a200: '#64FFDA', a400: '#1DE9B6', a700: '#00BFA5' },\n    green: { b50: '#E8F5E9', b100: '#C8E6C9', b200: '#A5D6A7', b300: '#81C784', b400: '#66BB6A', b500: '#4CAF50', b600: '#43A047', b700: '#388E3C', b800: '#2E7D32', b900: '#1B5E20', a100: '#B9F6CA', a200: '#69F0AE', a400: '#00E676', a700: '#00C853' },\n    lightGreen: { b50: '#F1F8E9', b100: '#DCEDC8', b200: '#C5E1A5', b300: '#AED581', b400: '#9CCC65', b500: '#8BC34A', b600: '#7CB342', b700: '#689F38', b800: '#558B2F', b900: '#33691E', a100: '#CCFF90', a200: '#B2FF59', a400: '#76FF03', a700: '#64DD17' },\n    lime: { b50: '#F9FBE7', b100: '#F0F4C3', b200: '#E6EE9C', b300: '#DCE775', b400: '#D4E157', b500: '#CDDC39', b600: '#C0CA33', b700: '#AFB42B', b800: '#9E9D24', b900: '#827717', a100: '#F4FF81', a200: '#EEFF41', a400: '#C6FF00', a700: '#AEEA00' },\n    yellow: { b50: '#FFFDE7', b100: '#FFF9C4', b200: '#FFF59D', b300: '#FFF176', b400: '#FFEE58', b500: '#FFEB3B', b600: '#FDD835', b700: '#FBC02D', b800: '#F9A825', b900: '#F57F17', a100: '#FFFF8D', a200: '#FFFF00', a400: '#FFEA00', a700: '#FFD600' },\n    amber: { b50: '#FFF8E1', b100: '#FFECB3', b200: '#FFE082', b300: '#FFD54F', b400: '#FFCA28', b500: '#FFC107', b600: '#FFB300', b700: '#FFA000', b800: '#FF8F00', b900: '#FF6F00', a100: '#FFE57F', a200: '#FFD740', a400: '#FFC400', a700: '#FFAB00' },\n    orange: { b50: '#FFF3E0', b100: '#FFE0B2', b200: '#FFCC80', b300: '#FFB74D', b400: '#FFA726', b500: '#FF9800', b600: '#FB8C00', b700: '#F57C00', b800: '#EF6C00', b900: '#E65100', a100: '#FFD180', a200: '#FFAB40', a400: '#FF9100', a700: '#FF6D00' },\n    deepOrange: { b50: '#FBE9E7', b100: '#FFCCBC', b200: '#FFAB91', b300: '#FF8A65', b400: '#FF7043', b500: '#FF5722', b600: '#F4511E', b700: '#E64A19', b800: '#D84315', b900: '#BF360C', a100: '#FF9E80', a200: '#FF6E40', a400: '#FF3D00', a700: '#DD2C00' },\n    brown: { b50: '#EFEBE9', b100: '#D7CCC8', b200: '#BCAAA4', b300: '#A1887F', b400: '#8D6E63', b500: '#795548', b600: '#6D4C41', b700: '#5D4037', b800: '#4E342E', b900: '#3E2723' },\n    grey: { b50: '#FAFAFA', b100: '#F5F5F5', b200: '#EEEEEE', b300: '#E0E0E0', b400: '#BDBDBD', b500: '#9E9E9E', b600: '#757575', b700: '#616161', b800: '#424242', b900: '#212121' },\n    blueGrey: { b50: '#ECEFF1', b100: '#CFD8DC', b200: '#B0BEC5', b300: '#90A4AE', b400: '#78909C', b500: '#607D8B', b600: '#546E7A', b700: '#455A64', b800: '#37474F', b900: '#263238' }\n};\n//# sourceMappingURL=material-palette.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { inject, ObserverLocator } from 'aurelia-framework';\nimport { SyntaxInterpreter } from 'aurelia-templating-binding';\nvar MdcComponentAdapters = /** @class */ (function () {\n    function MdcComponentAdapters(observerLocator) {\n        this.observerLocator = observerLocator;\n        this.adaptersCreated = false;\n        this.adapters = {};\n    }\n    MdcComponentAdapters.prototype.createAdapter = function () {\n        var _this = this;\n        this.observerLocator.addAdapter({\n            getObserver: function (obj, propertyName, descriptor) {\n                var _a;\n                if (obj instanceof Element) {\n                    var tagName = (_a = obj.getAttribute('as-element')) !== null && _a !== void 0 ? _a : obj.tagName;\n                    var elAdapters = _this.adapters[tagName];\n                    if (!elAdapters) {\n                        return null;\n                    }\n                    var propertyAdapter = elAdapters.properties[propertyName];\n                    if (propertyAdapter) {\n                        var observer = propertyAdapter.getObserver(obj, propertyName, _this.observerLocator, descriptor);\n                        if (observer) {\n                            return observer;\n                        }\n                    }\n                }\n                return null;\n            }\n        });\n    };\n    MdcComponentAdapters.prototype.getOrCreateMdcElementAdapters = function (tagName) {\n        if (!this.adaptersCreated) {\n            this.createAdapter();\n            this.adaptersCreated = true;\n        }\n        var adapters = this.adapters;\n        var elementAdapters = adapters[tagName] || adapters[tagName.toLowerCase()];\n        if (!elementAdapters) {\n            elementAdapters = adapters[tagName] = adapters[tagName.toLowerCase()] = { tagName: tagName, properties: {} };\n        }\n        return elementAdapters;\n    };\n    MdcComponentAdapters.prototype.interceptDetermineDefaultBindingMode = function () {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var mdc = this;\n        var originalFn = SyntaxInterpreter.prototype.determineDefaultBindingMode;\n        SyntaxInterpreter.prototype.determineDefaultBindingMode = function (element, attrName, context) {\n            var _a;\n            var tagName = (_a = element.getAttribute('as-element')) !== null && _a !== void 0 ? _a : element.tagName;\n            var elAdapters = mdc.adapters[tagName];\n            if (elAdapters) {\n                var propertyAdapter = elAdapters.properties[attrName];\n                if (propertyAdapter) {\n                    return propertyAdapter.defaultBindingMode;\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return originalFn.call(this, element, attrName, context);\n        };\n    };\n    MdcComponentAdapters.prototype.addMdcElementObserverAdapter = function (tagName, properties) {\n        if (!this.adaptersCreated) {\n            this.createAdapter();\n            this.adaptersCreated = true;\n        }\n        var elementAdapters = this.getOrCreateMdcElementAdapters(tagName);\n        Object.assign(elementAdapters.properties, properties);\n    };\n    MdcComponentAdapters.prototype.registerMdcElementConfig = function (observerAdapter) {\n        if (!this.bindingModeIntercepted) {\n            this.interceptDetermineDefaultBindingMode();\n            this.bindingModeIntercepted = true;\n        }\n        this.addMdcElementObserverAdapter(observerAdapter.tagName.toUpperCase(), observerAdapter.properties);\n    };\n    MdcComponentAdapters = __decorate([\n        inject(ObserverLocator),\n        __metadata(\"design:paramtypes\", [ObserverLocator])\n    ], MdcComponentAdapters);\n    return MdcComponentAdapters;\n}());\nexport { MdcComponentAdapters };\n//# sourceMappingURL=mdc-component-adapters.js.map","import { __awaiter, __generator } from \"tslib\";\nvar MdcComponent = /** @class */ (function () {\n    function MdcComponent(root) {\n        this.root = root;\n        this.initialised = this.createInitiliasedPromise();\n    }\n    MdcComponent.prototype.createInitiliasedPromise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.initialisedResolve = r; })];\n            });\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    MdcComponent.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    MdcComponent.prototype.initialSyncWithDOM = function () { };\n    MdcComponent.prototype.attached = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.continueAttaching = true;\n                        return [4 /*yield*/, this.initialise()];\n                    case 1:\n                        _a.sent();\n                        // detached might be called straight after attached starts\n                        // do not continue attaching if that's the case\n                        if (!this.continueAttaching) {\n                            return [2 /*return*/];\n                        }\n                        this.foundation = this.getDefaultFoundation();\n                        this.foundation.init();\n                        this.initialisedResolve();\n                        this.initialSyncWithDOM();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    MdcComponent.prototype.destroy = function () { };\n    MdcComponent.prototype.detached = function () {\n        var _a;\n        this.continueAttaching = false;\n        this.destroy();\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.destroy();\n        this.foundation = undefined;\n        this.initialised = this.createInitiliasedPromise();\n    };\n    MdcComponent.prototype.listen = function (evtType, handler, options) {\n        this.root.addEventListener(evtType, handler, options);\n    };\n    MdcComponent.prototype.unlisten = function (evtType, handler, options) {\n        this.root.removeEventListener(evtType, handler, options);\n    };\n    /**\n     * @hidden\n     * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n     */\n    MdcComponent.prototype.emit = function (evtType, evtData, shouldBubble) {\n        if (shouldBubble === void 0) { shouldBubble = false; }\n        var evt;\n        if (typeof CustomEvent === 'function') {\n            evt = new CustomEvent(evtType, {\n                bubbles: shouldBubble,\n                detail: evtData,\n            });\n        }\n        else {\n            evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n        }\n        this.root.dispatchEvent(evt);\n    };\n    return MdcComponent;\n}());\nexport { MdcComponent };\n//# sourceMappingURL=mdc-component.js.map","import { __read, __spreadArray } from \"tslib\";\nexport function nextElement(element, reverse) {\n    /*check if an element is defined or use activeElement*/\n    var activeElem = element instanceof HTMLElement ? element : document.activeElement;\n    if (!activeElem) {\n        return;\n    }\n    var queryString = [\n        'a:not([disabled]):not([tabindex=\"-1\"])',\n        'button:not([disabled]):not([tabindex=\"-1\"])',\n        'input:not([disabled]):not([tabindex=\"-1\"]):not(.mdc-text-field__input)',\n        '.mdc-text-field',\n        'select:not([disabled]):not([tabindex=\"-1\"])',\n        '[tabindex]:not([disabled]):not([tabindex=\"-1\"])'\n        /* add custom queries here */\n    ].join(','), queryResult = Array.from(document.querySelectorAll(queryString)).filter(function (elem) {\n        /*check for visibility while always include the current activeElement*/\n        return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem === activeElem;\n    }), indexedList = queryResult.slice().filter(function (elem) {\n        /* filter out all indexes not greater than 0 */\n        return elem.tabIndex == 0 || elem.tabIndex == -1 ? false : true;\n    }).sort(function (a, b) {\n        /* sort the array by index from smallest to largest */\n        return a.tabIndex != 0 && b.tabIndex != 0\n            ? (a.tabIndex < b.tabIndex ? -1 : b.tabIndex < a.tabIndex ? 1 : 0)\n            : a.tabIndex != 0 ? -1 : b.tabIndex != 0 ? 1 : 0;\n    }), focusable = __spreadArray(__spreadArray([], __read(indexedList), false), __read(queryResult.filter(function (elem) {\n        /* filter out all indexes above 0 */\n        return elem.tabIndex == 0 || elem.tabIndex == -1 ? true : false;\n    })), false);\n    /* if reverse is true return the previous focusable element\n       if reverse is false return the next focusable element */\n    return reverse ? (focusable[focusable.indexOf(activeElem) - 1] || focusable[focusable.length - 1])\n        : (focusable[focusable.indexOf(activeElem) + 1] || focusable[0]);\n}\n//# sourceMappingURL=next-element.js.map","import { __decorate, __values } from \"tslib\";\nimport { viewEngineHooks } from 'aurelia-framework';\nvar EnhanceMdcButton = /** @class */ (function () {\n    function EnhanceMdcButton() {\n    }\n    EnhanceMdcButton.prototype.beforeCompile = function (template) {\n        var e_1, _a;\n        var actions = template.querySelectorAll('[mdc-button]');\n        try {\n            for (var _b = __values(Array.from(actions)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var i = _c.value;\n                i.setAttribute('as-element', 'mdc-button');\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    EnhanceMdcButton = __decorate([\n        viewEngineHooks\n    ], EnhanceMdcButton);\n    return EnhanceMdcButton;\n}());\nexport { EnhanceMdcButton };\n//# sourceMappingURL=enhance-mdc-button.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcButton } from './mdc-button';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-button'),\n        PLATFORM.moduleName('./enhance-mdc-button'),\n        PLATFORM.moduleName('./mdc-button-label')\n    ]);\n    config.aurelia.use.plugin(PLATFORM.moduleName('@aurelia-mdc-web/ripple'));\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { inject, customAttribute } from 'aurelia-framework';\n/**\n * The mdc-button-label attribute is required in order for the trailing icon to be styled appropriately.\n * @selector [mdc-button-label]\n */\nvar MdcButtonLabel = /** @class */ (function () {\n    function MdcButtonLabel(root) {\n        this.root = root;\n    }\n    MdcButtonLabel.prototype.attached = function () {\n        this.root.classList.add('mdc-button__label');\n    };\n    MdcButtonLabel = __decorate([\n        inject(Element),\n        customAttribute('mdc-button-label'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcButtonLabel);\n    return MdcButtonLabel;\n}());\nexport { MdcButtonLabel };\n//# sourceMappingURL=mdc-button-label.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { inject, useView, PLATFORM, customElement } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\n/**\n * @selector button[mdc-button]\n * @selector a[mdc-button]\n * @selector mdc-button\n */\nvar MdcButton = /** @class */ (function () {\n    function MdcButton(root) {\n        this.root = root;\n    }\n    MdcButton.prototype.hrefChanged = function () {\n        if (this.href) {\n            this.root.setAttribute('href', this.href);\n        }\n        else {\n            this.root.removeAttribute('href');\n        }\n    };\n    MdcButton.prototype.attached = function () {\n        var icons = this.root.querySelectorAll('mdc-icon');\n        Array.from(icons).forEach(function (x) { return x.classList.add('mdc-button__icon'); });\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcButton.prototype, \"touch\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcButton.prototype, \"raised\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcButton.prototype, \"unelevated\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcButton.prototype, \"outlined\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcButton.prototype, \"label\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcButton.prototype, \"href\", void 0);\n    MdcButton = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-button.html')),\n        customElement('mdc-button'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcButton);\n    return MdcButton;\n}());\nexport { MdcButton };\n//# sourceMappingURL=mdc-button.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcCard } from './mdc-card';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-card'),\n        PLATFORM.moduleName('./mdc-card-actions/mdc-card-actions'),\n        PLATFORM.moduleName('./mdc-card-media/mdc-card-media'),\n        PLATFORM.moduleName('./mdc-card-action-buttons'),\n        PLATFORM.moduleName('./mdc-card-action-icons'),\n        PLATFORM.moduleName('./mdc-card-primary-action')\n    ]);\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, inlineView, inject } from 'aurelia-framework';\n/**\n * Optional. A group of action buttons, displayed on the left side of the card (in LTR).\n * @selector mdc-card-action-buttons\n */\nvar MdcCardActionButtons = /** @class */ (function () {\n    function MdcCardActionButtons(root) {\n        this.root = root;\n    }\n    MdcCardActionButtons.prototype.attached = function () {\n        var children = this.root.querySelectorAll('.mdc-button');\n        for (var i = 0; i < children.length; ++i) {\n            var child = children[i];\n            child.classList.add('mdc-card__action', 'mdc-card__action--button');\n        }\n    };\n    MdcCardActionButtons = __decorate([\n        inject(Element),\n        inlineView('<template class=\"mdc-card__action-buttons\"><slot></slot></template>'),\n        customElement('mdc-card-action-buttons'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcCardActionButtons);\n    return MdcCardActionButtons;\n}());\nexport { MdcCardActionButtons };\n//# sourceMappingURL=mdc-card-action-buttons.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, inlineView, inject } from 'aurelia-framework';\n/**\n * Optional. A group of supplemental action icons, displayed on the right side of the card (in LTR).\n * @selector mdc-card-action-icons\n */\nvar MdcCardActionIcons = /** @class */ (function () {\n    function MdcCardActionIcons(root) {\n        this.root = root;\n    }\n    MdcCardActionIcons.prototype.attached = function () {\n        var children = this.root.querySelectorAll('.mdc-icon-button');\n        for (var i = 0; i < children.length; ++i) {\n            var child = children[i];\n            child.classList.add('mdc-card__action', 'mdc-card__action--icon');\n        }\n    };\n    MdcCardActionIcons = __decorate([\n        inject(Element),\n        inlineView('<template class=\"mdc-card__action-icons\"><slot></slot></template>'),\n        customElement('mdc-card-action-icons'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcCardActionIcons);\n    return MdcCardActionIcons;\n}());\nexport { MdcCardActionIcons };\n//# sourceMappingURL=mdc-card-action-icons.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, useView, PLATFORM } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\n/**\n * @selector mdc-card-actions\n */\nvar MdcCardActions = /** @class */ (function () {\n    function MdcCardActions() {\n    }\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCardActions.prototype, \"fullBleed\", void 0);\n    MdcCardActions = __decorate([\n        useView(PLATFORM.moduleName('./mdc-card-actions.html')),\n        customElement('mdc-card-actions')\n    ], MdcCardActions);\n    return MdcCardActions;\n}());\nexport { MdcCardActions };\n//# sourceMappingURL=mdc-card-actions.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, useView, PLATFORM } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\n/**\n * @selector mdc-card-media\n */\nvar MdcCardMedia = /** @class */ (function () {\n    function MdcCardMedia() {\n    }\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCardMedia.prototype, \"square\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCardMedia.prototype, \"wide\", void 0);\n    MdcCardMedia = __decorate([\n        useView(PLATFORM.moduleName('./mdc-card-media.html')),\n        customElement('mdc-card-media')\n    ], MdcCardMedia);\n    return MdcCardMedia;\n}());\nexport { MdcCardMedia };\n//# sourceMappingURL=mdc-card-media.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, PLATFORM, useView } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\n/**\n * Optional. The main tappable area of the card. Typically contains most (or all) card content except mdc-card-actions.\n * Only applicable to cards that have a primary action that the main surface should trigger.\n * @selector mdc-card-primary-action\n */\nvar MdcCardPrimaryAction = /** @class */ (function () {\n    function MdcCardPrimaryAction() {\n    }\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCardPrimaryAction.prototype, \"disableRipple\", void 0);\n    MdcCardPrimaryAction = __decorate([\n        useView(PLATFORM.moduleName('./mdc-card-primary-action.html')),\n        customElement('mdc-card-primary-action')\n    ], MdcCardPrimaryAction);\n    return MdcCardPrimaryAction;\n}());\nexport { MdcCardPrimaryAction };\n//# sourceMappingURL=mdc-card-primary-action.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, useView, PLATFORM } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\n/**\n * @selector mdc-card\n */\nvar MdcCard = /** @class */ (function () {\n    function MdcCard() {\n    }\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCard.prototype, \"outlined\", void 0);\n    MdcCard = __decorate([\n        useView(PLATFORM.moduleName('./mdc-card.html')),\n        customElement('mdc-card')\n    ], MdcCard);\n    return MdcCard;\n}());\nexport { MdcCard };\n//# sourceMappingURL=mdc-card.js.map","import { PLATFORM, bindingMode, EventSubscriber, CheckedObserver } from 'aurelia-framework';\nimport { MdcComponentAdapters } from '@aurelia-mdc-web/base';\nexport { MdcCheckbox } from './mdc-checkbox';\nexport function configure(config) {\n    config.container.get(MdcComponentAdapters).registerMdcElementConfig(checkboxConfig);\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-checkbox')\n    ]);\n    config.aurelia.use.plugin(PLATFORM.moduleName('@aurelia-mdc-web/ripple'));\n}\nvar checkboxConfig = {\n    tagName: 'mdc-checkbox',\n    properties: {\n        checked: {\n            defaultBindingMode: bindingMode.twoWay,\n            getObserver: function (element, _, observerLocator) {\n                return new CheckedObserver(element, new EventSubscriber(['change']), observerLocator);\n            }\n        }\n    }\n};\n//# sourceMappingURL=index.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCCheckboxFoundation } from '@material/checkbox';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { getCorrectEventName } from '@material/animation/util';\nimport { inject, useView, PLATFORM, customElement, bindingMode } from 'aurelia-framework';\nvar checkboxId = 0;\n/**\n * @selector mdc-checkbox\n * @emits change | Event dispatched on checked change.\n */\nvar MdcCheckbox = /** @class */ (function (_super) {\n    __extends(MdcCheckbox, _super);\n    function MdcCheckbox(root) {\n        var _this = _super.call(this, root) || this;\n        _this.id = \"mdc-checkbox-\".concat(++checkboxId, \"-input\");\n        /**\n         * Whether the checkbox should go to checked state or unchecked when toggled from indeterminate state.\n         */\n        _this.indeterminateToChecked = true;\n        defineMdcCheckboxElementApis(_this.root);\n        return _this;\n    }\n    MdcCheckbox.prototype.disabledChanged = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _a.sent();\n                        // still need to check because a component might already be destroyed\n                        // by the time the binding is applied\n                        if (this.nativeControl_) {\n                            this.nativeControl_.disabled = this.disabled;\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(MdcCheckbox.prototype, \"checked\", {\n        get: function () {\n            var _a;\n            if (this.nativeControl_) {\n                return this.nativeControl_.checked;\n            }\n            else {\n                return (_a = this._checked) !== null && _a !== void 0 ? _a : false;\n            }\n        },\n        /**\n         * Whether the checkbox is checked.\n         */\n        set: function (checked) {\n            this._checked = checked;\n            if (this.nativeControl_) {\n                this.nativeControl_.checked = checked;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcCheckbox.prototype.indeterminateChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        if (this.nativeControl_) {\n                            this.nativeControl_.indeterminate = this.indeterminate;\n                        }\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleChange();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(MdcCheckbox.prototype, \"value\", {\n        get: function () {\n            return this.nativeControl_.value;\n        },\n        set: function (value) {\n            this.nativeControl_.value = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // eslint-disable-next-line @typescript-eslint/require-await\n    MdcCheckbox.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var attributeValue, attributeValue;\n            return __generator(this, function (_a) {\n                this.listen(getCorrectEventName(window, 'animationend'), this.handleAnimationEnd_);\n                if (this.root.hasAttribute('checked')) {\n                    attributeValue = this.root.getAttribute('checked');\n                    if (attributeValue || attributeValue === '') {\n                        this.root.checked = true;\n                    }\n                }\n                if (this.root.hasAttribute('indeterminate')) {\n                    attributeValue = this.root.getAttribute('indeterminate');\n                    if (attributeValue || attributeValue === '') {\n                        this.root.indeterminate = true;\n                    }\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    MdcCheckbox.prototype.initialSyncWithDOM = function () {\n        if (this._checked !== undefined) {\n            this.checked = this._checked;\n        }\n    };\n    MdcCheckbox.prototype.destroy = function () {\n        this.unlisten(getCorrectEventName(window, 'animationend'), this.handleAnimationEnd_);\n        this._checked = undefined;\n    };\n    MdcCheckbox.prototype.handleChange_ = function () {\n        var _a;\n        if (this.indeterminate) {\n            this.indeterminate = false;\n            this.checked = this.indeterminateToChecked;\n        }\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleChange();\n    };\n    MdcCheckbox.prototype.handleAnimationEnd_ = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleAnimationEnd();\n    };\n    MdcCheckbox.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            forceLayout: function () { return (_this.root).offsetWidth; },\n            hasNativeControl: function () { return !!_this.nativeControl_; },\n            isAttachedToDOM: function () { return Boolean(_this.root.parentNode); },\n            isChecked: function () { return _this.checked; },\n            isIndeterminate: function () { return _this.indeterminate; },\n            removeClass: function (className) {\n                _this.root.classList.remove(className);\n            },\n            removeNativeControlAttr: function (attr) {\n                _this.nativeControl_.removeAttribute(attr);\n            },\n            setNativeControlAttr: function (attr, value) {\n                _this.nativeControl_.setAttribute(attr, value);\n            },\n            setNativeControlDisabled: function (disabled) {\n                _this.nativeControl_.disabled = disabled;\n            },\n        };\n        return new MDCCheckboxFoundation(adapter);\n    };\n    /**\n     * Set focus to the checkbox.\n     */\n    MdcCheckbox.prototype.focus = function () {\n        this.nativeControl_.focus();\n    };\n    /**\n     * Moves focus from the checkbox.\n     */\n    MdcCheckbox.prototype.blur = function () {\n        this.nativeControl_.blur();\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCheckbox.prototype, \"disabled\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCheckbox.prototype, \"touch\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCheckbox.prototype, \"disableRipple\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcCheckbox.prototype, \"indeterminateToChecked\", void 0);\n    __decorate([\n        bindable.booleanAttr({ defaultBindingMode: bindingMode.twoWay }),\n        __metadata(\"design:type\", Boolean)\n    ], MdcCheckbox.prototype, \"indeterminate\", void 0);\n    MdcCheckbox = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-checkbox.html')),\n        customElement('mdc-checkbox'),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MdcCheckbox);\n    return MdcCheckbox;\n}(MdcComponent));\nexport { MdcCheckbox };\nfunction defineMdcCheckboxElementApis(element) {\n    Object.defineProperties(element, {\n        type: {\n            value: 'checkbox',\n        },\n        checked: {\n            get: function () {\n                return this.au.controller.viewModel.checked;\n            },\n            set: function (value) {\n                this.au.controller.viewModel.checked = value;\n            },\n            configurable: true\n        },\n        focus: {\n            value: function () {\n                this.au.controller.viewModel.focus();\n            },\n            configurable: true\n        },\n        blur: {\n            value: function () {\n                this.au.controller.viewModel.blur();\n            },\n            configurable: true\n        }\n    });\n}\n//# sourceMappingURL=mdc-checkbox.js.map","import { PLATFORM, bindingMode, CheckedObserver, EventSubscriber } from 'aurelia-framework';\nimport { MdcComponentAdapters } from '@aurelia-mdc-web/base';\nexport { MdcChip } from './mdc-chip/mdc-chip';\nexport { MdcChipSet } from './mdc-chip-set/mdc-chip-set';\nexport { MdcChipAction } from './mdc-chip-action/mdc-chip-action';\nexport function configure(config) {\n    config.container.get(MdcComponentAdapters).registerMdcElementConfig(chipConfig);\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-chip/mdc-chip'),\n        PLATFORM.moduleName('./mdc-chip-set/mdc-chip-set'),\n        PLATFORM.moduleName('./mdc-chip-action/mdc-chip-action'),\n        PLATFORM.moduleName('./mdc-chip-action/enhance-mdc-chip-action')\n    ]);\n    config.aurelia.use.plugin(PLATFORM.moduleName('@aurelia-mdc-web/ripple'));\n}\nvar chipConfig = {\n    tagName: 'mdc-chip',\n    properties: {\n        checked: {\n            defaultBindingMode: bindingMode.twoWay,\n            getObserver: function (element, _, observerLocator) {\n                return new CheckedObserver(element, new EventSubscriber(['change']), observerLocator);\n            }\n        }\n    }\n};\n//# sourceMappingURL=index.js.map","import { __decorate, __values } from \"tslib\";\nimport { viewEngineHooks } from 'aurelia-framework';\nvar EnhanceMdcChipAction = /** @class */ (function () {\n    function EnhanceMdcChipAction() {\n    }\n    EnhanceMdcChipAction.prototype.beforeCompile = function (template) {\n        var e_1, _a;\n        var actions = template.querySelectorAll('[mdc-chip-action]');\n        try {\n            for (var _b = __values(Array.from(actions)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var i = _c.value;\n                i.setAttribute('as-element', 'mdc-chip-action');\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    EnhanceMdcChipAction = __decorate([\n        viewEngineHooks\n    ], EnhanceMdcChipAction);\n    return EnhanceMdcChipAction;\n}());\nexport { EnhanceMdcChipAction };\n//# sourceMappingURL=enhance-mdc-chip-action.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata } from \"tslib\";\nimport { customElement, inject, useView, PLATFORM } from 'aurelia-framework';\nimport { closest } from '@material/dom/ponyfill';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCChipActionCssClasses, MDCChipActionEvents } from '@material/chips';\nimport { MDCChipTrailingActionFoundation } from '@material/chips/action/trailing-foundation';\nimport { MDCChipPrimaryActionFoundation } from '@material/chips/action/primary-foundation';\nimport { GRAPHIC_SELECTED_WIDTH_STYLE_PROP, computePrimaryActionRippleClientRect } from '@material/chips/action/component-ripple';\nMDCChipActionEvents.INTERACTION = MDCChipActionEvents.INTERACTION.toLowerCase();\nMDCChipActionEvents.NAVIGATION = MDCChipActionEvents.NAVIGATION.toLowerCase();\nvar actionId = 0;\n/**\n * @hidden\n * @selector mdc-chip-action\n */\nvar MdcChipAction = /** @class */ (function (_super) {\n    __extends(MdcChipAction, _super);\n    function MdcChipAction(root) {\n        var _this = _super.call(this, root) || this;\n        _this.root = root;\n        _this.computeRippleClientRect = function () {\n            if (_this.root.classList.contains(MDCChipActionCssClasses.PRIMARY_ACTION)) {\n                var chipRoot = closest(_this.root, \".\".concat(MDCChipActionCssClasses.CHIP_ROOT));\n                // Return the root client rect since it's better than nothing\n                if (!chipRoot) {\n                    return _this.root.getBoundingClientRect();\n                }\n                var graphicWidth = window.getComputedStyle(chipRoot).getPropertyValue(GRAPHIC_SELECTED_WIDTH_STYLE_PROP);\n                return computePrimaryActionRippleClientRect(chipRoot.getBoundingClientRect(), graphicWidth);\n            }\n            return _this.root.getBoundingClientRect();\n        };\n        _this.root.id = \"mdc-chip-action-\".concat(++actionId);\n        return _this;\n    }\n    MdcChipAction.prototype.selectableChanged = function () {\n        if (this.selectable) {\n            this.root.setAttribute('role', 'option');\n        }\n        else {\n            this.root.removeAttribute('role');\n        }\n    };\n    Object.defineProperty(MdcChipAction.prototype, \"selected\", {\n        get: function () {\n            var _a, _b;\n            return (_b = (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.isSelected()) !== null && _b !== void 0 ? _b : this._selected;\n        },\n        set: function (value) {\n            var _a;\n            this._selected = value;\n            (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setSelected(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcChipAction.prototype.disabledChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setDisabled(this.disabled);\n                        if (this.disabled) {\n                            this.root.setAttribute('disabled', 'true');\n                        }\n                        else {\n                            this.root.removeAttribute('disabled');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcChipAction.prototype.initialSyncWithDOM = function () {\n        if (this._selected !== undefined) {\n            this.selected = this._selected;\n        }\n    };\n    MdcChipAction.prototype.handleClick = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleClick();\n    };\n    MdcChipAction.prototype.handleKeydown = function (event) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleKeydown(event);\n        return true;\n    };\n    MdcChipAction.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            emitEvent: function (eventName, eventDetail) {\n                _this.emit(eventName, eventDetail, true /* shouldBubble */);\n            },\n            focus: function () {\n                _this.root.focus();\n            },\n            getAttribute: function (attrName) { return _this.root.getAttribute(attrName); },\n            getElementID: function () { return _this.root.id; },\n            removeAttribute: function (name) {\n                _this.root.removeAttribute(name);\n            },\n            setAttribute: function (name, value) {\n                _this.root.setAttribute(name, value);\n            },\n        };\n        if (this.root.classList.contains(MDCChipActionCssClasses.TRAILING_ACTION)) {\n            return new MDCChipTrailingActionFoundation(adapter);\n        }\n        // Default to the primary foundation\n        return new MDCChipPrimaryActionFoundation(adapter);\n    };\n    MdcChipAction.prototype.isFocusable = function () {\n        var _a, _b;\n        return (_b = (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.isFocusable()) !== null && _b !== void 0 ? _b : false;\n    };\n    MdcChipAction.prototype.setFocus = function (behavior) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setFocus(behavior);\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcChipAction.prototype, \"selectable\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcChipAction.prototype, \"trailing\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcChipAction.prototype, \"icon\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcChipAction.prototype, \"disabled\", void 0);\n    MdcChipAction = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-chip-action.html')),\n        customElement('mdc-chip-action'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcChipAction);\n    return MdcChipAction;\n}(MdcComponent));\nexport { MdcChipAction };\n//# sourceMappingURL=mdc-chip-action.js.map","import { __decorate, __extends, __metadata } from \"tslib\";\nimport { useView, inject, PLATFORM, customElement, children } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { MDCChipSetFoundation, MDCChipSetEvents } from '@material/chips';\nimport { announce } from '@material/dom/announce';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nMDCChipSetEvents.INTERACTION = MDCChipSetEvents.INTERACTION.toLowerCase();\nMDCChipSetEvents.REMOVAL = MDCChipSetEvents.REMOVAL.toLowerCase();\nMDCChipSetEvents.SELECTION = MDCChipSetEvents.SELECTION.toLowerCase();\nvar chipSetId = 0;\nvar MdcChipSet = /** @class */ (function (_super) {\n    __extends(MdcChipSet, _super);\n    function MdcChipSet() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.id = \"mdc-chip-set-\".concat(++chipSetId);\n        return _this;\n    }\n    MdcChipSet.prototype.handleChipInteraction = function (event) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleChipInteraction(event);\n    };\n    MdcChipSet.prototype.handleChipAnimation = function (event) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleChipAnimation(event);\n    };\n    MdcChipSet.prototype.handleChipNavigation = function (event) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleChipNavigation(event);\n    };\n    MdcChipSet.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            announceMessage: function (message) {\n                announce(message);\n            },\n            emitEvent: function (eventName, eventDetail) {\n                _this.emit(eventName, eventDetail, true /* shouldBubble */);\n            },\n            getAttribute: function (attrName) { return _this.root.getAttribute(attrName); },\n            getChipActionsAtIndex: function (index) {\n                if (!_this.isIndexValid(index)) {\n                    return [];\n                }\n                return _this.chips[index].getActions();\n            },\n            getChipCount: function () { return _this.chips.length; },\n            getChipIdAtIndex: function (index) {\n                if (!_this.isIndexValid(index)) {\n                    return '';\n                }\n                return _this.chips[index].getElementID();\n            },\n            getChipIndexById: function (id) {\n                return _this.chips.findIndex(function (chip) { return chip.getElementID() === id; });\n            },\n            isChipFocusableAtIndex: function (index, action) {\n                if (!_this.isIndexValid(index)) {\n                    return false;\n                }\n                return _this.chips[index].isActionFocusable(action);\n            },\n            isChipSelectableAtIndex: function (index, action) {\n                if (!_this.isIndexValid(index)) {\n                    return false;\n                }\n                return _this.chips[index].isActionSelectable(action);\n            },\n            isChipSelectedAtIndex: function (index, action) {\n                if (!_this.isIndexValid(index)) {\n                    return false;\n                }\n                return _this.chips[index].isActionSelected(action);\n            },\n            removeChipAtIndex: function (index) {\n                if (!_this.isIndexValid(index)) {\n                    return;\n                }\n                _this.chips[index].destroy();\n                _this.chips[index].remove();\n                _this.chips.splice(index, 1);\n            },\n            setChipFocusAtIndex: function (index, action, focus) {\n                if (!_this.isIndexValid(index)) {\n                    return;\n                }\n                _this.chips[index].setActionFocus(action, focus);\n            },\n            setChipSelectedAtIndex: function (index, action, selected) {\n                if (!_this.isIndexValid(index)) {\n                    return;\n                }\n                _this.chips[index].setActionSelected(action, selected);\n            },\n            startChipAnimationAtIndex: function (index, animation) {\n                if (!_this.isIndexValid(index)) {\n                    return;\n                }\n                _this.chips[index].startAnimation(animation);\n            },\n        };\n        // Default to the primary foundation\n        return new MDCChipSetFoundation(adapter);\n    };\n    MdcChipSet.prototype.isIndexValid = function (index) {\n        return index > -1 && index < this.chips.length;\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcChipSet.prototype, \"overflow\", void 0);\n    __decorate([\n        children('mdc-chip'),\n        __metadata(\"design:type\", Array)\n    ], MdcChipSet.prototype, \"chips\", void 0);\n    MdcChipSet = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-chip-set.html')),\n        customElement('mdc-chip-set')\n    ], MdcChipSet);\n    return MdcChipSet;\n}(MdcComponent));\nexport { MdcChipSet };\n//# sourceMappingURL=mdc-chip-set.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata, __read, __values } from \"tslib\";\nimport { inject, customElement, useView, PLATFORM, processContent } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCChipFoundation } from '@material/chips/chip/foundation';\nimport { MDCChipEvents, MDCChipActionType } from '@material/chips';\nMDCChipEvents.INTERACTION = MDCChipEvents.INTERACTION.toLowerCase();\nMDCChipEvents.ANIMATION = MDCChipEvents.ANIMATION.toLowerCase();\nMDCChipEvents.NAVIGATION = MDCChipEvents.NAVIGATION.toLowerCase();\nvar chipId = 0;\n/**\n * @selector mdc-chip\n * @emits mdcchip:interaction | Indicates the chip was interacted with (via click/tap or Enter key)\n * @emits mdcchip:removal | Indicates the chip removal event from a chip set\n * @emits mdcchip:selection | Indicates a selection event has occurred on a chip\n */\nvar MdcChip = /** @class */ (function (_super) {\n    __extends(MdcChip, _super);\n    function MdcChip(root) {\n        var _this = _super.call(this, root) || this;\n        defineMdcChipElementApis(_this.root);\n        _this.root.id = \"mdc-chip-\".concat(++chipId);\n        return _this;\n    }\n    MdcChip_1 = MdcChip;\n    MdcChip.processContent = function (_viewCompiler, _resources, element) {\n        var primaryAction = element.querySelector('[mdc-chip-action]:not([trailing])');\n        primaryAction === null || primaryAction === void 0 ? void 0 : primaryAction.setAttribute('slot', 'primary-action');\n        var trailingAction = element.querySelector('[mdc-chip-action][trailing]');\n        trailingAction === null || trailingAction === void 0 ? void 0 : trailingAction.setAttribute('slot', trailingAction.hasAttribute('non-navigable') ? 'non-navigable-trailing-action' : 'trailing-action');\n        return true;\n    };\n    Object.defineProperty(MdcChip.prototype, \"selected\", {\n        /**\n         * @return Whether the chip is selected.\n         */\n        get: function () {\n            var _a, _b;\n            return (_b = (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.isActionSelected(MDCChipActionType.PRIMARY)) !== null && _b !== void 0 ? _b : this._selected;\n        },\n        /** Sets selected state on the chip. */\n        set: function (selected) {\n            var _a;\n            this._selected = selected;\n            (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setActionSelected(MDCChipActionType.PRIMARY, selected);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcChip.prototype.filterChanged = function () {\n        if (this.filter) {\n            this.root.setAttribute('role', 'presentation');\n        }\n        else {\n            this.root.setAttribute('role', 'row');\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/require-await\n    MdcChip.prototype.initialise = function () {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            var primaryAction, trailingAction;\n            return __generator(this, function (_c) {\n                this.actions = new Map();\n                primaryAction = (_a = this.root.querySelector('[mdc-chip-action]:not([trailing])')) === null || _a === void 0 ? void 0 : _a.au.controller.viewModel;\n                this.actions.set(MDCChipActionType.PRIMARY, primaryAction);\n                trailingAction = (_b = this.root.querySelector('[mdc-chip-action][trailing]')) === null || _b === void 0 ? void 0 : _b.au.controller.viewModel;\n                if (trailingAction) {\n                    this.actions.set(MDCChipActionType.TRAILING, trailingAction);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    MdcChip.prototype.initialSyncWithDOM = function () {\n        if (this._selected !== undefined) {\n            this.selected = this._selected;\n        }\n    };\n    /** Set focus to the chip. */\n    MdcChip.prototype.focus = function () {\n        this.root.focus();\n    };\n    MdcChip.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) {\n                _this.root.classList.add(className);\n            },\n            emitEvent: function (eventName, eventDetail) {\n                _this.emit(eventName, eventDetail, true /* shouldBubble */);\n            },\n            getActions: function () {\n                var e_1, _a;\n                var actions = [];\n                try {\n                    for (var _b = __values(_this.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var _d = __read(_c.value, 1), key = _d[0];\n                        actions.push(key);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                return actions;\n            },\n            getAttribute: function (attrName) { return _this.root.getAttribute(attrName); },\n            getElementID: function () { return _this.root.id; },\n            getOffsetWidth: function () {\n                return _this.root.offsetWidth;\n            },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            isActionSelectable: function (actionType) {\n                var action = _this.actions.get(actionType);\n                if (action) {\n                    return action.selectable;\n                }\n                return false;\n            },\n            isActionSelected: function (actionType) {\n                var action = _this.actions.get(actionType);\n                if (action) {\n                    return action.selected;\n                }\n                return false;\n            },\n            isActionFocusable: function (actionType) {\n                var action = _this.actions.get(actionType);\n                if (action) {\n                    return action.isFocusable();\n                }\n                return false;\n            },\n            isActionDisabled: function (actionType) {\n                var action = _this.actions.get(actionType);\n                if (action) {\n                    return action.disabled;\n                }\n                return false;\n            },\n            isRTL: function () { return window.getComputedStyle(_this.root).getPropertyValue('direction') === 'rtl'; },\n            removeClass: function (className) {\n                _this.root.classList.remove(className);\n            },\n            setActionDisabled: function (actionType, isDisabled) {\n                var action = _this.actions.get(actionType);\n                if (action) {\n                    action.disabled = isDisabled;\n                }\n            },\n            setActionFocus: function (actionType, behavior) {\n                var action = _this.actions.get(actionType);\n                if (action) {\n                    action.setFocus(behavior);\n                }\n            },\n            setActionSelected: function (actionType, isSelected) {\n                var action = _this.actions.get(actionType);\n                if (action) {\n                    if (action.selected !== isSelected) {\n                        action.selected = isSelected;\n                    }\n                }\n            },\n            setStyleProperty: function (prop, value) {\n                _this.root.style.setProperty(prop, value);\n            },\n        };\n        // Default to the primary foundation\n        return new MDCChipFoundation(adapter);\n    };\n    MdcChip.prototype.handleActionInteraction = function (event) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleActionInteraction(event);\n        this.emit('change', {}, true);\n    };\n    MdcChip.prototype.handleActionNavigation = function (event) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleActionNavigation(event);\n    };\n    MdcChip.prototype.handleAnimationEnd = function (event) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleAnimationEnd(event);\n    };\n    MdcChip.prototype.handleTransitionEnd = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleTransitionEnd();\n    };\n    MdcChip.prototype.getActions = function () {\n        var _a, _b;\n        return (_b = (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.getActions()) !== null && _b !== void 0 ? _b : [];\n    };\n    MdcChip.prototype.getElementID = function () {\n        var _a, _b;\n        return (_b = (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.getElementID()) !== null && _b !== void 0 ? _b : '';\n    };\n    MdcChip.prototype.isActionFocusable = function (action) {\n        return this.foundation.isActionFocusable(action);\n    };\n    MdcChip.prototype.isActionSelectable = function (action) {\n        return this.foundation.isActionSelectable(action);\n    };\n    MdcChip.prototype.isActionSelected = function (action) {\n        return this.foundation.isActionSelected(action);\n    };\n    MdcChip.prototype.setActionFocus = function (action, focus) {\n        this.foundation.setActionFocus(action, focus);\n    };\n    MdcChip.prototype.setActionSelected = function (action, isSelected) {\n        this.foundation.setActionSelected(action, isSelected);\n    };\n    MdcChip.prototype.startAnimation = function (animation) {\n        this.foundation.startAnimation(animation);\n    };\n    MdcChip.prototype.remove = function () {\n        var parent = this.root.parentNode;\n        if (parent !== null) {\n            parent.removeChild(this.root);\n        }\n    };\n    var MdcChip_1;\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcChip.prototype, \"disabled\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcChip.prototype, \"filter\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcChip.prototype, \"icon\", void 0);\n    MdcChip = MdcChip_1 = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-chip.html')),\n        customElement('mdc-chip'),\n        processContent(MdcChip_1.processContent),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MdcChip);\n    return MdcChip;\n}(MdcComponent));\nexport { MdcChip };\nfunction defineMdcChipElementApis(element) {\n    Object.defineProperties(element, {\n        type: {\n            value: 'checkbox',\n        },\n        checked: {\n            get: function () {\n                return this.au.controller.viewModel.selected;\n            },\n            set: function (value) {\n                this.au.controller.viewModel.selected = value;\n            },\n            configurable: true\n        },\n        focus: {\n            value: function () {\n                this.au.controller.viewModel.focus();\n            },\n            configurable: true\n        }\n    });\n}\n//# sourceMappingURL=mdc-chip.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcCircularProgress } from './mdc-circular-progress';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-circular-progress')\n    ]);\n}\n//# sourceMappingURL=index.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCCircularProgressFoundation, strings } from '@material/circular-progress';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { inject, useView, PLATFORM, customElement } from 'aurelia-framework';\n/**\n * @selector mdc-circular-progress\n */\nvar MdcCircularProgress = /** @class */ (function (_super) {\n    __extends(MdcCircularProgress, _super);\n    function MdcCircularProgress() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.radius = 47.5;\n        /** Size in pixels */\n        _this.size = 100;\n        /** Stroke width in pixels */\n        _this.strokeWidth = 10;\n        return _this;\n    }\n    MdcCircularProgress.prototype.sizeChanged = function () {\n        this.updateSizeAndStroke();\n    };\n    MdcCircularProgress.prototype.strokeWidthChanged = function () {\n        this.updateSizeAndStroke();\n    };\n    MdcCircularProgress.prototype.progressChanged = function () {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            var determinate;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _c.sent();\n                        determinate = this.progress !== undefined && !isNaN(this.progress);\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setDeterminate(determinate);\n                        if (determinate) {\n                            (_b = this.foundation) === null || _b === void 0 ? void 0 : _b.setProgress(this.progress);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcCircularProgress.prototype.bind = function () {\n        this.updateSizeAndStroke();\n    };\n    MdcCircularProgress.prototype.updateSizeAndStroke = function () {\n        var _a;\n        this.radius = (this.size - 4) / 2 - this.strokeWidth;\n        // foundation gets the radius from the element itself\n        // set the attribute explicitly to avoid issues related to async binding\n        (_a = this.determinateCircle_) === null || _a === void 0 ? void 0 : _a.setAttribute('r', this.radius.toString());\n        this.strokeDasharray = 2 * this.radius * Math.PI;\n        this.strokeDashoffset = this.strokeDasharray / 2;\n    };\n    // eslint-disable-next-line @typescript-eslint/require-await\n    MdcCircularProgress.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.progressChanged();\n                return [2 /*return*/];\n            });\n        });\n    };\n    MdcCircularProgress.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            getDeterminateCircleAttribute: function (attributeName) { var _a, _b; return (_b = (_a = _this.determinateCircle_) === null || _a === void 0 ? void 0 : _a.getAttribute(attributeName)) !== null && _b !== void 0 ? _b : null; },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            removeAttribute: function (attributeName) { return _this.root.removeAttribute(attributeName); },\n            setAttribute: function (attributeName, value) { return _this.root.setAttribute(attributeName, value); },\n            setDeterminateCircleAttribute: function (attributeName, value) {\n                var _a;\n                if (attributeName === strings.STROKE_DASHOFFSET) {\n                    // set offset via binding, otherwise it gets overwritten\n                    _this.strokeDashoffset = parseInt(value);\n                }\n                else {\n                    (_a = _this.determinateCircle_) === null || _a === void 0 ? void 0 : _a.setAttribute(attributeName, value);\n                }\n            },\n        };\n        return new MDCCircularProgressFoundation(adapter);\n    };\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcCircularProgress.prototype, \"size\", void 0);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcCircularProgress.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcCircularProgress.prototype, \"progress\", void 0);\n    MdcCircularProgress = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-circular-progress.html')),\n        customElement('mdc-circular-progress')\n    ], MdcCircularProgress);\n    return MdcCircularProgress;\n}(MdcComponent));\nexport { MdcCircularProgress };\n//# sourceMappingURL=mdc-circular-progress.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcDataTable } from './mdc-data-table';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-data-table'),\n        PLATFORM.moduleName('./mdc-data-table-row')\n    ]);\n    config.aurelia.use\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/checkbox'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/icon'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/linear-progress'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/select'));\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __metadata, __values } from \"tslib\";\nimport { customAttribute, inject } from 'aurelia-framework';\nimport { cssClasses } from '@material/data-table';\n/**\n * Required. Marks the table row.\n * @selector [mdc-data-table-row]\n */\nvar MdcDataTableRow = /** @class */ (function () {\n    function MdcDataTableRow(root) {\n        this.root = root;\n    }\n    MdcDataTableRow.prototype.attached = function () {\n        var e_1, _a;\n        this.root.classList.add(cssClasses.ROW);\n        var cells = this.root.querySelectorAll('th,td');\n        try {\n            for (var _b = __values(Array.from(cells)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var cell = _c.value;\n                cell.classList.add(cssClasses.CELL);\n                cell.classList.toggle(cssClasses.CELL_NUMERIC, cell.hasAttribute('numeric'));\n                if (cell.tagName === 'TH') {\n                    cell.setAttribute('scope', 'row');\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    MdcDataTableRow = __decorate([\n        customAttribute('mdc-data-table-row'),\n        inject(Element),\n        __metadata(\"design:paramtypes\", [HTMLTableRowElement])\n    ], MdcDataTableRow);\n    return MdcDataTableRow;\n}());\nexport { MdcDataTableRow };\n//# sourceMappingURL=mdc-data-table-row.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata, __values } from \"tslib\";\n/* eslint-disable no-template-curly-in-string */\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCDataTableFoundation, selectors, events, cssClasses, dataAttributes, SortValue, messages } from '@material/data-table';\nimport { closest } from '@material/dom/ponyfill';\nimport { inject, customElement, useView, PLATFORM, bindingMode, computedFrom, processContent } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nevents.ROW_CLICK = events.ROW_CLICK.toLowerCase();\nevents.ROW_SELECTION_CHANGED = events.ROW_SELECTION_CHANGED.toLowerCase();\nevents.SELECTED_ALL = events.SELECTED_ALL.toLowerCase();\nevents.SORTED = events.SORTED.toLowerCase();\nevents.UNSELECTED_ALL = events.UNSELECTED_ALL.toLowerCase();\nvar NAVIGATION_EVENT = 'mdcdatatable:navigation';\n/**\n * Use `pagination-total` replaceable part to customise pagination total label.\n * @selector mdc-data-table\n * @emits mdcdatatable:rowselectionchanged | Emitted when row checkbox is checked or unchecked\n * @emits mdcdatatable:selectedall | Emitted when header row checkbox is checked\n * @emits mdcdatatable:unselectedall | Emitted when header row checkbox is unchecked\n * @emits mdcdatatable:sorted | Emitted when clicked on sortable header cell\n * @emits mdcdatatable:rowclick | Emitted when a row is clicked\n */\nvar MdcDataTable = /** @class */ (function (_super) {\n    __extends(MdcDataTable, _super);\n    function MdcDataTable() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Caption for the page size selector */\n        _this.rowsPerPageLabel = 'Rows per page';\n        /** Page sizes available for selection, e.g. [10, 25, 100, 'All'] */\n        _this.pageSizes = [10, 25, 100];\n        /** Selected page size */\n        _this.pageSize = 10;\n        return _this;\n    }\n    MdcDataTable_1 = MdcDataTable;\n    MdcDataTable.processContent = function (_viewCompiler, _resources, element) {\n        var e_1, _a;\n        var table = element.querySelector('table');\n        if (!table) {\n            throw new Error('Have you forgotten the <table> tag in you data table markup?');\n        }\n        table.classList.add('mdc-data-table__table');\n        table.setAttribute('aria-label', '${ariaLabel}');\n        var headerRow = element.querySelector('thead>tr');\n        if (!headerRow) {\n            throw new Error('Have you forgotten the <thead><tr> tags in you data table markup?');\n        }\n        headerRow.classList.add(cssClasses.HEADER_ROW);\n        headerRow.setAttribute('ref', 'headerRow');\n        var headerCells = headerRow.querySelectorAll('th');\n        try {\n            for (var _b = __values(Array.from(headerCells)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var th = _c.value;\n                th.classList.add(cssClasses.HEADER_CELL);\n                th.classList.toggle('mdc-data-table__header-cell--numeric', th.hasAttribute('numeric'));\n                th.setAttribute('role', 'columnheader');\n                th.setAttribute('scope', 'col');\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var tbody = element.querySelector('tbody');\n        if (!tbody) {\n            throw new Error('Have you forgotten the <tbody> tag in you data table markup?');\n        }\n        tbody.classList.add(cssClasses.CONTENT);\n        tbody.setAttribute('ref', 'content');\n        return true;\n    };\n    Object.defineProperty(MdcDataTable.prototype, \"paginationPosition\", {\n        get: function () {\n            if (typeof this.pageSize !== 'number' || this.pageSize === undefined || isNaN(this.activePage) || isNaN(this.recordsCount)) {\n                return undefined;\n            }\n            var pagesCount = Math.ceil(this.recordsCount / this.pageSize);\n            return this.activePage === 1\n                ? (pagesCount === 1 ? undefined : 'first')\n                : (this.activePage === pagesCount ? 'last' : 'between');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MdcDataTable.prototype, \"paginationTotal\", {\n        get: function () {\n            if (typeof this.pageSize !== 'number' || this.pageSize === undefined || isNaN(this.activePage) || isNaN(this.recordsCount)) {\n                return undefined;\n            }\n            var firstRecord = this.pageSize * (this.activePage - 1) + 1;\n            var lastRecord = Math.min(this.pageSize * this.activePage, this.recordsCount);\n            return \"\".concat(firstRecord, \"-\").concat(lastRecord, \" of \").concat(this.recordsCount);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcDataTable.prototype.busyChanged = function () {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _c.sent();\n                        if (this.busy) {\n                            (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.showProgress();\n                        }\n                        else {\n                            (_b = this.foundation) === null || _b === void 0 ? void 0 : _b.hideProgress();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(MdcDataTable.prototype, \"rowCheckboxList\", {\n        get: function () {\n            return Array.from(this.root.querySelectorAll('tbody>tr .mdc-checkbox'))\n                .map(function (x) { var _a; return (_a = x.au) === null || _a === void 0 ? void 0 : _a.controller.viewModel; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MdcDataTable.prototype, \"headerRowCheckbox\", {\n        get: function () {\n            var _a;\n            return (_a = this.root.querySelector('thead>tr .mdc-checkbox')) === null || _a === void 0 ? void 0 : _a.au.controller.viewModel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcDataTable.prototype.handleHeaderRowCheckboxChange = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleHeaderRowCheckboxChange();\n    };\n    MdcDataTable.prototype.handleRowCheckboxChange = function (event) {\n        var _a;\n        if (event.target.type === 'checkbox') {\n            (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleRowCheckboxChange(event);\n        }\n    };\n    MdcDataTable.prototype.headerRowClickListener = function (event) {\n        this.handleHeaderRowClick(event);\n    };\n    MdcDataTable.prototype.handleNavigationClick = function (type) {\n        this.emit(NAVIGATION_EVENT, { type: type }, true);\n    };\n    MdcDataTable.prototype.handleContentClick = function (event) {\n        var _a;\n        var dataRowEl = closest(event.target, selectors.ROW);\n        if (!dataRowEl) {\n            return;\n        }\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleRowClick({\n            rowId: this.getRowIdByRowElement(dataRowEl),\n            row: dataRowEl,\n        });\n    };\n    /**\n     * Re-initializes header row checkbox and row checkboxes when selectable rows are added or removed from table.\n     */\n    MdcDataTable.prototype.layout = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.layout();\n    };\n    /**\n     * @return Returns array of header row cell elements.\n     */\n    MdcDataTable.prototype.getHeaderCells = function () {\n        return [].slice.call(this.root.querySelectorAll(selectors.HEADER_CELL));\n    };\n    /**\n     * @return Returns array of row elements.\n     */\n    MdcDataTable.prototype.getRows = function () {\n        return this.foundation.getRows();\n    };\n    /**\n     * @return Returns array of selected row ids.\n     */\n    MdcDataTable.prototype.getSelectedRowIds = function () {\n        return this.foundation.getSelectedRowIds();\n    };\n    /**\n     * Sets selected row ids. Overwrites previously selected rows.\n     * @param rowIds Array of row ids that needs to be selected.\n     */\n    MdcDataTable.prototype.setSelectedRowIds = function (rowIds) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setSelectedRowIds(rowIds);\n    };\n    MdcDataTable.prototype.handleEvent = function (evt) {\n        switch (evt.currentTarget) {\n            case this.header:\n                switch (evt.type) {\n                    case 'change':\n                        this.handleHeaderRowCheckboxChange();\n                        break;\n                    case 'click':\n                        this.handleHeaderRowClick(evt);\n                        break;\n                }\n                break;\n            case this.content:\n                switch (evt.type) {\n                    case 'change':\n                        this.handleRowCheckboxChange(evt);\n                        break;\n                }\n                break;\n        }\n    };\n    MdcDataTable.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var rowCheckboxList;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.header = this.root.querySelector(\".\".concat(cssClasses.HEADER_ROW));\n                        this.header.addEventListener('change', this);\n                        this.header.addEventListener('click', this);\n                        this.content = this.root.querySelector(\".\".concat(cssClasses.CONTENT));\n                        this.content.addEventListener('change', this);\n                        this.content.addEventListener('click', this);\n                        rowCheckboxList = this.rowCheckboxList;\n                        this.rowCheckboxList.forEach(function (x) { return x.root.classList.add(cssClasses.ROW_CHECKBOX); });\n                        if (this.headerRowCheckbox) {\n                            this.headerRowCheckbox.root.classList.add(cssClasses.HEADER_ROW_CHECKBOX);\n                            rowCheckboxList.push(this.headerRowCheckbox);\n                        }\n                        return [4 /*yield*/, Promise.all(rowCheckboxList.map(function (x) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                return [2 /*return*/, x.initialised];\n                            }); }); }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcDataTable.prototype.initialSyncWithDOM = function () {\n        var _a;\n        var rowCheckboxList = this.rowCheckboxList;\n        for (var i = 0; i < rowCheckboxList.length; ++i) {\n            if (rowCheckboxList[i].checked) {\n                this.getRowByIndex(i).classList.add(cssClasses.ROW_SELECTED);\n            }\n        }\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.layout();\n    };\n    MdcDataTable.prototype.destroy = function () {\n        this.header.removeEventListener('change', this);\n        this.header.removeEventListener('click', this);\n        this.content.removeEventListener('change', this);\n    };\n    MdcDataTable.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            getHeaderCellElements: function () { return _this.getHeaderCells(); },\n            getHeaderCellCount: function () { return _this.getHeaderCells().length; },\n            getAttributeByHeaderCellIndex: function (index, attribute) { return _this.getHeaderCells()[index].getAttribute(attribute); },\n            setAttributeByHeaderCellIndex: function (index, attribute, value) { return _this.getHeaderCells()[index].setAttribute(attribute, value); },\n            setClassNameByHeaderCellIndex: function (index, className) { return _this.getHeaderCells()[index].classList.add(className); },\n            removeClassNameByHeaderCellIndex: function (index, className) {\n                _this.getHeaderCells()[index].classList.remove(className);\n            },\n            notifySortAction: function (data) {\n                _this.emit(events.SORTED, data, /** shouldBubble */ true);\n            },\n            getTableContainerHeight: function () {\n                var tableContainer = _this.root.querySelector(\".\".concat(cssClasses.TABLE_CONTAINER));\n                if (!tableContainer) {\n                    throw new Error('MDCDataTable: Table container element not found.');\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-explicit-any\n                return tableContainer.getBoundingClientRect().height;\n            },\n            getTableHeaderHeight: function () {\n                var tableHeader = _this.root.querySelector(selectors.HEADER_ROW);\n                if (!tableHeader) {\n                    throw new Error('MDCDataTable: Table header element not found.');\n                }\n                return tableHeader.getBoundingClientRect().height;\n            },\n            setProgressIndicatorStyles: function (styles) {\n                var progressIndicator = _this.root.querySelector(selectors.PROGRESS_INDICATOR);\n                if (!progressIndicator) {\n                    throw new Error('MDCDataTable: Progress indicator element not found.');\n                }\n                Object.assign(progressIndicator.style, styles);\n            },\n            addClassAtRowIndex: function (rowIndex, className) {\n                _this.getRows()[rowIndex].classList.add(className);\n            },\n            getRowCount: function () { return _this.getRows().length; },\n            getRowElements: function () { return [].slice.call(_this.root.querySelectorAll(selectors.ROW)); },\n            getRowIdAtIndex: function (rowIndex) {\n                return _this.getRows()[rowIndex].getAttribute(dataAttributes.ROW_ID);\n            },\n            getRowIndexByChildElement: function (el) { return _this.getRows().indexOf(closest(el, selectors.ROW)); },\n            getSelectedRowCount: function () { return _this.root.querySelectorAll(selectors.ROW_SELECTED).length; },\n            isCheckboxAtRowIndexChecked: function (rowIndex) { return _this.rowCheckboxList[rowIndex].checked; },\n            isHeaderRowCheckboxChecked: function () { var _a, _b; return (_b = (_a = _this.headerRowCheckbox) === null || _a === void 0 ? void 0 : _a.checked) !== null && _b !== void 0 ? _b : false; },\n            isRowsSelectable: function () { return !!_this.root.querySelector(selectors.ROW_CHECKBOX); },\n            notifyRowSelectionChanged: function (data) {\n                _this.emit(events.ROW_SELECTION_CHANGED, {\n                    row: _this.getRowByIndex(data.rowIndex),\n                    rowId: _this.getRowIdByIndex(data.rowIndex),\n                    rowIndex: data.rowIndex,\n                    selected: data.selected,\n                }, /** shouldBubble */ true);\n            },\n            notifySelectedAll: function () {\n                _this.emit(events.SELECTED_ALL, {}, /** shouldBubble */ true);\n            },\n            notifyUnselectedAll: function () {\n                _this.emit(events.UNSELECTED_ALL, {}, /** shouldBubble */ true);\n            },\n            notifyRowClick: function (data) {\n                _this.emit(events.ROW_CLICK, data, /** shouldBubble */ true);\n            },\n            registerHeaderRowCheckbox: function () {\n                // const checkboxEl = this.root.querySelector<IMdcCheckboxElement>(selectors.HEADER_ROW_CHECKBOX);\n                // this.headerRowCheckbox = checkboxEl?.au?.controller.viewModel;\n            },\n            registerRowCheckboxes: function () {\n                // this.rowCheckboxList = [];\n                // this.getRows().forEach((rowEl) => {\n                //   const checkbox = rowEl.querySelector<IMdcCheckboxElement>(selectors.ROW_CHECKBOX)?.au?.controller.viewModel;\n                //   if (checkbox) {\n                //     this.rowCheckboxList.push(checkbox);\n                //   }\n                // });\n            },\n            removeClassAtRowIndex: function (rowIndex, className) {\n                _this.getRows()[rowIndex].classList.remove(className);\n            },\n            setAttributeAtRowIndex: function (rowIndex, attr, value) {\n                _this.getRows()[rowIndex].setAttribute(attr, value);\n            },\n            setHeaderRowCheckboxChecked: function (checked) {\n                if (_this.headerRowCheckbox) {\n                    _this.headerRowCheckbox.checked = checked;\n                }\n            },\n            setHeaderRowCheckboxIndeterminate: function (indeterminate) {\n                if (_this.headerRowCheckbox) {\n                    _this.headerRowCheckbox.indeterminate = indeterminate;\n                }\n            },\n            setRowCheckboxCheckedAtIndex: function (rowIndex, checked) {\n                _this.rowCheckboxList[rowIndex].checked = checked;\n            },\n            setSortStatusLabelByHeaderCellIndex: function (columnIndex, sortValue) {\n                var headerCell = _this.getHeaderCells()[columnIndex];\n                var sortStatusLabel = headerCell.querySelector(selectors.SORT_STATUS_LABEL);\n                if (!sortStatusLabel) {\n                    return;\n                }\n                sortStatusLabel.textContent =\n                    _this.getSortStatusMessageBySortValue(sortValue);\n            }\n        };\n        return new MDCDataTableFoundation(adapter);\n    };\n    MdcDataTable.prototype.getRowByIndex = function (index) {\n        return this.getRows()[index];\n    };\n    MdcDataTable.prototype.getRowIdByIndex = function (index) {\n        return this.getRowByIndex(index).getAttribute(dataAttributes.ROW_ID);\n    };\n    MdcDataTable.prototype.handleHeaderRowClick = function (event) {\n        var _a;\n        var headerCell = closest(event.target, selectors.HEADER_CELL_WITH_SORT);\n        if (!headerCell) {\n            return;\n        }\n        var columnId = headerCell.getAttribute(dataAttributes.COLUMN_ID);\n        var columnIndex = this.getHeaderCells().indexOf(headerCell);\n        if (columnIndex === -1) {\n            return;\n        }\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleSortAction({ columnId: columnId, columnIndex: columnIndex, headerCell: headerCell });\n    };\n    MdcDataTable.prototype.getSortStatusMessageBySortValue = function (sortValue) {\n        switch (sortValue) {\n            case SortValue.ASCENDING:\n                return messages.SORTED_IN_ASCENDING;\n            case SortValue.DESCENDING:\n                return messages.SORTED_IN_DESCENDING;\n            default:\n                return '';\n        }\n    };\n    MdcDataTable.prototype.getRowIdByRowElement = function (rowElement) {\n        return rowElement.getAttribute(dataAttributes.ROW_ID);\n    };\n    var MdcDataTable_1;\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcDataTable.prototype, \"pagination\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcDataTable.prototype, \"rowsPerPageLabel\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Array)\n    ], MdcDataTable.prototype, \"pageSizes\", void 0);\n    __decorate([\n        bindable({ defaultBindingMode: bindingMode.twoWay }),\n        __metadata(\"design:type\", Object)\n    ], MdcDataTable.prototype, \"pageSize\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcDataTable.prototype, \"stickyHeader\", void 0);\n    __decorate([\n        computedFrom('pageSize', 'recordsCount', 'activePage'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], MdcDataTable.prototype, \"paginationPosition\", null);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcDataTable.prototype, \"recordsCount\", void 0);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcDataTable.prototype, \"activePage\", void 0);\n    __decorate([\n        computedFrom('pageSize', 'recordsCount', 'activePage'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [])\n    ], MdcDataTable.prototype, \"paginationTotal\", null);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcDataTable.prototype, \"busy\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcDataTable.prototype, \"hoistPageSelectToBody\", void 0);\n    MdcDataTable = MdcDataTable_1 = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-data-table.html')),\n        customElement('mdc-data-table'),\n        processContent(MdcDataTable_1.processContent)\n    ], MdcDataTable);\n    return MdcDataTable;\n}(MdcComponent));\nexport { MdcDataTable };\n//# sourceMappingURL=mdc-data-table.js.map","import { PLATFORM } from 'aurelia-framework';\nimport { FocusTrap } from '@material/dom/focus-trap';\nexport { MdcDialog } from './mdc-dialog';\nexport { MdcDialogService } from './mdc-dialog-service';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-dialog'),\n        PLATFORM.moduleName('./mdc-dialog-actions'),\n        PLATFORM.moduleName('./mdc-dialog-title'),\n        PLATFORM.moduleName('./mdc-dialog-content')\n    ]);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nFocusTrap.prototype.getFocusableElements = function (root) {\n    var focusableEls = [].slice.call(root.querySelectorAll('[autofocus], [tabindex], a, input, textarea, select, button, .mdc-select__anchor'));\n    return focusableEls.filter(function (el) {\n        var isDisabledOrHidden = el.getAttribute('aria-disabled') === 'true' ||\n            el.getAttribute('disabled') !== null ||\n            el.getAttribute('hidden') !== null ||\n            el.getAttribute('aria-hidden') === 'true';\n        var isTabbableAndVisible = (el.tabIndex >= 0 || el.classList.contains('mdc-select__anchor')) &&\n            el.getBoundingClientRect().width > 0 &&\n            !el.classList.contains('mdc-dom-focus-sentinel') && !isDisabledOrHidden;\n        var isProgrammaticallyHidden = false;\n        if (isTabbableAndVisible) {\n            var style = getComputedStyle(el);\n            isProgrammaticallyHidden =\n                style.display === 'none' || style.visibility === 'hidden';\n        }\n        return isTabbableAndVisible && !isProgrammaticallyHidden;\n    });\n};\n//# sourceMappingURL=index.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, inject, inlineView, children } from 'aurelia-framework';\n/**\n * Optional. Footer area containing the dialog's action buttons.\n * @selector mdc-dialog-actions\n */\nvar MdcDialogActions = /** @class */ (function () {\n    function MdcDialogActions() {\n    }\n    MdcDialogActions.prototype.buttonsChanged = function () {\n        for (var i = 0; i < this.buttons.length; ++i) {\n            this.buttons[i].root.classList.add('mdc-dialog__button');\n        }\n    };\n    __decorate([\n        children('.mdc-button'),\n        __metadata(\"design:type\", Array)\n    ], MdcDialogActions.prototype, \"buttons\", void 0);\n    MdcDialogActions = __decorate([\n        inject(Element),\n        inlineView('<template class=\"mdc-dialog__actions\"><slot></slot></template>'),\n        customElement('mdc-dialog-actions')\n    ], MdcDialogActions);\n    return MdcDialogActions;\n}());\nexport { MdcDialogActions };\n//# sourceMappingURL=mdc-dialog-actions.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, inlineView, inject } from 'aurelia-framework';\n/**\n * Optional. Primary content area. May contain a list, a form, or prose.\n * @selector mdc-dialog-content\n */\nvar MdcDialogContent = /** @class */ (function () {\n    function MdcDialogContent(root) {\n        this.root = root;\n    }\n    MdcDialogContent = __decorate([\n        inject(Element),\n        inlineView('<template class=\"mdc-dialog__content\"><slot></slot></template>'),\n        customElement('mdc-dialog-content'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcDialogContent);\n    return MdcDialogContent;\n}());\nexport { MdcDialogContent };\n//# sourceMappingURL=mdc-dialog-content.js.map","import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\nimport { inject, ViewSlot, ViewResources, CompositionEngine, Container } from 'aurelia-framework';\nimport { strings } from '@material/dialog';\nimport { MdcRipple } from '@aurelia-mdc-web/ripple';\n/** Service to open MDC dialogs */\nvar MdcDialogService = /** @class */ (function () {\n    function MdcDialogService(viewResources, compositionEngine, container) {\n        this.viewResources = viewResources;\n        this.compositionEngine = compositionEngine;\n        this.container = container;\n    }\n    /** Opens the dialog specified in the options */\n    MdcDialogService.prototype.open = function (options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var host, compositionContext, controller, dialogVm, openedResolver, openedPromise, opened, closedResolver, closedPromise, ripples, action;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        host = document.createElement('div');\n                        document.body.append(host);\n                        compositionContext = {\n                            container: this.container,\n                            viewResources: this.viewResources,\n                            model: options.model,\n                            viewModel: options.viewModel,\n                            viewSlot: new ViewSlot(host, true),\n                            bindingContext: {}\n                        };\n                        return [4 /*yield*/, this.compositionEngine.compose(compositionContext)];\n                    case 1:\n                        controller = _b.sent();\n                        return [4 /*yield*/, this.compositionEngine.ensureViewModel(compositionContext)];\n                    case 2:\n                        _b.sent();\n                        controller.attached();\n                        dialogVm = (_a = host.querySelector('.mdc-dialog')) === null || _a === void 0 ? void 0 : _a.au.controller.viewModel;\n                        if (!dialogVm) {\n                            throw new Error('MDC-DIALOG element is missing');\n                        }\n                        openedPromise = new Promise(function (r) { return openedResolver = r; });\n                        opened = false;\n                        dialogVm.root.addEventListener(strings.OPENED_EVENT, function () {\n                            opened = true;\n                            openedResolver();\n                        });\n                        closedPromise = new Promise(function (r) { return closedResolver = r; });\n                        dialogVm.root.addEventListener(strings.CLOSED_EVENT, function (evt) {\n                            if (!opened) {\n                                // The dialog was closed before it was opened.\n                                // Emit the event to prevent an unresolved open promise.\n                                dialogVm.emit(strings.OPENED_EVENT, {});\n                            }\n                            closedResolver(evt.detail.action);\n                        });\n                        return [4 /*yield*/, dialogVm.initialised];\n                    case 3:\n                        _b.sent();\n                        dialogVm.open();\n                        return [4 /*yield*/, openedPromise];\n                    case 4:\n                        _b.sent();\n                        ripples = Array.from(dialogVm.root.querySelectorAll(\".\".concat(MdcRipple.ATTRIBUTE_CLASS)));\n                        return [4 /*yield*/, Promise.all(ripples.map(function (x) { return __awaiter(_this, void 0, void 0, function () {\n                                var _a;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0: return [4 /*yield*/, x.au['mdc-ripple'].viewModel.initialised];\n                                        case 1:\n                                            _b.sent();\n                                            (_a = x.au['mdc-ripple'].viewModel.foundation) === null || _a === void 0 ? void 0 : _a.layout();\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); }))];\n                    case 5:\n                        _b.sent();\n                        return [4 /*yield*/, closedPromise];\n                    case 6:\n                        action = _b.sent();\n                        controller.detached();\n                        host.remove();\n                        return [2 /*return*/, action];\n                }\n            });\n        });\n    };\n    MdcDialogService = __decorate([\n        inject(ViewResources, CompositionEngine, Container),\n        __metadata(\"design:paramtypes\", [ViewResources, CompositionEngine, Container])\n    ], MdcDialogService);\n    return MdcDialogService;\n}());\nexport { MdcDialogService };\n//# sourceMappingURL=mdc-dialog-service.js.map","import { __decorate } from \"tslib\";\nimport { customElement, inlineView } from 'aurelia-framework';\n/**\n * Optional. The area containing the dialog's title.\n * @selector mdc-dialog-title\n */\nvar MdcDialogTitle = /** @class */ (function () {\n    function MdcDialogTitle() {\n    }\n    MdcDialogTitle = __decorate([\n        inlineView('<template class=\"mdc-dialog__title\"><slot></slot></template>'),\n        customElement('mdc-dialog-title')\n    ], MdcDialogTitle);\n    return MdcDialogTitle;\n}());\nexport { MdcDialogTitle };\n//# sourceMappingURL=mdc-dialog-title.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCDialogFoundation, strings, util } from '@material/dialog';\nimport { MdcDialogContent } from './mdc-dialog-content';\nimport { child, customElement, useView, inject, PLATFORM } from 'aurelia-framework';\nimport { closest, matches } from '@material/dom/ponyfill';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nvar LAYOUT_EVENTS = ['resize', 'orientationchange'];\nvar dialogId = 0;\nstrings.OPENING_EVENT = strings.OPENING_EVENT.toLowerCase();\nstrings.CLOSING_EVENT = strings.CLOSING_EVENT.toLowerCase();\nstrings.OPENED_EVENT = strings.OPENED_EVENT.toLowerCase();\n/**\n * @selector mdc-dialog\n */\nvar MdcDialog = /** @class */ (function (_super) {\n    __extends(MdcDialog, _super);\n    function MdcDialog() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.id = ++dialogId;\n        _this.contentId = \"mdc-dialog-content-\".concat(_this.id);\n        _this.titleId = \"mdc-dialog-title-\".concat(_this.id);\n        _this.getInitialFocusEl = function () {\n            return _this.root.querySelector(\"[\".concat(strings.INITIAL_FOCUS_ATTRIBUTE, \"] input, [\").concat(strings.INITIAL_FOCUS_ATTRIBUTE, \"] .mdc-select__anchor\"));\n        };\n        return _this;\n    }\n    MdcDialog.prototype.scrimClickActionChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setScrimClickAction(this.scrimClickAction);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcDialog.prototype.escapeKeyActionChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setEscapeKeyAction(this.escapeKeyAction);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(MdcDialog.prototype, \"defaultButton\", {\n        get: function () {\n            return this.root.querySelector(\"[\".concat(strings.BUTTON_DEFAULT_ATTRIBUTE, \"]\"));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MdcDialog.prototype, \"content\", {\n        get: function () {\n            return this.root.querySelector(\"\".concat(strings.CONTENT_SELECTOR));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // eslint-disable-next-line @typescript-eslint/require-await\n    MdcDialog.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var content, title;\n            return __generator(this, function (_a) {\n                this.buttons = [].slice.call(this.root.querySelectorAll(strings.BUTTON_SELECTOR));\n                content = this.root.querySelector('mdc-dialog-content');\n                content === null || content === void 0 ? void 0 : content.setAttribute('id', this.contentId);\n                title = this.root.querySelector('mdc-dialog-title');\n                title === null || title === void 0 ? void 0 : title.setAttribute('id', this.titleId);\n                return [2 /*return*/];\n            });\n        });\n    };\n    MdcDialog.prototype.createFocusTrap = function () {\n        var _a;\n        (_a = this.mdcFocusTrap) === null || _a === void 0 ? void 0 : _a.create();\n    };\n    MdcDialog.prototype.destroy = function () {\n        this.handleClosing_();\n        _super.prototype.destroy.call(this);\n    };\n    MdcDialog.prototype.handleClick_ = function (evt) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleClick(evt);\n        return true;\n    };\n    MdcDialog.prototype.handleKeydown_ = function (evt) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleKeydown(evt);\n        return true;\n    };\n    MdcDialog.prototype.handleEvent = function (evt) {\n        var _a, _b;\n        switch (evt.currentTarget) {\n            case window:\n                switch (evt.type) {\n                    case 'resize':\n                    case 'orientationchange':\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.layout();\n                        break;\n                }\n                break;\n            case document:\n                switch (evt.type) {\n                    case 'keydown':\n                        (_b = this.foundation) === null || _b === void 0 ? void 0 : _b.handleDocumentKeydown(evt);\n                        break;\n                }\n                break;\n        }\n    };\n    MdcDialog.prototype.handleOpening_ = function () {\n        var _this = this;\n        LAYOUT_EVENTS.forEach(function (evtType) { return window.addEventListener(evtType, _this); });\n        document.addEventListener('keydown', this);\n    };\n    MdcDialog.prototype.handleClosing_ = function () {\n        var _this = this;\n        LAYOUT_EVENTS.forEach(function (evtType) { return window.removeEventListener(evtType, _this); });\n        document.removeEventListener('keydown', this);\n    };\n    /** Opens the dialog */\n    MdcDialog.prototype.open = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.open();\n    };\n    /**\n     * Closes the dialog\n     * @param action Action to close the dialog with\n     */\n    MdcDialog.prototype.close = function (action) {\n        var _a;\n        if (action === void 0) { action = ''; }\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.close(action);\n    };\n    MdcDialog.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addBodyClass: function (className) { return document.body.classList.add(className); },\n            addClass: function (className) { return _this.root.classList.add(className); },\n            areButtonsStacked: function () { return util.areTopsMisaligned(_this.buttons); },\n            clickDefaultButton: function () {\n                if (_this.defaultButton) {\n                    _this.defaultButton.click();\n                }\n            },\n            eventTargetMatches: function (target, selector) {\n                return target ? matches(target, selector) : false;\n            },\n            getActionFromEvent: function (evt) {\n                var _a;\n                if (!evt.target) {\n                    return '';\n                }\n                var element = closest(evt.target, \"[\".concat(strings.ACTION_ATTRIBUTE, \"]\"));\n                return (_a = element === null || element === void 0 ? void 0 : element.getAttribute(strings.ACTION_ATTRIBUTE)) !== null && _a !== void 0 ? _a : null;\n            },\n            getInitialFocusEl: function () { return _this.getInitialFocusEl(); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            isContentScrollable: function () { return util.isScrollable(_this.content); },\n            notifyClosed: function (action) { return _this.emit(strings.CLOSED_EVENT, action ? { action: action } : {}); },\n            notifyClosing: function (action) { return _this.emit(strings.CLOSING_EVENT, action ? { action: action } : {}); },\n            notifyOpened: function () { return _this.emit(strings.OPENED_EVENT, {}); },\n            notifyOpening: function () { return _this.emit(strings.OPENING_EVENT, {}); },\n            releaseFocus: function () {\n                var _a;\n                (_a = _this.mdcFocusTrap) === null || _a === void 0 ? void 0 : _a.releaseFocus();\n            },\n            removeBodyClass: function (className) { return document.body.classList.remove(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            reverseButtons: function () {\n                _this.buttons.reverse();\n                _this.buttons.forEach(function (button) {\n                    button.parentElement.appendChild(button);\n                });\n            },\n            trapFocus: function () {\n                var _a;\n                (_a = _this.mdcFocusTrap) === null || _a === void 0 ? void 0 : _a.trapFocus();\n            },\n            registerContentEventHandler: function (evt, handler) {\n                if (_this.content instanceof HTMLElement) {\n                    _this.content.addEventListener(evt, handler);\n                }\n            },\n            deregisterContentEventHandler: function (evt, handler) {\n                if (_this.content instanceof HTMLElement) {\n                    _this.content.removeEventListener(evt, handler);\n                }\n            },\n            isScrollableContentAtTop: function () {\n                return util.isScrollAtTop(_this.content);\n            },\n            isScrollableContentAtBottom: function () {\n                return util.isScrollAtBottom(_this.content);\n            },\n            registerWindowEventHandler: function (evt, handler) {\n                window.addEventListener(evt, handler);\n            },\n            deregisterWindowEventHandler: function (evt, handler) {\n                window.removeEventListener(evt, handler);\n            },\n        };\n        return new MDCDialogFoundation(adapter);\n    };\n    __decorate([\n        child('mdc-dialog-content'),\n        __metadata(\"design:type\", MdcDialogContent)\n    ], MdcDialog.prototype, \"content_\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcDialog.prototype, \"scrimClickAction\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcDialog.prototype, \"escapeKeyAction\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcDialog.prototype, \"delayFocusTrap\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcDialog.prototype, \"fullscreen\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcDialog.prototype, \"sheet\", void 0);\n    MdcDialog = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-dialog.html')),\n        customElement('mdc-dialog')\n    ], MdcDialog);\n    return MdcDialog;\n}(MdcComponent));\nexport { MdcDialog };\n//# sourceMappingURL=mdc-dialog.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcDrawer } from './mdc-drawer';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-drawer'),\n        PLATFORM.moduleName('./mdc-drawer-content'),\n        PLATFORM.moduleName('./mdc-drawer-app-content'),\n        PLATFORM.moduleName('./mdc-drawer-header/mdc-drawer-header')\n    ]);\n}\n//# sourceMappingURL=index.js.map","import { __decorate } from \"tslib\";\nimport { inlineView, inject, customElement } from 'aurelia-framework';\n/**\n * Mandatory for dismissible variant only. Sibling element that is resized when the drawer opens/closes.\n * @selector mdc-drawer-app-content\n */\nvar MdcDrawerAppContent = /** @class */ (function () {\n    function MdcDrawerAppContent() {\n    }\n    MdcDrawerAppContent = __decorate([\n        inject(Element),\n        inlineView('<template class=\"mdc-drawer-app-content\"><slot></slot></template>'),\n        customElement('mdc-drawer-app-content')\n    ], MdcDrawerAppContent);\n    return MdcDrawerAppContent;\n}());\nexport { MdcDrawerAppContent };\n//# sourceMappingURL=mdc-drawer-app-content.js.map","import { __decorate } from \"tslib\";\nimport { inlineView, inject, customElement } from 'aurelia-framework';\n/**\n * Scrollable content area of the drawer\n * @selector mdc-drawer-content\n */\nvar MdcDrawerContent = /** @class */ (function () {\n    function MdcDrawerContent() {\n    }\n    MdcDrawerContent = __decorate([\n        inject(Element),\n        inlineView('<template class=\"mdc-drawer__content\"><slot></slot></template>'),\n        customElement('mdc-drawer-content')\n    ], MdcDrawerContent);\n    return MdcDrawerContent;\n}());\nexport { MdcDrawerContent };\n//# sourceMappingURL=mdc-drawer-content.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { inject, customElement, useView, PLATFORM, bindable } from 'aurelia-framework';\n/**\n * Optional. Non-scrollable element that exists at the top of the drawer.\n * @selector mdc-drawer-header\n */\nvar MdcDrawerHeader = /** @class */ (function () {\n    function MdcDrawerHeader() {\n    }\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcDrawerHeader.prototype, \"title\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcDrawerHeader.prototype, \"subtitle\", void 0);\n    MdcDrawerHeader = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-drawer-header.html')),\n        customElement('mdc-drawer-header')\n    ], MdcDrawerHeader);\n    return MdcDrawerHeader;\n}());\nexport { MdcDrawerHeader };\n//# sourceMappingURL=mdc-drawer-header.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCDismissibleDrawerFoundation, cssClasses, strings, MDCModalDrawerFoundation } from '@material/drawer';\nimport { inject, useView, customElement, bindable } from 'aurelia-framework';\nimport { PLATFORM } from 'aurelia-pal';\nstrings.CLOSE_EVENT = strings.CLOSE_EVENT.toLowerCase();\nstrings.OPEN_EVENT = strings.OPEN_EVENT.toLowerCase();\n/**\n * @selector mdc-drawer\n * @emits mdcdrawer:closed | Event dispatched on drawer close\n * @emits mdcdrawer:opened | Event dispatched on drawer open\n */\nvar MdcDrawer = /** @class */ (function (_super) {\n    __extends(MdcDrawer, _super);\n    function MdcDrawer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Set the drawer implementation */\n        _this.type = 'standard';\n        return _this;\n    }\n    Object.defineProperty(MdcDrawer.prototype, \"open\", {\n        /**\n         * @return boolean Proxies to the foundation's `open`/`close` methods.\n         * Also returns true if drawer is in the open position.\n         */\n        get: function () {\n            return this.foundation.isOpen();\n        },\n        /**\n         * Toggles the drawer open and closed.\n         */\n        set: function (isOpen) {\n            var _a, _b;\n            if (isOpen) {\n                (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.open();\n            }\n            else {\n                (_b = this.foundation) === null || _b === void 0 ? void 0 : _b.close();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // eslint-disable-next-line @typescript-eslint/require-await\n    MdcDrawer.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.root.parentElement.clientWidth < 900) {\n                    this.type = 'modal';\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    MdcDrawer.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        if (this.type === 'modal') {\n            this.scrim_ = document.createElement('div');\n            this.scrim_.classList.add('mdc-drawer-scrim');\n            this.root.insertAdjacentElement('afterend', this.scrim_);\n            if (this.scrim_) {\n                this.handleScrimClick_ = function () {\n                    _this.open = false;\n                    return _this.foundation.handleScrimClick();\n                };\n                this.scrim_.addEventListener('click', this.handleScrimClick_);\n            }\n        }\n    };\n    MdcDrawer.prototype.handleKeydown_ = function (evt) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleKeydown(evt);\n        return true;\n    };\n    MdcDrawer.prototype.handleTransitionEnd_ = function (evt) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleTransitionEnd(evt);\n        return true;\n    };\n    MdcDrawer.prototype.destroy = function () {\n        var MODAL = cssClasses.MODAL;\n        if (this.scrim_ && this.handleScrimClick_ && this.root.classList.contains(MODAL)) {\n            this.scrim_.removeEventListener('click', this.handleScrimClick_);\n            // Ensure drawer is closed to hide scrim and release focus\n            this.open = false;\n        }\n    };\n    MdcDrawer.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            elementHasClass: function (element, className) { return element.classList.contains(className); },\n            saveFocus: function () { return _this.previousFocus_ = document.activeElement; },\n            restoreFocus: function () {\n                var previousFocus = _this.previousFocus_;\n                if ((previousFocus === null || previousFocus === void 0 ? void 0 : previousFocus.focus) && _this.root.contains(document.activeElement)) {\n                    previousFocus.focus();\n                }\n            },\n            focusActiveNavigationItem: function () {\n                var activeNavItemEl = _this.root.querySelector('.mdc-deprecated-list-item--activated');\n                if (activeNavItemEl) {\n                    activeNavItemEl.focus();\n                }\n            },\n            notifyClose: function () { return _this.emit(strings.CLOSE_EVENT, {}, true /* shouldBubble */); },\n            notifyOpen: function () { return _this.emit(strings.OPEN_EVENT, {}, true /* shouldBubble */); },\n            trapFocus: function () { return _this.mdcFocusTrap.trapFocus(); },\n            releaseFocus: function () { return _this.mdcFocusTrap.releaseFocus(); },\n        };\n        if (this.type === 'modal') {\n            return new MDCModalDrawerFoundation(adapter);\n        }\n        else {\n            return new MDCDismissibleDrawerFoundation(adapter);\n        }\n    };\n    MdcDrawer.prototype.toggle = function () {\n        this.open = !this.open;\n    };\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcDrawer.prototype, \"type\", void 0);\n    MdcDrawer = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-drawer.html')),\n        customElement(cssClasses.ROOT)\n    ], MdcDrawer);\n    return MdcDrawer;\n}(MdcComponent));\nexport { MdcDrawer };\n//# sourceMappingURL=mdc-drawer.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcElevation } from './mdc-elevation';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-elevation')\n    ]);\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customAttribute, inject } from 'aurelia-framework';\n/**\n * @selector [mdc-elevation]\n */\nvar MdcElevation = /** @class */ (function () {\n    function MdcElevation(root) {\n        this.root = root;\n    }\n    MdcElevation.prototype.valueChanged = function (newValue, oldValue) {\n        if (oldValue) {\n            this.root.classList.add(\"mdc-elevation--z\".concat(oldValue));\n        }\n        else {\n            this.root.classList.add(\"mdc-elevation--z\".concat(newValue));\n        }\n    };\n    MdcElevation = __decorate([\n        inject(Element),\n        customAttribute('mdc-elevation'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcElevation);\n    return MdcElevation;\n}());\nexport { MdcElevation };\n//# sourceMappingURL=mdc-elevation.js.map","// Module\nvar code = \"<template class=\\\"mdc-banner ${centered ? 'mdc-banner--centered' : ''}\\\" role=\\\"banner\\\"\\n  mdc-focus-trap=\\\"initial-focus-el.bind: primaryActionEl\\\" mdc-focus-trap.ref=\\\"mdcFocusTrap\\\">\\n  <div class=\\\"${fixed ? 'mdc-banner__fixed' : ''}\\\">\\n    <div class=\\\"mdc-banner__content\\\" role=\\\"alertdialog\\\" aria-live=\\\"assertive\\\" ref=\\\"contentEl\\\">\\n      <div class=\\\"mdc-banner__graphic-text-wrapper\\\">\\n        <div class=\\\"mdc-banner__graphic\\\" role=\\\"img\\\" alt=\\\"\\\" if.bind=\\\"icon\\\">\\n          <i class=\\\"material-icons mdc-banner__icon\\\">${icon}</i>\\n        </div>\\n        <div class=\\\"mdc-banner__text\\\">\\n          <slot></slot>\\n        </div>\\n      </div>\\n      <div class=\\\"mdc-banner__actions\\\">\\n        <button mdc-button class=\\\"mdc-banner__secondary-action\\\" if.bind=\\\"secondaryAction\\\"\\n          click.trigger=\\\"handleSecondaryActionClick()\\\">${secondaryAction}</button>\\n        <button mdc-button class=\\\"mdc-banner__primary-action\\\" if.bind=\\\"primaryAction\\\"\\n          click.trigger=\\\"handlePrimaryActionClick()\\\" ref=\\\"primaryActionEl\\\">${primaryAction}</button>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"\\n    mdc-button\\n    ${touch ? 'mdc-button--touch' : ''}\\n    ${raised ? 'mdc-button--raised' : ''}\\n    ${unelevated ? 'mdc-button--unelevated' : ''}\\n    ${outlined ? 'mdc-button--outlined' : ''}\\n  \\\" tabindex.bind=\\\"disabled ? -1 : 0\\\" mdc-ripple=\\\"no-class.bind: true\\\">\\n  <div class=\\\"mdc-button__ripple\\\"></div>\\n  <span class=\\\"mdc-button__label\\\" if.bind=\\\"label\\\">${label}</span>\\n  <div class=\\\"mdc-button__touch\\\" if.bind=\\\"touch\\\"></div>\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-card__actions ${fullBleed ? 'mdc-card__actions--full-bleed' : ''}\\\">\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-card__media ${square ? 'mdc-card__media--square' : ''} ${wide ? 'mdc-card__media--16-9' : ''}\\\">\\n  <div class=\\\"mdc-card__media-content\\\">\\n    <slot></slot>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-card__primary-action\\\" tabindex=0\\n  mdc-ripple=\\\"disabled.bind: disableRipple; surface.bind: rippleElement\\\">\\n  <div class=\\\"mdc-card__ripple\\\" ref=\\\"rippleElement\\\"></div>\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-card ${outlined ? 'mdc-card--outlined' : ''}\\\">\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-checkbox ${touch ? 'mdc-checkbox--touch' : ''}\\\"\\n  mdc-ripple=\\\"no-class.bind: true; input.bind: nativeControl_; unbounded.bind: true; disabled.bind: disableRipple\\\">\\n  <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\" id=\\\"${id}\\\" ref=\\\"nativeControl_\\\"\\n    change.trigger=\\\"handleChange_()\\\" />\\n  <div class=\\\"mdc-checkbox__background\\\">\\n    <svg class=\\\"mdc-checkbox__checkmark\\\" viewBox=\\\"0 0 24 24\\\">\\n      <path class=\\\"mdc-checkbox__checkmark-path\\\" fill=\\\"none\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n    </svg>\\n    <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n  </div>\\n  <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"\\n    mdc-evolution-chip__action\\n    ${trailing ? 'mdc-evolution-chip__action--trailing' : 'mdc-evolution-chip__action--primary'}\\n  \\\" click.delegate=\\\"handleClick()\\\" keydown.delegate=\\\"handleKeydown($event)\\\"\\n  mdc-ripple=\\\"no-class.bind: true; compute-bounding-rect.bind: computeRippleClientRect\\\">\\n  <span class=\\\"\\n      mdc-evolution-chip__ripple\\n      ${trailing ? 'mdc-evolution-chip__ripple--trailing' : 'mdc-evolution-chip__ripple--primary'}\\n    \\\"></span>\\n  <span class=\\\"mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing material-icons\\\" if.bind=\\\"trailing && icon\\\">${icon}</span>\\n  <span class=\\\"mdc-evolution-chip__graphic\\\" if.bind=\\\"!trailing && (icon || selectable)\\\">\\n    <span if.bind=\\\"icon\\\"\\n      class=\\\"mdc-evolution-chip__icon ${trailing ? '' : 'mdc-evolution-chip__icon--primary'} material-icons\\\">${icon}</span>\\n    <span class=\\\"mdc-evolution-chip__checkmark\\\" if.bind=\\\"selectable\\\">\\n      <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\">\\n        <path class=\\\"mdc-evolution-chip__checkmark-path\\\" fill=\\\"none\\\" stroke=\\\"black\\\"\\n          d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n      </svg>\\n    </span>\\n  </span>\\n  <span class=\\\"mdc-evolution-chip__text-label\\\">\\n    <slot></slot>\\n  </span>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"\\n    mdc-evolution-chip-set\\n    ${overflow ? 'mdc-evolution-chip-set--overflow' : ''}\\n  \\\" role=\\\"grid\\\" mdcchip:interaction.delegate=\\\"handleChipInteraction($event)\\\"\\n  mdcchip:animation.delegate=\\\"handleChipAnimation($event)\\\"\\n  mdcchip:navigation.delegate=\\\"handleChipNavigation($event)\\\">\\n  <span class=\\\"mdc-evolution-chip-set__chips\\\" role=\\\"presentation\\\">\\n    <slot></slot>\\n  </span>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"\\n    mdc-evolution-chip\\n    ${filter ? 'mdc-evolution-chip--selectable' : ''}\\n    ${disabled ? 'mdc-evolution-chip--disabled' : ''}\\n    ${icon ? 'mdc-evolution-chip--with-primary-icon' : ''}\\n  \\\" role=\\\"row\\\" mdcchipaction:interaction.trigger=\\\"handleActionInteraction($event)\\\"\\n  mdcchipaction:navigation.trigger=\\\"handleActionNavigation($event)\\\" animationend.delegate=\\\"handleAnimationEnd($event)\\\"\\n  transitionend.delegate=\\\"handleTransitionEnd()\\\">\\n\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n    <slot name=\\\"primary-action\\\">\\n      <button mdc-chip-action selectable.bind=\\\"filter\\\" disabled.bind=\\\"disabled\\\" icon.bind=\\\"icon\\\">\\n        <slot></slot>\\n      </button>\\n    </slot>\\n  </span>\\n\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\" role=\\\"gridcell\\\">\\n    <slot name=\\\"trailing-action\\\">\\n    </slot>\\n  </span>\\n\\n  <slot name=\\\"non-navigable-trailing-action\\\">\\n  </slot>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-circular-progress mdc-circular-progress--${size}\\\" role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"1\\\" css=\\\"width:${size}px; height:${size}px;\\\">\\n  <div class=\\\"mdc-circular-progress__determinate-container\\\">\\n    <svg class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\" viewBox=\\\"0 0 ${size} ${size}\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <circle class=\\\"mdc-circular-progress__determinate-track\\\" cx=\\\"${size/2}\\\" cy=\\\"${size/2}\\\" r=\\\"${radius}\\\"\\n        stroke-width=\\\"${strokeWidth}\\\" />\\n      <circle class=\\\"mdc-circular-progress__determinate-circle\\\" cx=\\\"${size/2}\\\" cy=\\\"${size/2}\\\" r=\\\"${radius}\\\"\\n        stroke-width=\\\"${strokeWidth}\\\" stroke-dasharray=\\\"${strokeDasharray}\\\" stroke-dashoffset=\\\"${strokeDashoffset}\\\"\\n        ref=\\\"determinateCircle_\\\" />\\n    </svg>\\n  </div>\\n  <div class=\\\"mdc-circular-progress__indeterminate-container\\\">\\n    <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n      <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n        <svg class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\" viewBox=\\\"0 0 ${size} ${size}\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <circle cx=\\\"${size/2}\\\" cy=\\\"${size/2}\\\" r=\\\"${radius}\\\" stroke-dasharray=\\\"${strokeDasharray}\\\"\\n            stroke-dashoffset=\\\"${strokeDashoffset}\\\" stroke-width=\\\"${strokeWidth}\\\" />\\n        </svg>\\n      </div>\\n      <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n        <svg class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\" viewBox=\\\"0 0 ${size} ${size}\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <circle cx=\\\"${size/2}\\\" cy=\\\"${size/2}\\\" r=\\\"${radius}\\\" stroke-dasharray=\\\"${strokeDasharray}\\\"\\n            stroke-dashoffset=\\\"${strokeDashoffset}\\\" stroke-width=\\\"${strokeWidth}\\\" />\\n        </svg>\\n      </div>\\n      <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n        <svg class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\" viewBox=\\\"0 0 ${size} ${size}\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <circle cx=\\\"${size/2}\\\" cy=\\\"${size/2}\\\" r=\\\"${radius}\\\" stroke-dasharray=\\\"${strokeDasharray}\\\"\\n            stroke-dashoffset=\\\"${strokeDashoffset}\\\" stroke-width=\\\"${strokeWidth}\\\" />\\n        </svg>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-data-table ${stickyHeader ? 'mdc-data-table--sticky-header' : ''}\\\">\\n  <div class=\\\"mdc-data-table__table-container\\\">\\n    <slot></slot>\\n  </div>\\n  <div class=\\\"mdc-data-table__pagination\\\" if.bind=\\\"pagination\\\">\\n    <div class=\\\"mdc-data-table__pagination-trailing\\\">\\n      <div class=\\\"mdc-data-table__pagination-rows-per-page\\\">\\n        <div class=\\\"mdc-data-table__pagination-rows-per-page-label\\\">${rowsPerPageLabel}</div>\\n\\n        <mdc-select value.bind=\\\"pageSize\\\" outlined class=\\\"mdc-data-table__pagination-rows-per-page-select\\\"\\n          hoist-to-body.bind=\\\"hoistPageSelectToBody\\\">\\n          <mdc-list>\\n            <mdc-list-item repeat.for=\\\"ps of pageSizes\\\" value.bind=\\\"ps\\\">${ps}</mdc-list-item>\\n          </mdc-list>\\n        </mdc-select>\\n      </div>\\n\\n      <div class=\\\"mdc-data-table__pagination-navigation\\\">\\n        <div class=\\\"mdc-data-table__pagination-total\\\">\\n          <template replaceable part=\\\"pagination-total\\\">${paginationTotal}</template>\\n        </div>\\n        <button mdc-icon-button class=\\\"mdc-data-table__pagination-button\\\" data-first-page=\\\"true\\\"\\n          disabled.bind=\\\"!paginationPosition || paginationPosition === 'first'\\\"\\n          click.trigger=\\\"handleNavigationClick('first')\\\">\\n          <mdc-icon>first_page</mdc-icon>\\n        </button>\\n        <button mdc-icon-button class=\\\"mdc-data-table__pagination-button\\\" data-prev-page=\\\"true\\\"\\n          disabled.bind=\\\"!paginationPosition || paginationPosition === 'first'\\\"\\n          click.trigger=\\\"handleNavigationClick('prev')\\\">\\n          <mdc-icon>chevron_left</mdc-icon>\\n        </button>\\n        <button mdc-icon-button class=\\\"mdc-data-table__pagination-button\\\" data-next-page=\\\"true\\\"\\n          disabled.bind=\\\"!paginationPosition || paginationPosition === 'last'\\\"\\n          click.trigger=\\\"handleNavigationClick('next')\\\">\\n          <mdc-icon>chevron_right</mdc-icon>\\n        </button>\\n        <button mdc-icon-button class=\\\"mdc-data-table__pagination-button\\\" data-last-page=\\\"true\\\"\\n          disabled.bind=\\\"!paginationPosition || paginationPosition === 'last'\\\"\\n          click.trigger=\\\"handleNavigationClick('last')\\\">\\n          <mdc-icon>last_page</mdc-icon>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"mdc-data-table__progress-indicator\\\">\\n    <div class=\\\"mdc-data-table__scrim\\\"></div>\\n    <mdc-linear-progress class=\\\"mdc-data-table__linear-progress\\\"></mdc-linear-progress>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-dialog ${fullscreen ? 'mdc-dialog--fullscreen' : ''} ${sheet ? 'mdc-dialog--sheet' : ''}\\\"\\n  click.trigger=\\\"handleClick_($event)\\\" keydown.trigger=\\\"handleKeydown_($event)\\\"\\n  mdcdialog:opening.trigger=\\\"handleOpening_()\\\" mdcdialog:closing.trigger=\\\"handleClosing_()\\\" aria-modal=\\\"true\\\"\\n  mdc-focus-trap=\\\"initial-focus-el.bind: getInitialFocusEl; delay.bind: delayFocusTrap\\\"\\n  mdc-focus-trap.ref=\\\"mdcFocusTrap\\\">\\n  <div class=\\\"mdc-dialog__container\\\">\\n    <div class=\\\"mdc-dialog__surface\\\" role=\\\"alertdialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"${titleId}\\\"\\n      aria-describedby=\\\"${contentId}\\\">\\n      <button if.bind=\\\"sheet\\\" class=\\\"mdc-icon-button material-icons mdc-dialog__close\\\"\\n        data-mdc-dialog-action=\\\"close\\\">close</button>\\n      <slot></slot>\\n    </div>\\n  </div>\\n  <div class=\\\"mdc-dialog__scrim\\\"></div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-drawer__header\\\">\\n  <h3 class=\\\"mdc-drawer__title\\\" if.bind=\\\"title\\\">${title}</h3>\\n  <h6 class=\\\"mdc-drawer__subtitle\\\" if.bind=\\\"subtitle\\\">${subtitle}</h6>\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-drawer\\n  ${type === 'dismissible' ? 'mdc-drawer--dismissible' : ''}\\n  ${ type === 'modal' ? 'mdc-drawer--modal' : ''}\\\" transitionend.trigger=\\\"handleTransitionEnd_($event)\\\"\\n  keydown.trigger=\\\"handleKeydown_($event)\\\" mdc-focus-trap mdc-focus-trap.ref=\\\"mdcFocusTrap\\\">\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;"],"names":[],"sourceRoot":""}