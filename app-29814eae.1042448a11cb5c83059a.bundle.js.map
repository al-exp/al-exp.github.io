{"version":3,"file":"app-29814eae.1042448a11cb5c83059a.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAHA;AAKA;AACA;AACA;;AAtBA;AAFA;AACA;AAGA;AAFA;AAuBA;AAAA;AAvBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAKA;AAAA;AAEA;AAAA;AAAA;;AAEA;AAJA;AAKA;AAAA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;;AAXA;AAFA;AACA;AAGA;AAFA;AAYA;AAAA;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AAKA;AAEA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7BA;AAHA;AACA;AACA;;AACA;AA8BA;AAAA;AA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAAA;AAIA;AAAA;AAAA;AAFA;AAKA;AACA;;AACA;AATA;AAaA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAHA;AAIA;AACA;AACA;AACA;AAEA;AAMA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAGA;AAAA;AACA;AACA;;;AAAA;AAEA;AAEA;AACA;AAEA;;;;;;AACA;AAAA;;AAAA;AAEA;AACA;AACA;AAEA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1DA;AADA;AAIA;AAAA;AADA;AAkBA;AADA;;;AAMA;AAGA;AADA;;;AAGA;AA3CA;AAJA;AACA;AAEA;AAKA;AAJA;AAwEA;AAAA;AAxEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AAAA;AAAA;AAGA;AAFA;AAHA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAHA;AAKA;;;;;AACA;;AAAA;AACA;AAEA;AAEA;;;;;AACA;AAEA;AACA;AACA;;AAxBA;AAFA;AACA;AAGA;AAFA;AA2BA;AAAA;AA3BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAIA;AAAA;AAAA;AAGA;AACA;;AACA;AATA;AAWA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;AAJA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAGA;AAAA;;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;AACA;;AAAA;;;;;AACA;AAEA;;;AACA;;;;AACA;AAEA;;;AACA;;;AACA;AAEA;;;AACA;;;;AACA;;AAzDA;AADA;AAIA;AAAA;AADA;AAmBA;AADA;;;AAMA;AAGA;AADA;;;AAGA;AAhDA;AAHA;AACA;AACA;;AACA;AA4EA;AAAA;AA5EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;;AAKA;AAQA;AAAA;AACA;AACA;AALA;AAQA;AAcA;AAQA;AAxBA;AAXA;AAeA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAHA;AAKA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAHA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAHA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AACA;;;AAAA;AAEA;;;;;;AAEA;;AAAA;AAKA;AACA;AACA;AAEA;AAEA;;AAAA;AAEA;AACA;AACA;AACA;;AAHA;;;;;AAIA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAtGA;AADA;;;AAGA;AA8EA;AADA;;AACA;AAGA;AADA;;AACA;AAlGA;AAHA;AACA;AACA;AAUA;AATA;AAsHA;AAAA;AAtHA;;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://web-client/./src/routes/baselines/baseline.scss","webpack://web-client/./src/routes/analyze/analyze.html","webpack://web-client/./src/routes/analyze/currently-analyzed.html","webpack://web-client/./src/routes/analyze/results.html","webpack://web-client/./src/routes/analyze/start.html","webpack://web-client/./src/routes/baselines/baselines.html","webpack://web-client/./src/routes/baselines/editable-baseline.html","webpack://web-client/./src/routes/baselines/table.html","webpack://web-client/./src/routes/batteries/batteries.html","webpack://web-client/./src/routes/reports/reports.html","webpack://web-client/./src/routes/analyze/analyze.ts","webpack://web-client/./src/routes/analyze/currently-analyzed.ts","webpack://web-client/./src/routes/analyze/results.ts","webpack://web-client/./src/routes/analyze/start.ts","webpack://web-client/./src/routes/baselines/baselines.ts","webpack://web-client/./src/routes/baselines/editable-baseline.ts","webpack://web-client/./src/routes/baselines/table.ts","webpack://web-client/./src/routes/batteries/batteries.ts","webpack://web-client/./src/routes/reports/reports.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".mdc-icon-button{font-size:24px;height:48px;padding:12px;width:48px}.mdc-icon-button .mdc-icon-button__focus-ring{display:none}.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block;max-height:48px;max-width:48px}@media screen and (forced-colors:active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{border:2px solid transparent;border-radius:6px;box-sizing:content-box;height:100%;left:50%;pointer-events:none;position:absolute;top:50%;transform:translate(-50%,-50%);width:100%}}@media screen and (forced-colors:active) and (forced-colors:active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{border-color:CanvasText}}@media screen and (forced-colors:active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring:after,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring:after{border:2px solid transparent;border-radius:8px;content:\\\"\\\";display:block;height:calc(100% + 4px);left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);width:calc(100% + 4px)}}@media screen and (forced-colors:active) and (forced-colors:active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring:after,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring:after{border-color:CanvasText}}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{height:40px;margin:4px;width:40px}.mdc-icon-button.mdc-icon-button--reduced-size.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button.mdc-icon-button--reduced-size:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button:disabled{color:rgba(0,0,0,.38);color:var(--mdc-theme-text-disabled-on-light,rgba(0,0,0,.38))}.mdc-icon-button img,.mdc-icon-button svg{height:24px;width:24px}.mdc-icon-button{fill:currentColor;background-color:transparent;border:none;box-sizing:border-box;color:inherit;cursor:pointer;display:inline-block;outline:none;overflow:visible;position:relative;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0}.mdc-icon-button .mdc-icon-button__touch{height:48px;left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);width:48px}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button--on .mdc-icon-button__icon,.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}@-webkit-keyframes mdc-ripple-fg-radius-in{0%{-webkit-animation-timing-function:cubic-bezier(.4,0,.2,1);animation-timing-function:cubic-bezier(.4,0,.2,1);transform:translate(var(--mdc-ripple-fg-translate-start,0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end,0)) scale(var(--mdc-ripple-fg-scale,1))}}@keyframes mdc-ripple-fg-radius-in{0%{-webkit-animation-timing-function:cubic-bezier(.4,0,.2,1);animation-timing-function:cubic-bezier(.4,0,.2,1);transform:translate(var(--mdc-ripple-fg-translate-start,0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end,0)) scale(var(--mdc-ripple-fg-scale,1))}}@-webkit-keyframes mdc-ripple-fg-opacity-in{0%{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity,0)}}@keyframes mdc-ripple-fg-opacity-in{0%{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity,0)}}@-webkit-keyframes mdc-ripple-fg-opacity-out{0%{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity,0)}to{opacity:0}}@keyframes mdc-ripple-fg-opacity-out{0%{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity,0)}to{opacity:0}}.mdc-icon-button{--mdc-ripple-fg-size:0;--mdc-ripple-left:0;--mdc-ripple-top:0;--mdc-ripple-fg-scale:1;--mdc-ripple-fg-translate-end:0;--mdc-ripple-fg-translate-start:0;-webkit-tap-highlight-color:rgba(0,0,0,0);will-change:transform,opacity}.mdc-icon-button .mdc-icon-button__ripple:after,.mdc-icon-button .mdc-icon-button__ripple:before{border-radius:50%;content:\\\"\\\";opacity:0;pointer-events:none;position:absolute}.mdc-icon-button .mdc-icon-button__ripple:before{transition:opacity 15ms linear,background-color 15ms linear;z-index:1;z-index:var(--mdc-ripple-z-index,1)}.mdc-icon-button .mdc-icon-button__ripple:after{z-index:0;z-index:var(--mdc-ripple-z-index,0)}.mdc-icon-button.mdc-ripple-upgraded .mdc-icon-button__ripple:before{transform:scale(var(--mdc-ripple-fg-scale,1))}.mdc-icon-button.mdc-ripple-upgraded .mdc-icon-button__ripple:after{left:0;top:0;transform:scale(0);transform-origin:center center}.mdc-icon-button.mdc-ripple-upgraded--unbounded .mdc-icon-button__ripple:after{left:var(--mdc-ripple-left,0);top:var(--mdc-ripple-top,0)}.mdc-icon-button.mdc-ripple-upgraded--foreground-activation .mdc-icon-button__ripple:after{-webkit-animation:mdc-ripple-fg-radius-in 225ms forwards,mdc-ripple-fg-opacity-in 75ms forwards;animation:mdc-ripple-fg-radius-in 225ms forwards,mdc-ripple-fg-opacity-in 75ms forwards}.mdc-icon-button.mdc-ripple-upgraded--foreground-deactivation .mdc-icon-button__ripple:after{-webkit-animation:mdc-ripple-fg-opacity-out .15s;animation:mdc-ripple-fg-opacity-out .15s;transform:translate(var(--mdc-ripple-fg-translate-end,0)) scale(var(--mdc-ripple-fg-scale,1))}.mdc-icon-button .mdc-icon-button__ripple:after,.mdc-icon-button .mdc-icon-button__ripple:before{height:100%;left:0;top:0;width:100%}.mdc-icon-button.mdc-ripple-upgraded .mdc-icon-button__ripple:after,.mdc-icon-button.mdc-ripple-upgraded .mdc-icon-button__ripple:before{height:var(--mdc-ripple-fg-size,100%);left:var(--mdc-ripple-left,0);top:var(--mdc-ripple-top,0);width:var(--mdc-ripple-fg-size,100%)}.mdc-icon-button.mdc-ripple-upgraded .mdc-icon-button__ripple:after{height:var(--mdc-ripple-fg-size,100%);width:var(--mdc-ripple-fg-size,100%)}.mdc-icon-button .mdc-icon-button__ripple:after,.mdc-icon-button .mdc-icon-button__ripple:before{background-color:#000;background-color:var(--mdc-ripple-color,#000)}.mdc-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple:before,.mdc-icon-button:hover .mdc-icon-button__ripple:before{opacity:.04;opacity:var(--mdc-ripple-hover-opacity,.04)}.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple:before,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple:before{opacity:.12;opacity:var(--mdc-ripple-focus-opacity,.12);transition-duration:75ms}.mdc-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple:after{transition:opacity .15s linear}.mdc-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple:after{opacity:.12;opacity:var(--mdc-ripple-press-opacity,.12);transition-duration:75ms}.mdc-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity,0.12)}.mdc-icon-button .mdc-icon-button__ripple{height:100%;left:0;pointer-events:none;position:absolute;top:0;width:100%;z-index:-1}.mdc-data-table__cell--center{text-align:center}.mdc-icon-button--delete{color:#b61615;color:#b61615!important}.mdc-icon-button--delete .mdc-icon-button__ripple:after,.mdc-icon-button--delete .mdc-icon-button__ripple:before{background-color:#b61615;background-color:var(--mdc-ripple-color,#b61615)}.mdc-icon-button--delete.mdc-ripple-surface--hover .mdc-icon-button__ripple:before,.mdc-icon-button--delete:hover .mdc-icon-button__ripple:before{opacity:.04;opacity:var(--mdc-ripple-hover-opacity,.04)}.mdc-icon-button--delete.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple:before,.mdc-icon-button--delete:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple:before{opacity:.12;opacity:var(--mdc-ripple-focus-opacity,.12);transition-duration:75ms}.mdc-icon-button--delete:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple:after{transition:opacity .15s linear}.mdc-icon-button--delete:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple:after{opacity:.12;opacity:var(--mdc-ripple-press-opacity,.12);transition-duration:75ms}.mdc-icon-button--delete.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity,0.12)}.fab-icon-fixed{bottom:calc(1vw + 1vh);position:fixed;right:calc(1vw + 1vh)}.dropdown-filter{--mdc-ripple-color:transparent;background-color:#f5f5f5;padding:10px}.dropdown-filter .dropdown-filter-buttons{display:flex;justify-content:flex-end;margin-top:20px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@material/icon-button/_icon-button.scss\",\"webpack://./node_modules/@material/icon-button/_icon-button-theme.scss\",\"webpack://./src/routes/baselines/baseline.scss\",\"webpack://./node_modules/@material/dom/_dom.scss\",\"webpack://./node_modules/@material/focus-ring/_focus-ring.scss\",\"webpack://./node_modules/@material/touch-target/_touch-target.scss\",\"webpack://./node_modules/@material/theme/_css.scss\",\"webpack://./node_modules/@material/ripple/_ripple.scss\",\"webpack://./node_modules/@material/animation/_animation.scss\",\"webpack://./node_modules/@material/ripple/_ripple-theme.scss\"],\"names\":[],\"mappings\":\"AA0HE,iBAEI,cChFM,CAwGR,WApBK,CAqBL,YAAA,CAFA,UC9IJ,CDmJE,8CAEI,YClJN,CDuJI,oKAUI,aAAA,CACA,eA1CC,CA2CD,cC9JR,CCiFI,yCFiEA,oKGxFA,4BAAA,CACA,iBAAA,CACA,sBAAA,CAOA,WA3BwB,CAwBxB,QAAA,CAPA,mBAAA,CAIA,iBAAA,CACA,OAAA,CAIA,8BAAA,CAEA,UFrDF,CACF,CCiEI,oEFiEA,oKG3EE,uBFnDJ,CACF,CC4DI,yCCPA,gLAEE,4BAAA,CACA,iBAhEgB,CA8DhB,UAAA,CAGA,aAAA,CAOA,uBA/BgB,CA4BhB,QAAA,CAHA,iBAAA,CACA,OAAA,CAIA,8BAAA,CAEA,sBFlDJ,CACF,CC4CI,oECPA,gLAeI,uBFhDN,CACF,CDkII,wEAGI,WANe,CIrEjB,UAPwB,CJiFtB,UC5HR,CD0IM,gOAEI,eArBa,CAsBb,cCzIV,CDoVE,0BKrVI,qBAAA,CAYF,6DJGJ,CFqDI,0CAII,WC9FI,CD6FJ,UEnDR,CF9CE,iBAQI,iBAAA,CADA,4BAAA,CAFA,WAAA,CADA,qBAAA,CAKA,aAAA,CAEA,cAAA,CATA,oBAAA,CAIA,YAAA,CAQA,gBAAA,CAXA,iBAAA,CAOA,oBAAA,CAEA,wBAAA,CAAA,qBAAA,CAAA,oBAAA,CAAA,gBAAA,CACA,SEiDN,CF7CI,yCKWA,WAtCK,CA4CH,QAAA,CARF,iBAAA,CACA,OAAA,CASE,8BAAA,CADA,UHoCN,CFwEE,0BArHM,cAAA,CACA,mBEgDR,CF3CE,+BAEI,kBAAA,CACA,mBAAA,CACA,sBE6CN,CFzCE,uBAEI,oBE2CN,CFhCI,6FAEI,YEqCR,CFlCM,sEAEI,oBEmCV,CF5BE,uBAEI,WAAA,CACA,MAAA,CACA,YAAA,CACA,iBAAA,CACA,KAAA,CACA,UE8BN,CKgKE,2CACE,GACE,yDC3R2B,CD2R3B,iDC3R2B,CDgS3B,oELjKJ,CKoKE,GACE,6FLlKJ,CACF,CKsJE,mCACE,GACE,yDC3R2B,CD2R3B,iDC3R2B,CDgS3B,oELjKJ,CKoKE,GACE,6FLlKJ,CACF,CKsKE,4CACE,GACE,wCAAA,CAAA,gCAAA,CACA,SLpKJ,CKuKE,GACE,sCLrKJ,CACF,CK6JE,oCACE,GACE,wCAAA,CAAA,gCAAA,CACA,SLpKJ,CKuKE,GACE,sCLrKJ,CACF,CKwKE,6CACE,GACE,wCAAA,CAAA,gCAAA,CACA,sCLtKJ,CKyKE,GACE,SLvKJ,CACF,CK+JE,qCACE,GACE,wCAAA,CAAA,gCAAA,CACA,sCLtKJ,CKyKE,GACE,SLvKJ,CACF,CFvBE,iBOnCE,sBAAA,CACA,mBAAA,CACA,kBAAA,CACA,uBAAA,CACA,+BAAA,CACA,iCAAA,CAEA,yCAAA,CAGE,6BL0DN,CKtDE,iGAII,iBAAA,CAGA,UAAA,CAFA,SAAA,CACA,mBAAA,CAHA,iBL2DN,CKnDE,iDAGI,2DAAA,CD5EA,SAAA,CAYF,mCJsHJ,CKzCE,gDDzFI,SAAA,CAYF,mCJ2HJ,CKlCI,qEAEI,6CLmCR,CK/BI,oEAII,MAAA,CAFA,KAAA,CAGA,kBAAA,CACA,8BLgCR,CK1BI,+EAII,6BAAA,CAFA,2BL6BR,CKrBI,2FAEI,+FAAA,CAAA,uFLsBR,CKdI,6FAEI,gDAAA,CAAA,wCAAA,CAKA,6FLWR,CK+BE,iGAOI,WAbK,CAWL,MAAA,CAFA,KAAA,CAGA,UL7BN,CKmCI,yIAOI,qCAAA,CAFA,6BAAA,CAFA,2BAAA,CAGA,oCLjCR,CKsCI,oEAGI,qCAAA,CADA,oCLpCR,COzFI,iGHxFE,qBAAA,CAYF,6CJ0KJ,CO2SE,kIHjeI,WAAA,CAYF,2CJ+KJ,COsSE,0KHjeI,WAAA,CAYF,2CAAA,CGuME,wBPlBN,CO4CM,0EAEI,8BP3CV,COgDQ,iFHpPF,WAAA,CAYF,2CAAA,CG0OQ,wBP5CZ,COuDI,qCHrPA,4DJiMJ,CF5GI,0CAGI,WAAA,CACA,MAAA,CACA,mBAAA,CACA,iBAAA,CACA,KAAA,CACA,UAAA,CACA,UE4GR,CAjRA,8BACE,iBAoRF,CAjRA,yBImEI,aAAA,CJjEF,uBAoRF,COvII,iHHxFE,wBAAA,CAYF,gDJwNJ,CO6PE,kJHjeI,WAAA,CAYF,2CJ6NJ,COwPE,0LHjeI,WAAA,CAYF,2CAAA,CGuME,wBP4BN,COFM,kFAEI,8BPGV,COEQ,yFHpPF,WAAA,CAYF,2CAAA,CG0OQ,wBPEZ,COSI,6CHrPA,4DJ+OJ,CAzSA,gBAEE,sBAAA,CADA,cAAA,CAEA,qBA4SF,CAzSA,iBACE,8BAAA,CAGA,wBAAA,CADA,YA4SF,CAxSE,0CAEE,YAAA,CACA,wBAAA,CAFA,eA4SJ\",\"sourcesContent\":[\"//\\n// Copyright 2021 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n//\\n\\n// stylelint-disable selector-class-pattern --\\n// Selector '.mdc-*' should only be used in this project.\\n\\n@use '@material/feature-targeting/feature-targeting';\\n@use '@material/ripple/ripple';\\n@use '@material/ripple/ripple-theme';\\n@use '@material/touch-target/mixins' as touch-target-mixins;\\n@use './icon-button-theme';\\n\\n@mixin core-styles($query: feature-targeting.all()) {\\n  @include without-ripple($query);\\n  @include ripple($query);\\n}\\n\\n@mixin static-styles($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  // postcss-bem-linter: define icon-button\\n  .mdc-icon-button {\\n    @include feature-targeting.targets($feat-structure) {\\n      display: inline-block;\\n      position: relative;\\n      box-sizing: border-box;\\n      border: none;\\n      outline: none;\\n      background-color: transparent;\\n      fill: currentColor;\\n      color: inherit;\\n      text-decoration: none;\\n      cursor: pointer;\\n      user-select: none;\\n      z-index: 0; // Added to render above the container in IE11 tests.\\n      overflow: visible; // Added to fix IE11 touch target tests.\\n    }\\n\\n    .mdc-icon-button__touch {\\n      @include touch-target-mixins.touch-target(\\n        $set-width: true,\\n        $query: $query\\n      );\\n    }\\n\\n    @include if-disabled_ {\\n      @include feature-targeting.targets($feat-structure) {\\n        cursor: default;\\n        pointer-events: none;\\n      }\\n    }\\n  }\\n\\n  .mdc-icon-button--display-flex {\\n    @include feature-targeting.targets($feat-structure) {\\n      align-items: center;\\n      display: inline-flex;\\n      justify-content: center;\\n    }\\n  }\\n\\n  .mdc-icon-button__icon {\\n    @include feature-targeting.targets($feat-structure) {\\n      display: inline-block;\\n    }\\n\\n    &.mdc-icon-button__icon--on {\\n      @include feature-targeting.targets($feat-structure) {\\n        display: none;\\n      }\\n    }\\n  }\\n\\n  .mdc-icon-button--on {\\n    .mdc-icon-button__icon {\\n      @include feature-targeting.targets($feat-structure) {\\n        display: none;\\n      }\\n\\n      &.mdc-icon-button__icon--on {\\n        @include feature-targeting.targets($feat-structure) {\\n          display: inline-block;\\n        }\\n      }\\n    }\\n  }\\n  // postcss-bem-linter: end\\n\\n  .mdc-icon-button__link {\\n    @include feature-targeting.targets($feat-structure) {\\n      height: 100%;\\n      left: 0;\\n      outline: none;\\n      position: absolute;\\n      top: 0;\\n      width: 100%;\\n    }\\n  }\\n}\\n\\n@mixin without-ripple($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  .mdc-icon-button {\\n    @include feature-targeting.targets($feat-structure) {\\n      font-size: icon-button-theme.$icon-size;\\n    }\\n\\n    @include icon-button-theme.density(0, $query: $query);\\n\\n    @include icon-button-theme.disabled-ink-color(\\n      text-disabled-on-light,\\n      $query: $query\\n    );\\n\\n    svg,\\n    img {\\n      @include feature-targeting.targets($feat-structure) {\\n        width: icon-button-theme.$icon-size;\\n        height: icon-button-theme.$icon-size;\\n      }\\n    }\\n  }\\n\\n  @include static-styles($query: $query);\\n}\\n\\n@mixin ripple($query: feature-targeting.all()) {\\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\\n\\n  .mdc-icon-button {\\n    @include ripple.surface(\\n      $query: $query,\\n      $ripple-target: icon-button-theme.$ripple-target\\n    );\\n    @include ripple.radius-unbounded(\\n      $query: $query,\\n      $ripple-target: icon-button-theme.$ripple-target\\n    );\\n    @include ripple-theme.states(\\n      $query: $query,\\n      $ripple-target: icon-button-theme.$ripple-target\\n    );\\n\\n    .mdc-icon-button__ripple {\\n      $feat-structure: feature-targeting.create-target($query, structure);\\n      @include feature-targeting.targets($feat-structure) {\\n        height: 100%;\\n        left: 0px;\\n        pointer-events: none;\\n        position: absolute;\\n        top: 0px;\\n        width: 100%;\\n        z-index: -1;\\n      }\\n    }\\n  }\\n}\\n\\n///\\n/// Helps style the icon button in its disabled state.\\n/// @access private\\n///\\n@mixin if-disabled_ {\\n  &:disabled {\\n    @content;\\n  }\\n}\\n\",\"//\\n// Copyright 2021 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n//\\n\\n// stylelint-disable selector-class-pattern --\\n// Selector '.mdc-*' should only be used in this project.\\n\\n@use 'sass:math';\\n@use 'sass:map';\\n@use 'sass:meta';\\n@use '@material/density/functions' as density-functions;\\n@use '@material/density/variables' as density-variables;\\n@use '@material/elevation/elevation-theme';\\n@use '@material/feature-targeting/feature-targeting';\\n@use '@material/focus-ring/focus-ring';\\n@use '@material/ripple/ripple-theme';\\n@use '@material/rtl/rtl';\\n@use '@material/dom/dom';\\n@use '@material/theme/keys';\\n@use '@material/theme/state';\\n@use '@material/theme/theme';\\n@use '@material/theme/theme-color';\\n@use '@material/touch-target/mixins' as touch-target-mixins;\\n\\n$ripple-target: '.mdc-icon-button__ripple';\\n\\n$icon-size: 24px !default;\\n$size: 48px !default;\\n$minimum-height: 28px !default;\\n$maximum-height: $size !default;\\n$container-shape: 50%;\\n$density-scale: density-variables.$default-scale !default;\\n$density-config: (\\n  size: (\\n    default: $size,\\n    maximum: $maximum-height,\\n    minimum: $minimum-height,\\n  ),\\n) !default;\\n\\n$_custom-property-prefix: 'icon-button';\\n\\n$light-theme: (\\n  disabled-icon-color: theme-color.$on-surface,\\n  disabled-icon-opacity: 0.38,\\n  icon-color: theme-color.$primary,\\n  icon-size: $icon-size,\\n  focus-icon-color: theme-color.$primary,\\n  focus-state-layer-color: theme-color.$primary,\\n  focus-state-layer-opacity: 0.12,\\n  hover-icon-color: theme-color.$primary,\\n  hover-state-layer-color: theme-color.$primary,\\n  hover-state-layer-opacity: 0.08,\\n  pressed-icon-color: theme-color.$primary,\\n  pressed-state-layer-color: theme-color.$primary,\\n  pressed-state-layer-opacity: 0.12,\\n  state-layer-size: $size,\\n);\\n\\n@mixin theme($theme) {\\n  @include theme.validate-theme($light-theme, $theme);\\n\\n  @include keys.declare-custom-properties(\\n    $theme,\\n    $prefix: $_custom-property-prefix\\n  );\\n}\\n\\n@mixin theme-styles($theme) {\\n  @include theme.validate-theme($light-theme, $theme);\\n\\n  $theme: keys.create-theme-properties(\\n    $theme,\\n    $prefix: $_custom-property-prefix\\n  );\\n\\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\\n  @include _icon-size(map.get($theme, icon-size));\\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\\n  @include _icon-color-with-map(\\n    (\\n      default: map.get($theme, icon-color),\\n      disabled: map.get($theme, disabled-icon-color),\\n      focus: map.get($theme, focus-icon-color),\\n      hover: map.get($theme, hover-icon-color),\\n      pressed: map.get($theme, pressed-icon-color),\\n    )\\n  );\\n\\n  // States styles\\n  @include ripple-theme.theme-styles(\\n    (\\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\\n    ),\\n    $ripple-target: $ripple-target\\n  );\\n}\\n\\n///\\n/// Sets the density scale for icon button.\\n///\\n/// @param {Number | String} $density-scale - Density scale value for component.\\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\\n///\\n@mixin density($density-scale, $query: feature-targeting.all()) {\\n  $size: density-functions.prop-value(\\n    $density-config: $density-config,\\n    $density-scale: $density-scale,\\n    $property-name: size,\\n  );\\n\\n  @include size($size, $query: $query);\\n}\\n\\n///\\n/// Sets the size of the icon-button.\\n///\\n/// @param {Number} $size - Size value for icon-button.\\n///     Size will set the width, height, and padding for the overall component.\\n///\\n@mixin size($size, $query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    width: $size;\\n    height: $size;\\n    padding: math.div($size - $icon-size, 2);\\n  }\\n\\n  .mdc-icon-button__focus-ring {\\n    @include feature-targeting.targets($feat-structure) {\\n      display: none;\\n    }\\n  }\\n\\n  @include ripple-theme.focus {\\n    .mdc-icon-button__focus-ring {\\n      @include dom.forced-colors-mode($exclude-ie11: true) {\\n        @include focus-ring.focus-ring(\\n          $query: $query,\\n          $container-outer-padding-vertical: 0,\\n          $container-outer-padding-horizontal: 0\\n        );\\n      }\\n\\n      @include feature-targeting.targets($feat-structure) {\\n        display: block;\\n        max-height: $size;\\n        max-width: $size;\\n      }\\n    }\\n  }\\n\\n  &.mdc-icon-button--reduced-size {\\n    $component-size: $size;\\n    // Icon button ripple size is capped at 40px for icon buttons with\\n    // densities -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\\n    // See http://b/192353968 for more info.\\n    @if $size >= 40px and $size <= 48px {\\n      $component-size: 40px;\\n    }\\n\\n    .mdc-icon-button__ripple {\\n      @include feature-targeting.targets($feat-structure) {\\n        width: $component-size;\\n        height: $component-size;\\n      }\\n\\n      @include touch-target-mixins.margin(\\n        $component-height: $component-size,\\n        $component-width: $component-size,\\n        $touch-target-height: $size,\\n        $touch-target-width: $size,\\n        $query: $query\\n      );\\n    }\\n\\n    @include ripple-theme.focus {\\n      .mdc-icon-button__focus-ring {\\n        @include feature-targeting.targets($feat-structure) {\\n          max-height: $component-size;\\n          max-width: $component-size;\\n        }\\n      }\\n    }\\n  }\\n\\n  .mdc-icon-button__touch {\\n    @include touch-target-mixins.touch-target(\\n      $set-width: true,\\n      $query: $query,\\n      $height: $size,\\n      $width: $size\\n    );\\n  }\\n}\\n\\n///\\n/// Sets the width, height and padding of icon button. Also changes the size of\\n/// the icon itself based on button size.\\n///\\n/// @param {Number} $width - Width value for icon-button.\\n/// @param {Number} $height - Height value for icon-button. (default: $width)\\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\\n/// @deprecated\\n///     This mixin provides too much of low level customization.\\n///     Please use mdc-icon-button-size instead.\\n///\\n@mixin icon-size(\\n  $width,\\n  $height: $width,\\n  $padding: math.div(math.max($width, $height), 2),\\n  $query: feature-targeting.all()\\n) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  $component-width: $width + $padding * 2;\\n  $component-height: $height + $padding * 2;\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    width: $component-width;\\n    height: $component-height;\\n    padding: $padding;\\n    font-size: math.max($width, $height);\\n  }\\n\\n  svg,\\n  img {\\n    @include feature-targeting.targets($feat-structure) {\\n      width: $width;\\n      height: $height;\\n    }\\n  }\\n}\\n\\n///\\n/// Sets the font color and the ripple color to the provided color value.\\n/// @param {Color} $color - The desired font and ripple color.\\n///\\n@mixin ink-color($color, $query: feature-targeting.all()) {\\n  @include ink-color_($color, $query: $query);\\n  @include ripple-theme.states(\\n    $color,\\n    $query: $query,\\n    $ripple-target: $ripple-target\\n  );\\n}\\n\\n///\\n/// Flips icon only in RTL context.\\n///\\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  .mdc-button__icon {\\n    @include rtl.rtl {\\n      @include feature-targeting.targets($feat-structure) {\\n        @include rtl.ignore-next-line();\\n        transform: rotate(180deg);\\n      }\\n    }\\n  }\\n}\\n\\n///\\n/// Sets the font color to the provided color value for a disabled icon button.\\n/// @param {Color} $color - The desired font color.\\n///\\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\\n  @include if-disabled_ {\\n    @include ink-color_($color, $query: $query);\\n  }\\n}\\n\\n///\\n/// Includes ad-hoc high contrast mode support.\\n///\\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\\n    // away from :before to a dedicated element.\\n    outline: solid 3px transparent;\\n\\n    &:focus {\\n      outline: double 5px transparent;\\n    }\\n  }\\n}\\n\\n///\\n/// Sets the font color to the provided color value. This can be wrapped in\\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\\n/// @access private\\n///\\n@mixin ink-color_($color, $query: feature-targeting.all()) {\\n  $feat-color: feature-targeting.create-target($query, color);\\n\\n  @include feature-targeting.targets($feat-color) {\\n    @include theme.property(color, $color);\\n  }\\n}\\n\\n@mixin _state-layer-size($size) {\\n  @include theme.property(height, $size);\\n  @include theme.property(width, $size);\\n}\\n\\n@mixin _icon-size($size) {\\n  @include theme.property(font-size, $size);\\n\\n  svg,\\n  img {\\n    @include theme.property(width, $size);\\n    @include theme.property(height, $size);\\n  }\\n}\\n\\n///\\n/// Sets the icon opacity to the given opacity.\\n/// @access private\\n///\\n@mixin _disabled-icon-opacity($opacity) {\\n  &:disabled {\\n    @include theme.property(opacity, $opacity);\\n  }\\n}\\n\\n///\\n/// Sets the icon color to the given color.\\n/// @param {map} $color-map - The desired icon color, specified as a map of\\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\\n/// @access private\\n///\\n@mixin _icon-color-with-map($color-map) {\\n  @include ink-color_(state.get-default-state($color-map));\\n\\n  $disabled: state.get-disabled-state($color-map);\\n  @if $disabled {\\n    &:disabled {\\n      @include ink-color_($disabled);\\n    }\\n  }\\n\\n  $focus: state.get-focus-state($color-map);\\n  @if $focus {\\n    @include ripple-theme.focus {\\n      @include ink-color_($focus);\\n    }\\n  }\\n\\n  $hover: state.get-hover-state($color-map);\\n  @if $hover {\\n    &:hover {\\n      @include ink-color_($hover);\\n    }\\n  }\\n\\n  $pressed: state.get-pressed-state($color-map);\\n  @if $pressed {\\n    @include ripple-theme.active {\\n      @include ink-color_($pressed);\\n    }\\n  }\\n}\\n\\n@mixin _states-colors($color-map) {\\n  // TODO(b/191298796): support focused & pressed key colors.\\n\\n  $hover: map.get($color-map, hover);\\n  @if $hover {\\n    @include ripple-theme.states-base-color(\\n      $color: $hover,\\n      $ripple-target: $ripple-target\\n    );\\n  }\\n}\\n\\n///\\n/// Helps style the icon button in its disabled state.\\n/// @access private\\n///\\n@mixin if-disabled_ {\\n  &:disabled {\\n    @content;\\n  }\\n}\\n\",\"@use \\\"@material/theme\\\"with ($primary: #4c647c,\\n  $secondary: #98bc56,\\n  $background: #f7f8fd);\\n@use '@material/icon-button/mdc-icon-button';\\n@use '@material/icon-button/_index'as icon-button;\\n@use '@material/textfield';\\n\\n.mdc-data-table__cell--center {\\n  text-align: center;\\n}\\n\\n.mdc-icon-button--delete {\\n  @include icon-button.ink-color(#B61615);\\n  color: #B61615 !important;  \\n}\\n\\n// .mdc-icon-button:not(:disabled) {\\n//   color: #B61615;\\n// }\\n\\n.fab-icon-fixed {\\n  position: fixed;\\n  bottom: calc(1vw + 1vh);\\n  right: calc(1vw + 1vh);\\n}\\n\\n.dropdown-filter {\\n  --mdc-ripple-color: transparent;\\n\\n  padding: 10px;\\n  background-color: #f5f5f5;\\n\\n\\n  .dropdown-filter-buttons {\\n    margin-top: 20px;\\n    display: flex;\\n    justify-content: flex-end;\\n  }\\n}\\n\",\"// Copyright 2020 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n\\n@use '@material/feature-targeting/feature-targeting';\\n///\\n/// Emits necessary layout styles to set a transparent border around an element\\n/// without interfering with the rest of its component layout. The border is\\n/// only visible in high-contrast mode. The target element should be a child of\\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\\n///\\n/// @param {number} $border-width - The width of the transparent border.\\n/// @param {string} $border-style - The style of the transparent border.\\n///\\n@mixin transparent-border(\\n  $border-width: 1px,\\n  $border-style: solid,\\n  $query: feature-targeting.all()\\n) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    position: absolute;\\n    box-sizing: border-box;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    border: $border-width $border-style transparent;\\n    border-radius: inherit;\\n    content: '';\\n    pointer-events: none;\\n  }\\n\\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\\n  @include forced-colors-mode($exclude-ie11: true) {\\n    @include feature-targeting.targets($feat-structure) {\\n      border-color: CanvasText;\\n    }\\n  }\\n}\\n\\n///\\n/// Visually hides text content for accessibility. This text should only be\\n/// visible to screen reader users.\\n/// See https://a11yproject.com/posts/how-to-hide-content/\\n///\\n@mixin visually-hidden($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    clip: rect(1px, 1px, 1px, 1px);\\n    height: 1px;\\n    overflow: hidden;\\n    position: absolute;\\n    white-space: nowrap; /* added line */\\n    width: 1px;\\n  }\\n}\\n\\n/// Selects for IE11 support.\\n///\\n/// @content styles to emit for IE11 support\\n@mixin ie11-support {\\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n    @content;\\n  }\\n}\\n\\n/// Selects for `forced-colors` high contrast mode.\\n///\\n/// While in `forced-colors` mode, only system colors should be used.\\n///\\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\\n/// @content styles to emit in `forced-colors` mode\\n@mixin forced-colors-mode($exclude-ie11: false) {\\n  @if $exclude-ie11 {\\n    @media screen and (forced-colors: active) {\\n      @content;\\n    }\\n  } @else {\\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\\n      @content;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright 2021 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n//\\n\\n@use '@material/feature-targeting/feature-targeting';\\n@use '@material/rtl/rtl';\\n@use '@material/dom/dom';\\n\\n$ring-radius-default: 8px !default;\\n$inner-ring-width-default: 2px !default;\\n$inner-ring-color-default: transparent !default;\\n$outer-ring-width-default: 2px !default;\\n$outer-ring-color-default: transparent !default;\\n$container-outer-padding-default: 2px !default;\\n\\n/// Styles applied to the component's inner focus ring element.\\n///\\n/// @param $ring-radius [$ring-radius-default] - Focus ring radius.\\n/// @param $inner-ring-width [$inner-ring-width-default] - Inner focus ring width.\\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\\n/// @param $outer-ring-color [$outer-ring-color-default] - Outer focus ring color.\\n/// @param $container-outer-padding [$container-outer-padding-default] - The\\n///     distance between the focus ring and the container.\\n@mixin focus-ring(\\n  $query: feature-targeting.all(),\\n  $ring-radius: $ring-radius-default,\\n  $inner-ring-width: $inner-ring-width-default,\\n  $inner-ring-color: $inner-ring-color-default,\\n  $outer-ring-width: $outer-ring-width-default,\\n  $outer-ring-color: $outer-ring-color-default,\\n  $container-outer-padding-vertical: $container-outer-padding-default,\\n  $container-outer-padding-horizontal: $container-outer-padding-default\\n) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n  $container-size-vertical: 100%;\\n  @if $container-outer-padding-vertical != 0 {\\n    $container-size-vertical: calc(\\n      100% + #{$container-outer-padding-vertical * 2}\\n    );\\n  }\\n  $container-size-horizontal: 100%;\\n  @if $container-outer-padding-horizontal != 0 {\\n    $container-size-horizontal: calc(\\n      100% + #{$container-outer-padding-horizontal * 2}\\n    );\\n  }\\n  $outer-ring-size: 100%;\\n  @if $outer-ring-width > 0 {\\n    $outer-ring-size: calc(100% + #{$outer-ring-width * 2});\\n  }\\n  @include feature-targeting.targets($feat-structure) {\\n    pointer-events: none;\\n    border: $inner-ring-width solid $inner-ring-color;\\n    border-radius: $ring-radius - $outer-ring-width;\\n    box-sizing: content-box;\\n    position: absolute;\\n    top: 50%;\\n    @include rtl.ignore-next-line();\\n    left: 50%;\\n    @include rtl.ignore-next-line();\\n    transform: translate(-50%, -50%);\\n    height: $container-size-vertical;\\n    width: $container-size-horizontal;\\n\\n    @include dom.forced-colors-mode($exclude-ie11: true) {\\n      border-color: CanvasText;\\n    }\\n\\n    &::after {\\n      content: '';\\n      border: $outer-ring-width solid $outer-ring-color;\\n      border-radius: $ring-radius;\\n      display: block;\\n      position: absolute;\\n      top: 50%;\\n      @include rtl.ignore-next-line();\\n      left: 50%;\\n      @include rtl.ignore-next-line();\\n      transform: translate(-50%, -50%);\\n      height: $outer-ring-size;\\n      width: $outer-ring-size;\\n\\n      @include dom.forced-colors-mode($exclude-ie11: true) {\\n        border-color: CanvasText;\\n      }\\n    }\\n  }\\n}\\n/// Customizes the color of the button focus ring.\\n///\\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\\n@mixin focus-ring-color(\\n  $inner-ring-color: $inner-ring-color-default,\\n  $outer-ring-color: $outer-ring-color-default\\n) {\\n  border-color: $inner-ring-color;\\n\\n  &::after {\\n    border-color: $outer-ring-color;\\n  }\\n}\\n\\n/// Customizes the border radius of the button focus ring.\\n///\\n/// @param {Number} $ring-radius - The border radius of the focus ring.\\n/// @param {Number} $outer-ring-width [$outer-ring-width] - Width of the outer\\n///     ring, required to compute the radius for the inner ring.\\n@mixin focus-ring-radius(\\n  $ring-radius,\\n  $outer-ring-width: $outer-ring-width-default,\\n  $query: feature-targeting.all()\\n) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    border-radius: $ring-radius - $outer-ring-width;\\n\\n    &::after {\\n      border-radius: $ring-radius;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright 2019 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n//\\n\\n// stylelint-disable selector-class-pattern --\\n// Selector '.mdc-*' should only be used in this project.\\n\\n@use 'sass:math';\\n@use '@material/base/mixins' as base-mixins;\\n@use '@material/feature-targeting/feature-targeting';\\n@use '@material/rtl/rtl';\\n\\n$height: 48px !default;\\n$width: $height !default;\\n\\n/// Styles applied to the component's touch target wrapper element.\\n@mixin wrapper($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  .mdc-touch-target-wrapper {\\n    @include feature-targeting.targets($feat-structure) {\\n      // Ensure that styles are only emitted once across all components that\\n      // have increased touch targets.\\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\\n        // temporarily for backwards-compatibility.\\n        display: inline;\\n      }\\n    }\\n  }\\n}\\n\\n/// Styles applied to the component's inner touch target element.\\n/// By default, only sets the inner element height to the minimum touch target\\n/// height ($mdc-touch-target-height).\\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\\n///     minimum touch target width ($mdc-touch-target-width).\\n/// @param $height [$mdc-touch-target-height] - Touch target height.\\n/// @param $width [$mdc-touch-target-width] - Touch target width.\\n@mixin touch-target(\\n  $set-width: false,\\n  $query: feature-targeting.all(),\\n  $height: $height,\\n  $width: $width\\n) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    position: absolute;\\n    top: 50%;\\n    height: $height;\\n  }\\n\\n  @if $set-width {\\n    @include feature-targeting.targets($feat-structure) {\\n      @include rtl.ignore-next-line();\\n      left: 50%;\\n      width: $width;\\n      transform: translate(-50%, -50%);\\n    }\\n  } @else {\\n    @include feature-targeting.targets($feat-structure) {\\n      left: 0;\\n      right: 0;\\n      transform: translateY(-50%);\\n    }\\n  }\\n}\\n\\n/// Applies margin to the component with the increased touch target,\\n/// to compensate for the touch target.\\n@mixin margin(\\n  $component-height,\\n  $component-width: null,\\n  $touch-target-height: $height,\\n  $touch-target-width: $width,\\n  $query: feature-targeting.all()\\n) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    margin-top: $vertical-margin-value;\\n    margin-bottom: $vertical-margin-value;\\n  }\\n\\n  @if $component-width {\\n    $horizontal-margin-value: math.div(\\n      $touch-target-width - $component-width,\\n      2\\n    );\\n\\n    @include feature-targeting.targets($feat-structure) {\\n      margin-right: $horizontal-margin-value;\\n      margin-left: $horizontal-margin-value;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright 2020 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n//\\n\\n@use 'sass:list';\\n@use 'sass:map';\\n@use 'sass:meta';\\n@use './gss';\\n\\n/// When true, add an additional property/value declaration before declarations\\n/// that use advanced features such as custom properties or CSS functions. This\\n/// adds fallback support for older browsers such as IE11 that do not support\\n/// these features at the cost of additional CSS. Set this variable to false to\\n/// disable generating fallback declarations.\\n$enable-fallback-declarations: true !default;\\n\\n/// Writes a CSS property/value declaration. This mixin is used throughout the\\n/// theme package for consistency for dynamically setting CSS property values.\\n///\\n/// This mixin may optionally take a fallback value. For advanced features such\\n/// as custom properties or CSS functions like min and max, a fallback value is\\n/// recommended to support older browsers.\\n///\\n/// @param {String} $property - The CSS property of the declaration.\\n/// @param {*} $value - The value of the CSS declaration. The value should be\\n///     resolved by other theme functions first (i.e. custom property Maps and\\n///     Material theme keys are not supported in this mixin). If the value is\\n///     null, no declarations will be emitted.\\n/// @param {*} $fallback - An optional fallback value for older browsers. If\\n///     provided, a second property/value declaration will be added before the\\n///     main property/value declaration.\\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\\n/// @param {Bool} $important - If true, add `!important` to the declaration.\\n@mixin declaration(\\n  $property,\\n  $value,\\n  $fallback-value: null,\\n  $gss: (),\\n  $important: false\\n) {\\n  // Normally setting a null value to a property will not emit CSS, so mixins\\n  // wouldn't need to check this. However, Sass will throw an error if the\\n  // interpolated property is a custom property.\\n  @if $value != null {\\n    $important-rule: if($important, ' !important', '');\\n\\n    @if $fallback-value and $enable-fallback-declarations {\\n      @include gss.annotate($gss);\\n      #{$property}: #{$fallback-value} #{$important-rule};\\n\\n      // Add @alternate to annotations.\\n      $gss: map.merge(\\n        $gss,\\n        (\\n          alternate: true,\\n        )\\n      );\\n    }\\n\\n    @include gss.annotate($gss);\\n    #{$property}: #{$value}#{$important-rule};\\n  }\\n}\\n\\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\\n/// If a list of 4 values is given, it is returned as-is.\\n///\\n/// Examples:\\n///\\n/// unpack-value(4px) => 4px 4px 4px 4px\\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\\n///\\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\\n/// @return {List} a List of 4 value numbers.\\n@function unpack-value($value) {\\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\\n    @return $value $value $value $value;\\n  } @else if list.length($value) == 4 {\\n    @return $value;\\n  } @else if list.length($value) == 3 {\\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\\n      list.nth($value, 2);\\n  } @else if list.length($value) == 2 {\\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\\n      list.nth($value, 2);\\n  }\\n\\n  @error \\\"Invalid CSS property value: '#{$value}' is more than 4 values\\\";\\n}\\n\",\"//\\n// Copyright 2016 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n//\\n\\n// stylelint-disable selector-class-pattern --\\n// Selector '.mdc-*' should only be used in this project.\\n\\n@use 'sass:math';\\n@use 'sass:color';\\n@use 'sass:map';\\n@use '@material/animation/functions' as functions2;\\n@use '@material/animation/variables' as variables2;\\n@use '@material/base/mixins' as base-mixins;\\n@use '@material/theme/custom-properties';\\n@use '@material/feature-targeting/feature-targeting';\\n@use '@material/rtl/rtl';\\n@use '@material/theme/theme';\\n@use './ripple-theme';\\n\\n@mixin core-styles($query: feature-targeting.all()) {\\n  @include static-styles($query: $query);\\n\\n  .mdc-ripple-surface {\\n    @include ripple-theme.states($query: $query);\\n  }\\n}\\n\\n@mixin static-styles($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  .mdc-ripple-surface {\\n    @include surface($query: $query);\\n    @include radius-bounded($query: $query);\\n    @include surface-styles($query: $query);\\n  }\\n\\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded],\\n  .mdc-ripple-upgraded--unbounded {\\n    @include radius-unbounded($query: $query);\\n    @include unbounded-styles($query: $query);\\n  }\\n}\\n\\n/// Sets all states (including hover, focus, press, activated and selected) with\\n/// given color as base color.\\n///\\n/// This mixin is for internal use only. Use `ripple-theme.states($color)` mixin\\n/// to set interactive states (hover, focus & press) color.\\n///\\n/// @param {Color|String} $color - Target base color. Can be valid CSS color or\\n///     a color string literal (i.e., `primary`, `secondary`, etc).\\n@mixin states-for-color($color, $query: feature-targeting.all()) {\\n  @include ripple-theme.states($color, $query: $query);\\n  @include ripple-theme.states-activated($color, $query: $query);\\n  @include ripple-theme.states-selected($color, $query: $query);\\n}\\n\\n@mixin surface-styles($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    position: relative;\\n    outline: none;\\n    overflow: hidden;\\n  }\\n}\\n\\n@mixin unbounded-styles($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n  @include feature-targeting.targets($feat-structure) {\\n    overflow: visible;\\n  }\\n}\\n\\n@mixin common($query: feature-targeting.all()) {\\n  $feat-animation: feature-targeting.create-target($query, animation);\\n\\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\\n  // mdc-ripple.scss.)\\n  @include feature-targeting.targets($feat-animation) {\\n    @include base-mixins.emit-once('mdc-ripple/common/animation') {\\n      @include keyframes_;\\n    }\\n  }\\n}\\n\\n@mixin surface(\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&',\\n  $include-will-change: true // TODO(b/151931961): Remove once resolved\\n) {\\n  $feat-animation: feature-targeting.create-target($query, animation);\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    --mdc-ripple-fg-size: 0;\\n    --mdc-ripple-left: 0;\\n    --mdc-ripple-top: 0;\\n    --mdc-ripple-fg-scale: 1;\\n    --mdc-ripple-fg-translate-end: 0;\\n    --mdc-ripple-fg-translate-start: 0;\\n\\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n    // TODO(b/151931961): Remove the following block once resolved\\n    @if $include-will-change {\\n      will-change: transform, opacity;\\n    }\\n  }\\n\\n  #{$ripple-target}::before,\\n  #{$ripple-target}::after {\\n    @include feature-targeting.targets($feat-structure) {\\n      position: absolute;\\n      border-radius: 50%;\\n      opacity: 0;\\n      pointer-events: none;\\n      content: '';\\n    }\\n  }\\n\\n  #{$ripple-target}::before {\\n    @include feature-targeting.targets($feat-animation) {\\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\\n      transition: opacity ripple-theme.$states-wash-duration linear,\\n        background-color ripple-theme.$states-wash-duration linear;\\n    }\\n\\n    @include feature-targeting.targets($feat-structure) {\\n      // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\\n      @include theme.property(\\n        z-index,\\n        custom-properties.create(--mdc-ripple-z-index, 1)\\n      );\\n    }\\n  }\\n\\n  #{$ripple-target}::after {\\n    @include feature-targeting.targets($feat-structure) {\\n      @include theme.property(\\n        z-index,\\n        custom-properties.create(--mdc-ripple-z-index, 0)\\n      );\\n    }\\n  }\\n\\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\\n\\n  &.mdc-ripple-upgraded {\\n    #{$ripple-target}::before {\\n      @include feature-targeting.targets($feat-structure) {\\n        transform: scale(var(--mdc-ripple-fg-scale, 1));\\n      }\\n    }\\n\\n    #{$ripple-target}::after {\\n      @include feature-targeting.targets($feat-structure) {\\n        top: 0;\\n        @include rtl.ignore-next-line();\\n        left: 0;\\n        transform: scale(0);\\n        transform-origin: center center;\\n      }\\n    }\\n  }\\n\\n  &.mdc-ripple-upgraded--unbounded {\\n    #{$ripple-target}::after {\\n      @include feature-targeting.targets($feat-structure) {\\n        top: var(--mdc-ripple-top, 0);\\n        @include rtl.ignore-next-line();\\n        left: var(--mdc-ripple-left, 0);\\n      }\\n    }\\n  }\\n\\n  &.mdc-ripple-upgraded--foreground-activation {\\n    #{$ripple-target}::after {\\n      @include feature-targeting.targets($feat-animation) {\\n        animation: mdc-ripple-fg-radius-in ripple-theme.$translate-duration\\n            forwards,\\n          mdc-ripple-fg-opacity-in ripple-theme.$fade-in-duration forwards;\\n      }\\n    }\\n  }\\n\\n  &.mdc-ripple-upgraded--foreground-deactivation {\\n    #{$ripple-target}::after {\\n      @include feature-targeting.targets($feat-animation) {\\n        animation: mdc-ripple-fg-opacity-out ripple-theme.$fade-out-duration;\\n      }\\n\\n      @include feature-targeting.targets($feat-structure) {\\n        // Retain transform from mdc-ripple-fg-radius-in activation\\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0))\\n          scale(var(--mdc-ripple-fg-scale, 1));\\n      }\\n    }\\n  }\\n}\\n\\n@mixin radius-bounded(\\n  $radius: 100%,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&'\\n) {\\n  $feat-struture: feature-targeting.create-target($query, structure);\\n\\n  #{$ripple-target}::before,\\n  #{$ripple-target}::after {\\n    @include feature-targeting.targets($feat-struture) {\\n      top: calc(50% - #{$radius});\\n      @include rtl.ignore-next-line();\\n      left: calc(50% - #{$radius});\\n      width: $radius * 2;\\n      height: $radius * 2;\\n    }\\n  }\\n\\n  &.mdc-ripple-upgraded {\\n    #{$ripple-target}::after {\\n      @include feature-targeting.targets($feat-struture) {\\n        width: var(--mdc-ripple-fg-size, $radius);\\n        height: var(--mdc-ripple-fg-size, $radius);\\n      }\\n    }\\n  }\\n}\\n\\n@mixin radius-unbounded(\\n  $radius: 100%,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&'\\n) {\\n  $feat-struture: feature-targeting.create-target($query, structure);\\n\\n  #{$ripple-target}::before,\\n  #{$ripple-target}::after {\\n    @include feature-targeting.targets($feat-struture) {\\n      top: calc(50% - #{math.div($radius, 2)});\\n      @include rtl.ignore-next-line();\\n      left: calc(50% - #{math.div($radius, 2)});\\n      width: $radius;\\n      height: $radius;\\n    }\\n  }\\n\\n  &.mdc-ripple-upgraded {\\n    #{$ripple-target}::before,\\n    #{$ripple-target}::after {\\n      @include feature-targeting.targets($feat-struture) {\\n        top: var(--mdc-ripple-top, calc(50% - #{math.div($radius, 2)}));\\n        @include rtl.ignore-next-line();\\n        left: var(--mdc-ripple-left, calc(50% - #{math.div($radius, 2)}));\\n        width: var(--mdc-ripple-fg-size, $radius);\\n        height: var(--mdc-ripple-fg-size, $radius);\\n      }\\n    }\\n\\n    #{$ripple-target}::after {\\n      @include feature-targeting.targets($feat-struture) {\\n        width: var(--mdc-ripple-fg-size, $radius);\\n        height: var(--mdc-ripple-fg-size, $radius);\\n      }\\n    }\\n  }\\n}\\n\\n// Common styles for a ripple target element.\\n// Used for components which have an inner ripple target element.\\n@mixin target-common($query: feature-targeting.all()) {\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  @include feature-targeting.targets($feat-structure) {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    // Necessary for clicks on other inner elements (e.g. close icon in chip)\\n    // to go through.\\n    pointer-events: none;\\n  }\\n}\\n\\n@mixin keyframes_ {\\n  @keyframes mdc-ripple-fg-radius-in {\\n    from {\\n      animation-timing-function: variables2.$standard-curve-timing-function;\\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\\n      // that custom properties are supported within the browser before adding this class, we can\\n      // safely use them without a fallback.\\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\\n    }\\n\\n    to {\\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0))\\n        scale(var(--mdc-ripple-fg-scale, 1));\\n    }\\n  }\\n\\n  @keyframes mdc-ripple-fg-opacity-in {\\n    from {\\n      animation-timing-function: linear;\\n      opacity: 0;\\n    }\\n\\n    to {\\n      opacity: var(--mdc-ripple-fg-opacity, 0);\\n    }\\n  }\\n\\n  @keyframes mdc-ripple-fg-opacity-out {\\n    from {\\n      animation-timing-function: linear;\\n      opacity: var(--mdc-ripple-fg-opacity, 0);\\n    }\\n\\n    to {\\n      opacity: 0;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright 2017 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n//\\n\\n$deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\\n$standard-curve-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\\n$acceleration-curve-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\\n$sharp-curve-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\\n\\n@function enter($name, $duration, $delay: 0ms) {\\n  @return $name $duration $delay $deceleration-curve-timing-function;\\n}\\n\\n@function exit-permanent($name, $duration, $delay: 0ms) {\\n  @return $name $duration $delay $acceleration-curve-timing-function;\\n}\\n\\n@function exit-temporary($name, $duration, $delay: 0ms) {\\n  @return $name $duration $delay $sharp-curve-timing-function;\\n}\\n\\n@function standard($name, $duration, $delay: 0ms) {\\n  @return $name $duration $delay $standard-curve-timing-function;\\n}\\n\\n@function linear($name, $duration, $delay: 0ms) {\\n  @return $name $duration $delay linear;\\n}\\n\",\"//\\n// Copyright 2016 Google Inc.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n// THE SOFTWARE.\\n//\\n\\n// stylelint-disable selector-class-pattern --\\n// Selector '.mdc-*' should only be used in this project.\\n\\n@use 'sass:color';\\n@use 'sass:map';\\n@use '@material/animation/functions' as functions2;\\n@use '@material/animation/variables' as variables2;\\n@use '@material/base/mixins' as base-mixins;\\n@use '@material/feature-targeting/feature-targeting';\\n@use '@material/theme/css';\\n@use '@material/theme/custom-properties';\\n@use '@material/theme/theme';\\n@use '@material/theme/keys';\\n@use '@material/theme/shadow-dom';\\n@use '@material/theme/theme-color';\\n\\n$custom-property-prefix: 'ripple';\\n\\n$fade-in-duration: 75ms !default;\\n$fade-out-duration: 150ms !default;\\n$translate-duration: 225ms !default;\\n$states-wash-duration: 15ms !default;\\n\\n// Notes on states:\\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\\n\\n$dark-ink-opacities: (\\n  hover: 0.04,\\n  focus: 0.12,\\n  press: 0.12,\\n  selected: 0.08,\\n  activated: 0.12,\\n) !default;\\n\\n$light-ink-opacities: (\\n  hover: 0.08,\\n  focus: 0.24,\\n  press: 0.24,\\n  selected: 0.16,\\n  activated: 0.24,\\n) !default;\\n\\n// Legacy\\n\\n$pressed-dark-ink-opacity: 0.16 !default;\\n$pressed-light-ink-opacity: 0.32 !default;\\n\\n// State selector variables used for state selector mixins below.\\n$_hover-selector: '&:hover';\\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\\n$_active-selector: '&:not(:disabled):active';\\n\\n$light-theme: (\\n  focus-state-layer-color: theme-color.$on-surface,\\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\\n  hover-state-layer-color: theme-color.$on-surface,\\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\\n  pressed-state-layer-color: theme-color.$on-surface,\\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\\n);\\n\\n@mixin theme($theme) {\\n  @include keys.declare-custom-properties(\\n    $theme,\\n    $prefix: $custom-property-prefix\\n  );\\n\\n  @if shadow-dom.$css-selector-fallback-declarations {\\n    .mdc-ripple-surface {\\n      @include theme-styles($theme);\\n    }\\n  }\\n}\\n\\n$_ripple-theme: (\\n  hover-state-layer-color: null,\\n  focus-state-layer-color: null,\\n  pressed-state-layer-color: null,\\n  hover-state-layer-opacity: null,\\n  focus-state-layer-opacity: null,\\n  pressed-state-layer-opacity: null,\\n);\\n\\n@mixin theme-styles($theme, $ripple-target: '&') {\\n  $theme: keys.create-theme-properties(\\n    $theme,\\n    $prefix: $custom-property-prefix\\n  );\\n\\n  // TODO(b/191298796): Support states layer color for every interactive states.\\n  // Use only hover state layer color, ignoring focus and pressed color.\\n  @include internal-theme-styles($theme, $ripple-target);\\n}\\n\\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\\n\\n  @include states-base-color(\\n    map.get($theme, hover-state-layer-color),\\n    $ripple-target: $ripple-target\\n  );\\n  @include states-hover-opacity(\\n    map.get($theme, hover-state-layer-opacity),\\n    $ripple-target: $ripple-target\\n  );\\n  @include states-focus-opacity(\\n    map.get($theme, focus-state-layer-opacity),\\n    $ripple-target: $ripple-target\\n  );\\n  @include states-press-opacity(\\n    map.get($theme, pressed-state-layer-opacity),\\n    $ripple-target: $ripple-target\\n  );\\n}\\n\\n@mixin states-base-color(\\n  $color,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&'\\n) {\\n  $feat-color: feature-targeting.create-target($query, color);\\n\\n  @if $color {\\n    @if not custom-properties.is-custom-prop($color) {\\n      $color: custom-properties.create(\\n        ripple-color,\\n        theme-color.get-custom-property($color)\\n      );\\n    }\\n\\n    #{$ripple-target}::before,\\n    #{$ripple-target}::after {\\n      @include feature-targeting.targets($feat-color) {\\n        @include theme.property(background-color, $color);\\n      }\\n    }\\n  }\\n}\\n\\n///\\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\\n/// @param {string} $ripple-target - the optional selector for the ripple element\\n///\\n@mixin states-opacities(\\n  $opacity-map: (),\\n  $has-nested-focusable-element: false,\\n  $ripple-target: '&',\\n  $query: feature-targeting.all()\\n) {\\n  // Ensure sufficient specificity to override base state opacities\\n  @if map.get($opacity-map, hover) {\\n    @include states-hover-opacity(\\n      map.get($opacity-map, hover),\\n      $ripple-target: $ripple-target,\\n      $query: $query\\n    );\\n  }\\n\\n  @if map.get($opacity-map, focus) {\\n    @include states-focus-opacity(\\n      map.get($opacity-map, focus),\\n      $ripple-target: $ripple-target,\\n      $has-nested-focusable-element: $has-nested-focusable-element,\\n      $query: $query\\n    );\\n  }\\n\\n  @if map.get($opacity-map, press) {\\n    @include states-press-opacity(\\n      map.get($opacity-map, press),\\n      $ripple-target: $ripple-target,\\n      $query: $query\\n    );\\n  }\\n}\\n\\n@mixin states-hover-opacity(\\n  $opacity,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&'\\n) {\\n  $feat-color: feature-targeting.create-target($query, color);\\n\\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\\n  }\\n\\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\\n  &:hover,\\n  &.mdc-ripple-surface--hover {\\n    @include states-background-selector($ripple-target) {\\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\\n      @include feature-targeting.targets($feat-color) {\\n        @include theme.property(opacity, $opacity);\\n      }\\n    }\\n  }\\n}\\n\\n@mixin states-focus-opacity(\\n  $opacity,\\n  $has-nested-focusable-element: false,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&'\\n) {\\n  // Focus overrides hover by reusing the ::before pseudo-element.\\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\\n  // but undesirable in general in case of nested stateful components.\\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\\n  @if $has-nested-focusable-element {\\n    // JS-enabled selectors.\\n    &.mdc-ripple-upgraded--background-focused,\\n    &.mdc-ripple-upgraded:focus-within,\\n    // CSS-only selectors.\\n    &:not(.mdc-ripple-upgraded):focus,\\n    &:not(.mdc-ripple-upgraded):focus-within {\\n      @include states-background-selector($ripple-target) {\\n        @include states-focus-opacity-properties_(\\n          $opacity: $opacity,\\n          $query: $query\\n        );\\n      }\\n    }\\n  } @else {\\n    // JS-enabled selectors.\\n    &.mdc-ripple-upgraded--background-focused,\\n    // CSS-only selectors.\\n    &:not(.mdc-ripple-upgraded):focus {\\n      @include states-background-selector($ripple-target) {\\n        @include states-focus-opacity-properties_(\\n          $opacity: $opacity,\\n          $query: $query\\n        );\\n      }\\n    }\\n  }\\n}\\n\\n@mixin states-focus-opacity-properties_($opacity, $query) {\\n  $feat-animation: feature-targeting.create-target($query, animation);\\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\\n  $feat-color: feature-targeting.create-target($query, color);\\n\\n  @if $opacity {\\n    @if not custom-properties.is-custom-prop($opacity) {\\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\\n    }\\n\\n    // Note that this duration is only effective on focus, not blur\\n    @include feature-targeting.targets($feat-animation) {\\n      transition-duration: 75ms;\\n    }\\n\\n    @include feature-targeting.targets($feat-color) {\\n      @include theme.property(opacity, $opacity);\\n    }\\n  }\\n}\\n\\n@mixin states-press-opacity(\\n  $opacity,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&'\\n) {\\n  $feat-animation: feature-targeting.create-target($query, animation);\\n  $feat-color: feature-targeting.create-target($query, color);\\n\\n  // Styles for non-upgraded (CSS-only) stateful surfaces\\n\\n  @if $opacity {\\n    @if not custom-properties.is-custom-prop($opacity) {\\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\\n    }\\n\\n    &:not(.mdc-ripple-upgraded) {\\n      // Apply press additively by using the ::after pseudo-element\\n      #{$ripple-target}::after {\\n        @include feature-targeting.targets($feat-animation) {\\n          transition: opacity $fade-out-duration linear;\\n        }\\n      }\\n\\n      &:active {\\n        #{$ripple-target}::after {\\n          @include feature-targeting.targets($feat-animation) {\\n            transition-duration: $fade-in-duration;\\n          }\\n\\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\\n          @include feature-targeting.targets($feat-color) {\\n            @include theme.property(opacity, $opacity);\\n          }\\n        }\\n      }\\n    }\\n\\n    &.mdc-ripple-upgraded {\\n      @include feature-targeting.targets($feat-color) {\\n        // Upgraded ripple should always emit custom property, regardless of\\n        // configuration, since ripple itself feature detects custom property\\n        // support at runtime.\\n        @include custom-properties.configure($emit-custom-properties: true) {\\n          @include theme.property(\\n            custom-properties.create(ripple-fg-opacity, $opacity)\\n          );\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\\n// light or dark.\\n@mixin states(\\n  $color: theme-color.prop-value(on-surface),\\n  $has-nested-focusable-element: false,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&',\\n  $opacity-map: null\\n) {\\n  @include states-interactions_(\\n    $color: $color,\\n    $has-nested-focusable-element: $has-nested-focusable-element,\\n    $query: $query,\\n    $ripple-target: $ripple-target,\\n    $opacity-map: $opacity-map\\n  );\\n}\\n\\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\\n// light or dark.\\n@mixin states-activated(\\n  $color,\\n  $has-nested-focusable-element: false,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&'\\n) {\\n  $feat-color: feature-targeting.create-target($query, color);\\n  $activated-opacity: states-opacity($color, activated);\\n\\n  &--activated {\\n    // Stylelint seems to think that '&' qualifies as a type selector here?\\n    @include states-background-selector($ripple-target) {\\n      // Opacity falls under color because the chosen opacity is color-dependent.\\n      @include feature-targeting.targets($feat-color) {\\n        @include theme.property(\\n          opacity,\\n          custom-properties.create(\\n            --mdc-ripple-activated-opacity,\\n            $activated-opacity\\n          )\\n        );\\n      }\\n    }\\n\\n    @include states-interactions_(\\n      $color: $color,\\n      $has-nested-focusable-element: $has-nested-focusable-element,\\n      $opacity-modifier: $activated-opacity,\\n      $query: $query,\\n      $ripple-target: $ripple-target\\n    );\\n  }\\n}\\n\\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\\n// light or dark.\\n@mixin states-selected(\\n  $color,\\n  $has-nested-focusable-element: false,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&'\\n) {\\n  $feat-color: feature-targeting.create-target($query, color);\\n  $selected-opacity: states-opacity($color, selected);\\n\\n  &--selected {\\n    @include states-background-selector($ripple-target) {\\n      // Opacity falls under color because the chosen opacity is color-dependent.\\n      @include feature-targeting.targets($feat-color) {\\n        @include theme.property(\\n          opacity,\\n          custom-properties.create(\\n            --mdc-ripple-selected-opacity,\\n            $selected-opacity\\n          )\\n        );\\n      }\\n    }\\n\\n    @include states-interactions_(\\n      $color: $color,\\n      $has-nested-focusable-element: $has-nested-focusable-element,\\n      $opacity-modifier: $selected-opacity,\\n      $query: $query,\\n      $ripple-target: $ripple-target\\n    );\\n  }\\n}\\n\\n@mixin states-interactions_(\\n  $color,\\n  $has-nested-focusable-element,\\n  $opacity-modifier: 0,\\n  $query: feature-targeting.all(),\\n  $ripple-target: '&',\\n  $opacity-map: null\\n) {\\n  @include target-selector($ripple-target) {\\n    @include states-base-color($color, $query);\\n  }\\n\\n  @if $opacity-map == null {\\n    $opacity-map: (\\n      hover: states-opacity($color, hover) + $opacity-modifier,\\n      focus: states-opacity($color, focus) + $opacity-modifier,\\n      press: states-opacity($color, press) + $opacity-modifier,\\n    );\\n  }\\n\\n  @include states-opacities(\\n    $opacity-map,\\n    $has-nested-focusable-element: $has-nested-focusable-element,\\n    $ripple-target: $ripple-target,\\n    $query: $query\\n  );\\n}\\n\\n// Wraps content in the `ripple-target` selector if it exists.\\n@mixin target-selector($ripple-target: '&') {\\n  @if $ripple-target == '&' {\\n    @content;\\n  } @else {\\n    #{$ripple-target} {\\n      @content;\\n    }\\n  }\\n}\\n\\n/// Selector for hover, active and focus states.\\n@mixin states-selector() {\\n  #{$_hover-selector},\\n  #{$_focus-selector},\\n  #{$_active-selector} {\\n    @content;\\n  }\\n}\\n\\n@mixin hover() {\\n  #{$_hover-selector} {\\n    @content;\\n  }\\n}\\n\\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\\n// applying focus styles on JS-disabled components, and control focus\\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\\n@mixin focus() {\\n  #{$_focus-selector} {\\n    @content;\\n  }\\n}\\n\\n// Selector for active state. Using `:active:active` to override focus styles.\\n@mixin pressed() {\\n  #{$_active-selector} {\\n    @content;\\n  }\\n}\\n\\n// @deprecated Use `pressed()` mixin - renamed for consistency.\\n@mixin active() {\\n  @include pressed() {\\n    @content;\\n  }\\n}\\n\\n/// Keep the ripple (State overlay) behind the content.\\n@mixin behind-content(\\n  $ripple-target,\\n  $content-root-selector: '&',\\n  $query: feature-targeting.all()\\n) {\\n  // Needed for IE11. Without this, IE11 renders the state layer completely\\n  // underneath the container, making it invisible.\\n  $feat-structure: feature-targeting.create-target($query, structure);\\n\\n  #{$content-root-selector} {\\n    @include feature-targeting.targets($feat-structure) {\\n      z-index: 0;\\n    }\\n  }\\n\\n  #{$ripple-target}::before,\\n  #{$ripple-target}::after {\\n    @include feature-targeting.targets($feat-structure) {\\n      @include theme.property(\\n        z-index,\\n        custom-properties.create(--mdc-ripple-z-index, -1)\\n      );\\n    }\\n  }\\n}\\n\\n@function states-opacity($color, $state) {\\n  $color-value: theme-color.prop-value($color);\\n  $opacity-map: if(\\n    theme-color.tone($color-value) == 'light',\\n    $light-ink-opacities,\\n    $dark-ink-opacities\\n  );\\n\\n  @if not map.has-key($opacity-map, $state) {\\n    @error \\\"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\\\";\\n  }\\n\\n  @return map.get($opacity-map, $state);\\n}\\n\\n@mixin states-background-selector($ripple-target) {\\n  #{$ripple-target}::before {\\n    @content;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Module\nvar code = \"<template>\\n  <require from=\\\"./analyze.scss\\\"></require>\\n  <compose view-model.bind=\\\"currentState\\\"></compose>\\n</template>\\n\";\n// Exports\nexport default code;","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"/static/ic_info.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<template>\\n  <div class=\\\"app-panel-content\\\">\\n    <div class=\\\"app-panel-transition\\\">\\n      <h1 class=\\\"app-panel-title\\\">Currently Analyzed</h1>\\n      <div class=\\\"app-panel-content-dynamic\\\">\\n        <div class=\\\"dynamic-content-container\\\">\\n          <div class=\\\"steps-container\\\">\\n            <mdc-layout-grid no-padding>\\n              <mdc-layout-grid-inner>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item is-active is-passed\\\">Upload Battery File</span>\\n                </mdc-layout-grid-cell>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item is-active\\\">Currently Analyzed</span>\\n                </mdc-layout-grid-cell>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item\\\">Test Results</span>\\n                </mdc-layout-grid-cell>\\n              </mdc-layout-grid-inner>\\n            </mdc-layout-grid>\\n          </div>\\n          <mdc-card class=\\\"app-mdc-card\\\">\\n            <div class=\\\"mdc-card__content\\\">\\n              <mdc-layout-grid>\\n                <mdc-layout-grid-inner>\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <div class=\\\"app-block-info info\\\">\\n                      <mdc-layout-grid>\\n                        <mdc-layout-grid-inner>\\n                          <mdc-layout-grid-cell span=\\\"1\\\" position=\\\"middle\\\">\\n                            <mdc-icon>\\n                              <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"Info\\\" />\\n                            </mdc-icon>\\n                          </mdc-layout-grid-cell>\\n                          <mdc-layout-grid-cell span=\\\"11\\\">\\n                            <p mdc-headline6 t=\\\"you_can_continue_to_work\\\"></p>\\n                            <p mdc-body1> We will continue to analyze in background. </p>\\n                          </mdc-layout-grid-cell>\\n                        </mdc-layout-grid-inner>\\n                      </mdc-layout-grid>\\n                    </div>\\n                  </mdc-layout-grid-cell>\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <span class=\\\"app-stat-item--text\\\">Test Name: <b>${model.name}</b></span>\\n                  </mdc-layout-grid-cell>\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <span class=\\\"app-stat-item--text\\\">Battery File: <b>${model.originalFileName}</b></span>\\n                  </mdc-layout-grid-cell>\\n                  <mdc-layout-grid-cell span=\\\"8\\\">\\n                    <mdc-layout-grid-inner>\\n                      <mdc-layout-grid-cell span=\\\"6\\\">\\n                        <div class=\\\"app-stat-item\\\">\\n                          <span class=\\\"app-stat-item--text\\\">State of charge:</span>\\n                          <img class=\\\"app-stat-item--icon\\\" if.bind=\\\"model.stateOfCharge\\\" \\n                               src=\\\"${`ic_charge_` + model.stateOfCharge + `.svg`}\\\" alt=\\\"${model.stateOfCharge | capitalize}\\\"/>                          \\n                          <span mdc-body1 class=\\\"app-stat-item--description\\\"><small><b>${model.stateOfCharge | capitalize}</b></small></span>\\n                        </div>\\n                      </mdc-layout-grid-cell>\\n                      <mdc-layout-grid-cell span=\\\"6\\\">\\n                        <div class=\\\"app-stat-item\\\">\\n                          <span class=\\\"app-stat-item--text\\\">Temperature:</span>\\n                          <img class=\\\"app-stat-item--icon\\\" if.bind=\\\"model.temperature\\\" \\n                               src=\\\"${`ic_temp_` + model.temperature + `.svg`}\\\" alt=\\\"${model.temperature | capitalize}\\\" />\\n                          <span mdc-body1 class=\\\"app-stat-item--description\\\"><small><b>${model.temperature | capitalize}</b></small></span>\\n                        </div>\\n                      </mdc-layout-grid-cell>\\n                    </mdc-layout-grid-inner>\\n                  </mdc-layout-grid-cell>\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <span class=\\\"app-stat-item--text\\\">Baseline: <b>${model.baseline.name}</b></span>\\n                  </mdc-layout-grid-cell>\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-card-actions full-bleed>\\n                      <button mdc-button raised class=\\\"app-button-secondary\\\" mdcCardAction=\\\"button\\\"\\n                        disabled.bind=\\\"!canExecuteNext\\\" click.delegate=\\\"$parent.next()\\\">\\n                        <span mdc-button-label>Next</span>\\n                        <mdc-icon>arrow_forward</mdc-icon>\\n                      </button>\\n                    </mdc-card-actions>\\n                  </mdc-layout-grid-cell>\\n                </mdc-layout-grid-inner>\\n              </mdc-layout-grid>\\n            </div>\\n          </mdc-card>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"/static/ic_failure.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"/static/ic_success.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"/static/ic_warning.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar ___HTML_LOADER_REPLACEMENT_2___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_2___);\nvar code = \"<template>\\n  <div class=\\\"app-panel-content\\\">\\n    <div class=\\\"app-panel-transition\\\">\\n      <h1 class=\\\"app-panel-title\\\">Results</h1>\\n      <div class=\\\"app-panel-content-dynamic\\\">\\n        <div class=\\\"dynamic-content-container\\\">\\n          <div class=\\\"steps-container\\\">\\n            <mdc-layout-grid no-padding>\\n              <mdc-layout-grid-inner>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item is-active is-passed\\\">Upload Battery File</span>\\n                </mdc-layout-grid-cell>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item is-active is-passed\\\">Currently Analyzed</span>\\n                </mdc-layout-grid-cell>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item is-active\\\">Test Results</span>\\n                </mdc-layout-grid-cell>\\n              </mdc-layout-grid-inner>\\n            </mdc-layout-grid>\\n          </div>\\n          <mdc-layout-grid no-padding>\\n            <mdc-layout-grid-inner>\\n              <mdc-layout-grid-cell span=\\\"12\\\">\\n                <mdc-card class=\\\"app-mdc-card\\\">\\n                  <div class=\\\"mdc-card__content\\\">\\n                    <mdc-layout-grid>\\n                      <mdc-layout-grid-inner>\\n                        <!-- BANNER FAILURE -->\\n                        <mdc-layout-grid-cell span=\\\"12\\\">\\n                          <div class=\\\"app-block-info failure\\\">\\n                            <mdc-layout-grid>\\n                              <mdc-layout-grid-inner>\\n                                <mdc-layout-grid-cell span=\\\"1\\\" position=\\\"middle\\\">\\n                                  <mdc-icon>\\n                                    <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"failure\\\" />\\n                                  </mdc-icon>\\n                                </mdc-layout-grid-cell>\\n                                <mdc-layout-grid-cell span=\\\"11\\\">\\n                                  <p mdc-headline6>State of Risk: <b>High</b></p>\\n                                  <p mdc-body1>Danger found</p>\\n                                </mdc-layout-grid-cell>\\n                              </mdc-layout-grid-inner>\\n                            </mdc-layout-grid>\\n                          </div>\\n                        </mdc-layout-grid-cell>\\n                        <!-- BANNER SUCCESS -->\\n                        <mdc-layout-grid-cell span=\\\"12\\\">\\n                          <div class=\\\"app-block-info success\\\">\\n                            <mdc-layout-grid>\\n                              <mdc-layout-grid-inner>\\n                                <mdc-layout-grid-cell span=\\\"1\\\" position=\\\"middle\\\">\\n                                  <mdc-icon>\\n                                    <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"success\\\" />\\n                                  </mdc-icon>\\n                                </mdc-layout-grid-cell>\\n                                <mdc-layout-grid-cell span=\\\"11\\\">\\n                                  <p mdc-headline6>State of Risk: <b>Low</b></p>\\n                                  <p mdc-body1>Good news!</p>\\n                                </mdc-layout-grid-cell>\\n                              </mdc-layout-grid-inner>\\n                            </mdc-layout-grid>\\n                          </div>\\n                        </mdc-layout-grid-cell>\\n                        <!-- BANNER WARNING -->\\n                        <mdc-layout-grid-cell span=\\\"12\\\">\\n                          <div class=\\\"app-block-info warning\\\">\\n                            <mdc-layout-grid>\\n                              <mdc-layout-grid-inner>\\n                                <mdc-layout-grid-cell span=\\\"1\\\" position=\\\"middle\\\">\\n                                  <mdc-icon>\\n                                    <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_2___ + \"\\\" alt=\\\"warning\\\" />\\n                                  </mdc-icon>\\n                                </mdc-layout-grid-cell>\\n                                <mdc-layout-grid-cell span=\\\"11\\\">\\n                                  <p mdc-headline6>State of Risk: <b>Medium</b></p>\\n                                  <p mdc-body1>Relax meanwhile :)</p>\\n                                </mdc-layout-grid-cell>\\n                              </mdc-layout-grid-inner>\\n                            </mdc-layout-grid>\\n                          </div>\\n                        </mdc-layout-grid-cell>\\n                        <!-- CARD INFO -->\\n                        <mdc-layout-grid-cell span=\\\"12\\\">\\n                          <span class=\\\"app-stat-item--text\\\">Test Name: <b>${model.name}</b></span>\\n                        </mdc-layout-grid-cell>\\n                        <mdc-layout-grid-cell span=\\\"12\\\">\\n                          <span class=\\\"app-stat-item--text\\\">Battery File: <b>${model.originalFileName}</b></span>\\n                        </mdc-layout-grid-cell>\\n                        <mdc-layout-grid-cell span=\\\"8\\\">\\n                          <mdc-layout-grid-inner>\\n                            <mdc-layout-grid-cell span=\\\"6\\\">\\n                              <div class=\\\"app-stat-item\\\">\\n                                <span class=\\\"app-stat-item--text\\\">State of charge:</span>\\n                                <img class=\\\"app-stat-item--icon\\\" if.bind=\\\"model.stateOfCharge\\\" \\n                                     src=\\\"${`ic_charge_` + model.stateOfCharge + `.svg`}\\\" alt=\\\"${model.stateOfCharge | capitalize}\\\"/>                          \\n                          <span mdc-body1 class=\\\"app-stat-item--description\\\"><small><b>${model.stateOfCharge | capitalize}</b></small></span>\\n                              </div>\\n                            </mdc-layout-grid-cell>\\n                            <mdc-layout-grid-cell span=\\\"6\\\">\\n                              <div class=\\\"app-stat-item\\\">\\n                                <span class=\\\"app-stat-item--text\\\">Temperature:</span>\\n                                <img class=\\\"app-stat-item--icon\\\" if.bind=\\\"model.temperature\\\" \\n                                     src=\\\"${`ic_temp_` + model.temperature + `.svg`}\\\" alt=\\\"${model.temperature | capitalize}\\\" />\\n                         <span mdc-body1 class=\\\"app-stat-item--description\\\"><small><b>${model.temperature | capitalize}</b></small></span>\\n                              </div>\\n                            </mdc-layout-grid-cell>\\n                          </mdc-layout-grid-inner>\\n                        </mdc-layout-grid-cell>\\n                        <mdc-layout-grid-cell span=\\\"12\\\">\\n                          <span class=\\\"app-stat-item--text\\\">Baseline: <b>${model.baseline.name}</b></span>\\n                        </mdc-layout-grid-cell>\\n                        <mdc-layout-grid-cell span=\\\"12\\\">\\n                          <mdc-card-actions>\\n                            <mdc-card-action-icons>\\n                              <mdc-card-action-buttons>\\n                                <button mdc-button mdcCardAction=\\\"button\\\">\\n                                  <span mdc-button-label>Close</span>\\n                                </button>\\n                                <button mdc-button raised class=\\\"app-button-secondary\\\" mdcCardAction=\\\"button\\\">\\n                                  <mdc-icon>print</mdc-icon>\\n                                  <span mdc-button-label>Print</span>\\n                                </button>\\n                              </mdc-card-action-buttons>\\n                            </mdc-card-action-icons>\\n                          </mdc-card-actions>\\n                        </mdc-layout-grid-cell>\\n                      </mdc-layout-grid-inner>\\n                    </mdc-layout-grid>\\n                  </div>\\n                </mdc-card>\\n              </mdc-layout-grid-cell>\\n              <mdc-layout-grid-cell span=\\\"12\\\">\\n                <!-- CHART (\\\"H\\\") -->\\n                <mdc-card class=\\\"app-mdc-card card-with-letter\\\">\\n                  <div class=\\\"app-mdc-card--letter\\\">\\n                    <span class=\\\"letter\\\">H</span>\\n                  </div>\\n                  <div class=\\\"mdc-card__content\\\">\\n                    <canvas id=\\\"chart-H\\\" chart=\\\"type: line; should-update: false; data.bind: hChartData\\\"></canvas>\\n                  </div>\\n                </mdc-card>\\n              </mdc-layout-grid-cell>\\n            </mdc-layout-grid-inner>\\n          </mdc-layout-grid>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"/static/ic_charge_low.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"/static/ic_charge_medium.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"/static/ic_charge_high.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_3___ = new URL(\"/static/ic_temp_low.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_4___ = new URL(\"/static/ic_temp_medium.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_5___ = new URL(\"/static/ic_temp_high.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar ___HTML_LOADER_REPLACEMENT_2___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_2___);\nvar ___HTML_LOADER_REPLACEMENT_3___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_3___);\nvar ___HTML_LOADER_REPLACEMENT_4___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_4___);\nvar ___HTML_LOADER_REPLACEMENT_5___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_5___);\nvar code = \"<template>\\n  <div class=\\\"app-panel-content\\\">\\n    <div class=\\\"app-panel-transition\\\">\\n      <h1 class=\\\"app-panel-title\\\">Analyze Battery File</h1>\\n      <div class=\\\"app-panel-content-dynamic\\\">\\n        <div class=\\\"dynamic-content-container\\\">\\n          <div class=\\\"steps-container\\\">\\n            <mdc-layout-grid no-padding>\\n              <mdc-layout-grid-inner>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item is-active\\\">Upload Battery File</span>\\n                </mdc-layout-grid-cell>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item\\\">Currently Analyzed</span>\\n                </mdc-layout-grid-cell>\\n                <mdc-layout-grid-cell span=\\\"4\\\" tablet-span=\\\"12\\\">\\n                  <span class=\\\"step-item\\\">Test Results</span>\\n                </mdc-layout-grid-cell>\\n              </mdc-layout-grid-inner>\\n            </mdc-layout-grid>\\n          </div>\\n          <!-- Card (aka container) -->\\n          <mdc-card class=\\\"app-mdc-card\\\">\\n            <div class=\\\"mdc-card__content\\\">\\n              <mdc-layout-grid>\\n                <mdc-layout-grid-inner>\\n                  <!-- TEST NAME -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-text-field label=\\\"Test Name:\\\" value.bind=\\\"model.name & validate:model.rules\\\"\\n                      validation-errors.bind=\\\"nameErrors\\\" placeholder=\\\"Enter the value\\\"\\n                      aria-placeholder=\\\"Enter the value\\\">\\n                    </mdc-text-field>\\n                    <mdc-text-field-helper-line>\\n                      <mdc-text-field-helper-text repeat.for=\\\"errorInfo of nameErrors\\\" validation>\\n                        ${errorInfo.error.message} </mdc-text-field-helper-text>\\n                    </mdc-text-field-helper-line>\\n                  </mdc-layout-grid-cell>\\n                  <!-- FILE INPUT -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-layout-grid-inner>\\n                      <mdc-layout-grid-cell span=\\\"4\\\">\\n                        <p>Select Battery File to test:</p>\\n                      </mdc-layout-grid-cell>\\n                      <mdc-layout-grid-cell span=\\\"8\\\" position=\\\"middle\\\">\\n                        <mdc-layout-grid-inner>\\n                          <mdc-layout-grid-cell span=\\\"3\\\" position=\\\"middle\\\">\\n                            <label mdc-button raised for=\\\"mdc-file-input\\\"> Browse </label>\\n                            <input id=\\\"mdc-file-input\\\" type=\\\"file\\\" files.from-view=\\\"files\\\" />\\n                          </mdc-layout-grid-cell>\\n                          <mdc-layout-grid-cell span=\\\"9\\\">\\n                            <div class=\\\"input-file-text\\\">\\n                              <mdc-text-field outlined disabled label=\\\"${file.name}\\\" readonly>\\n                              </mdc-text-field>\\n                            </div>\\n                          </mdc-layout-grid-cell>\\n                      </mdc-layout-grid-cell>\\n                    </mdc-layout-grid-inner>\\n                  </mdc-layout-grid-cell>\\n                  <!-- SELECTS Container -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-layout-grid-inner>\\n                      <!-- SELECT CHARGE -->\\n                      <mdc-layout-grid-cell span=\\\"6\\\">\\n                        <mdc-select label=\\\"State of Charge\\\" value.bind=\\\"model.stateOfCharge\\\">\\n                          <mdc-icon mdc-select-icon if.bind=\\\"model.stateOfCharge\\\"><img src=\\\"${`ic_charge_` + model.stateOfCharge + `.svg`}\\\" alt=\\\"Low\\\"/></mdc-icon>\\n                          <mdc-list>\\n                            <mdc-list-item> Choose... </mdc-list-item>\\n                            <mdc-list-item value=\\\"low\\\">\\n                              <img mdc-list-item-leading=\\\"avatar\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"Low\\\" />\\n                              <span>Low</span>\\n                            </mdc-list-item>\\n                            <mdc-list-item value=\\\"medium\\\">\\n                              <img mdc-list-item-leading=\\\"avatar\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Medium\\\" />\\n                              <span>Medium</span>\\n                            </mdc-list-item>\\n                            <mdc-list-item value=\\\"high\\\">\\n                              <img mdc-list-item-leading=\\\"avatar\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_2___ + \"\\\" alt=\\\"High\\\" />\\n                              <span>High</span>\\n                            </mdc-list-item>\\n                          </mdc-list>\\n                        </mdc-select>\\n                      </mdc-layout-grid-cell>\\n                      <!-- SELECT TEMP -->\\n                      <mdc-layout-grid-cell span=\\\"6\\\">\\n                        <mdc-select label=\\\"Temperature\\\" value.bind=\\\"model.temperature\\\">\\n                          <mdc-icon mdc-select-icon if.bind=\\\"model.temperature\\\"><img vertical src=\\\"${`ic_temp_` + model.temperature + `.svg`}\\\" alt=\\\"Low\\\"/></mdc-icon>\\n                          <mdc-list>\\n                            <mdc-list-item> Choose... </mdc-list-item>\\n                            <mdc-list-item value=\\\"low\\\">\\n                              <img mdc-list-item-leading=\\\"avatar\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_3___ + \"\\\" alt=\\\"Low\\\" />\\n                              <span>Low</span>\\n                            </mdc-list-item>\\n                            <mdc-list-item value=\\\"medium\\\">\\n                              <img mdc-list-item-leading=\\\"avatar\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_4___ + \"\\\" alt=\\\"Medium\\\" />\\n                              <span>Medium</span>\\n                            </mdc-list-item>\\n                            <mdc-list-item value=\\\"high\\\">\\n                              <img mdc-list-item-leading=\\\"avatar\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_5___ + \"\\\" alt=\\\"High\\\" />\\n                              <span>High</span>\\n                            </mdc-list-item>\\n                          </mdc-list>\\n                        </mdc-select>\\n                      </mdc-layout-grid-cell>\\n                    </mdc-layout-grid-inner>\\n                  </mdc-layout-grid-cell>\\n                  <!-- BASELINE -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <div class=\\\"au-text-field\\\" mdc-menu-surface-anchor>\\n                      <mdc-text-field label=\\\"Baseline\\\" ref=\\\"validationInput\\\"></mdc-text-field>\\n                      <mdc-text-field-helper-line></mdc-text-field-helper-line>\\n                      <mdc-lookup input.bind=\\\"validationInput\\\" options.bind=\\\"baselines\\\" preload-options\\n                        display-field=\\\"name\\\" value.bind=\\\"model.baseline & validateOnChange:model.rules\\\">\\n                      </mdc-lookup>\\n                    </div>\\n                  </mdc-layout-grid-cell>\\n                  <!-- CARD BOTTOM with BUTTON -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-card-actions full-bleed>\\n                      <button class=\\\"app-button-secondary\\\" mdc-button raised mdcCardAction=\\\"button\\\"\\n                        disabled.bind=\\\"!canExecuteNext\\\" click.delegate=\\\"$parent.next()\\\">\\n                        <span mdc-button-label>Start</span>\\n                        <mdc-icon>arrow_forward</mdc-icon>\\n                      </button>\\n                    </mdc-card-actions>\\n                  </mdc-layout-grid-cell>\\n                </mdc-layout-grid-inner>\\n              </mdc-layout-grid>\\n            </div>\\n          </mdc-card>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\n  <require from=\\\"./baseline.scss\\\"></require>\\n  <div class=\\\"app-panel-content\\\">\\n    <div class=\\\"app-panel-transition\\\">\\n      <h1 class=\\\"app-panel-title\\\">BASELINES</h1>\\n      <div class=\\\"app-panel-content-dynamic\\\">\\n        <compose view-model.bind=\\\"currentState\\\" model.bind=\\\"$this\\\"></compose>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\n  <div class=\\\"app-panel-content\\\">\\n    <div class=\\\"app-panel-transition\\\">\\n      <h1 class=\\\"app-panel-title\\\" if.bind=\\\"model.isNew\\\">New Baseline</h1>\\n      <h1 class=\\\"app-panel-title\\\" else>Edit Baseline</h1>\\n      <div class=\\\"app-panel-content-dynamic\\\">\\n        <div class=\\\"dynamic-content-container\\\">\\n          <mdc-card class=\\\"app-mdc-card\\\">\\n            <div class=\\\"mdc-card__content\\\">\\n              <mdc-layout-grid>\\n                <mdc-layout-grid-inner>\\n                  <!-- BASELINE NAME -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-text-field label=\\\"Baseline Name\\\" value.bind=\\\"model.name & validate:model.rules\\\"\\n                      validation-errors.bind=\\\"nameErrors\\\" type=\\\"text\\\"></mdc-text-field>\\n                    <mdc-text-field-helper-line>\\n                      <mdc-text-field-helper-text repeat.for=\\\"errorInfo of nameErrors\\\" validation>\\n                        ${errorInfo.error.message} </mdc-text-field-helper-text>\\n                    </mdc-text-field-helper-line>\\n                  </mdc-layout-grid-cell>\\n                  <!-- FILE INPUT -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-layout-grid-inner>\\n                      <mdc-layout-grid-cell span=\\\"4\\\">\\n                        <p>Select File:</p>\\n                      </mdc-layout-grid-cell>\\n                      <mdc-layout-grid-cell span=\\\"8\\\" position=\\\"middle\\\">\\n                        <mdc-layout-grid-inner>\\n                          <mdc-layout-grid-cell span=\\\"3\\\" position=\\\"middle\\\">\\n                            <label mdc-button raised for=\\\"mdc-file-input\\\"> Browse </label>\\n                            <input id=\\\"mdc-file-input\\\" type=\\\"file\\\" files.from-view=\\\"files\\\" />\\n                          </mdc-layout-grid-cell>\\n                          <mdc-layout-grid-cell span=\\\"9\\\">\\n                            <div class=\\\"input-file-text\\\">\\n                              <mdc-text-field outlined disabled label=\\\"${file.name}\\\" readonly>\\n                              </mdc-text-field>\\n                            </div>\\n                          </mdc-layout-grid-cell>\\n                      </mdc-layout-grid-cell>\\n                    </mdc-layout-grid-inner>\\n                  </mdc-layout-grid-cell>\\n                  <!-- MUST BE A MULTIPLE FILES UPLOADED ??? -->\\n                  <!-- <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <div repeat.for=\\\"i of files.length\\\">${files[i].name}</div>\\n                  </mdc-layout-grid-cell> -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-text-field label=\\\"Single Cell Capacity\\\"\\n                      value.bind=\\\"model.singleCellCapacity & validate:model.rules\\\" validation-errors.bind=\\\"sccErrors\\\"\\n                      type=\\\"number\\\" pattern=\\\"(\\\\d*\\\\.)?\\\\d+\\\" min=\\\"0\\\" max=\\\"255\\\" step=\\\"0.01\\\">\\n                    </mdc-text-field>\\n                    <mdc-text-field-helper-line>\\n                      <mdc-text-field-helper-text repeat.for=\\\"errorInfo of sccErrors\\\" validation>\\n                        ${errorInfo.error.message} </mdc-text-field-helper-text>\\n                    </mdc-text-field-helper-line>\\n                  </mdc-layout-grid-cell>\\n                  <mdc-layout-grid-cell tablet-span=\\\"12\\\" position=\\\"middle\\\">\\n                    <label>Topology Of Cell Pack</label>\\n                  </mdc-layout-grid-cell>\\n                  <mdc-layout-grid-cell>\\n                    <mdc-text-field label=\\\"P\\\" value.bind=\\\"model.topologyOfCellPackPValue & validate:model.rules\\\"\\n                      type=\\\"number\\\" min=\\\"1\\\"></mdc-text-field>\\n                  </mdc-layout-grid-cell>\\n                  <mdc-layout-grid-cell>\\n                    <mdc-text-field label=\\\"S\\\" value.bind=\\\"model.topologyOfCellPackSValue & validate:model.rules\\\"\\n                      type=\\\"number\\\" min=\\\"1\\\"></mdc-text-field>\\n                  </mdc-layout-grid-cell>\\n                  <!-- CARD BOTTOM with BUTTON -->\\n                  <mdc-layout-grid-cell span=\\\"12\\\">\\n                    <mdc-card-actions full-bleed>\\n                      <mdc-layout-grid-inner>\\n                        <mdc-layout-grid-cell phone-span=\\\"2\\\">\\n                          <button class=\\\"app-button-secondary\\\" raised mdc-button disabled.bind=\\\"!canExecuteOk\\\"\\n                            click.delegate=\\\"ok()\\\">\\n                            <span mdc-button-label>Create</span>\\n                          </button>\\n                        </mdc-layout-grid-cell>\\n                        <mdc-layout-grid-cell phone-span=\\\"2\\\">\\n                          <mdc-button click.delegate=\\\"cancel()\\\">Cancel</mdc-button>\\n                        </mdc-layout-grid-cell>\\n                      </mdc-layout-grid-inner>\\n                    </mdc-card-actions>\\n                  </mdc-layout-grid-cell>\\n                </mdc-layout-grid-inner>\\n              </mdc-layout-grid>\\n            </div>\\n          </mdc-card>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\n  <div>\\n    <mdc-data-table mdcdatatable:rowselectionchanged.delegate=\\\"onSelectionChanged($event.detail)\\\" pagination\\n      page-sizes.bind=\\\"[10,20,30]\\\" records-count.bind=\\\"baselines.length\\\" active-page.bind=\\\"activePage\\\"\\n      page-size.bind=\\\"pageSize\\\" pagination-position=\\\"between\\\"\\n      mdcdatatable:navigation.trigger=\\\"handleNavigation($event.detail.type)\\\"\\n      mdcdatatable:sorted.trigger=\\\"handleSort($event)\\\">\\n      <table>\\n        <colgroup>\\n          <col style=\\\"width: 100px;\\\">\\n          <col style=\\\"width: 100px;\\\">\\n          <col style=\\\"width: 100px;\\\">\\n          <col style=\\\"width: 100px;\\\">\\n          <col style=\\\"width: 100px;\\\">\\n          <col style=\\\"width: 100px;\\\">\\n        </colgroup>\\n        <thead>\\n          <tr>\\n            <th class=\\\"mdc-data-table__header-cell--checkbox\\\">\\n              <mdc-checkbox></mdc-checkbox>\\n            </th>\\n            <th class=\\\"mdc-data-table__header-cell mdc-data-table__header-cell--with-sort\\\" role=\\\"columnheader\\\"\\n              scope=\\\"col\\\" aria-sort=\\\"none\\\" data-column-id=\\\"model.name\\\">\\n              <div class=\\\"mdc-data-table__header-cell-wrapper\\\">\\n                <!-- <div class=\\\"mdc-rescursor\\\"   resizable resize.trigger=\\\"foo($event.detail)\\\" style=\\\"border-right-style: solid; border-right-width: 3px; border-right-color: black; display: block; height: 56px; position: absolute; right: 0; top: 0; width: 4px;\\\"></div> -->\\n                <div class=\\\"mdc-data-table__header-cell-label\\\">Baseline Name</div>\\n\\n                <!-- TODO: The column menu POC -->\\n                <!-- <div mdc-menu-surface-anchor class=\\\"mdc-menu-surface--anchor\\\" ref=\\\"nameColumnAnchor\\\">\\n                  <button mdc-icon-button icon=\\\"more_vert\\\"\\n                    click.delegate=\\\"nameColumnMenu.open = !nameColumnMenu.open\\\"></button>\\n                  <mdc-menu view-model.ref=\\\"nameColumnMenu\\\" stay-open-on-selection anchor-corner=\\\"BOTTOM_RIGHT\\\"\\n                    anchor.bind=\\\"nameColumnAnchor\\\">\\n                    <div class=\\\"dropdown-filter\\\">\\n                      <mdc-select change.delegate=\\\"filter($event)\\\" anchor-margin.bind=\\\"{top: 10}\\\">\\n                        <mdc-list>\\n                          <mdc-list-item value=\\\"equals\\\">Equal</mdc-list-item>\\n                          <mdc-list-item value=\\\"not_equals\\\">Not Equal</mdc-list-item>\\n                          <mdc-list-item value=\\\"greater_than\\\">Greater Than</mdc-list-item>\\n                          <mdc-list-item value=\\\"less_than\\\">Less Than</mdc-list-item>\\n                        </mdc-list>\\n                      </mdc-select>\\n                      <div>\\n                        <mdc-text-field change.delegate=\\\"filter($event)\\\" anchor-margin.bind=\\\"{top: 10}\\\"\\n                          placeholder=\\\"Enter the Value\\\"></mdc-text-field>\\n                      </div>\\n                      <div class=\\\"dropdown-filter-buttons\\\">\\n                        <button mdc-button click.delegate=\\\"OkFilter($event)\\\">filter</button>\\n                        <button mdc-button click.delegate=\\\"dismiss($event)\\\">dismiss</button>\\n                      </div>\\n                    </div>\\n                  </mdc-menu>\\n                </div> -->\\n                <button class=\\\"mdc-icon-button material-icons mdc-data-table__sort-icon-button\\\"\\n                  aria-label=\\\"Sort by name\\\" aria-describedby=\\\"name-status-label\\\"> arrow_upward </button>\\n                <div class=\\\"mdc-data-table__sort-status-label\\\" aria-hidden=\\\"true\\\" id=\\\"name-status-label\\\"></div>\\n              </div>\\n              <!-- <div class=\\\"mdc-rescursor\\\"   resizable resize.trigger=\\\"foo($event.detail)\\\" style=\\\"border-right-style: solid; border-right-width: 1px; border-right-color: black; display: block; height: 56px; position: absolute; top: 0; width: 4px;\\\"></div> -->\\n            </th>\\n            <th class=\\\"mdc-data-table__header-cell mdc-data-table__header-cell--with-sort\\\" role=\\\"columnheader\\\"\\n              scope=\\\"col\\\" aria-sort=\\\"none\\\" data-column-id=\\\"model.singleCellCapacity\\\">\\n              <div class=\\\"mdc-data-table__header-cell-wrapper\\\">\\n                <div class=\\\"mdc-data-table__header-cell-label\\\"> Single Cell Capacity </div>\\n                <button class=\\\"mdc-icon-button material-icons mdc-data-table__sort-icon-button\\\"\\n                  aria-label=\\\"Sort by Single Cell Capacity\\\" aria-describedby=\\\"scc-status-label\\\"> arrow_upward </button>\\n                <div class=\\\"mdc-data-table__sort-status-label\\\" aria-hidden=\\\"true\\\" id=\\\"scc-status-label\\\"></div>\\n              </div>\\n            </th>\\n            <th class=\\\"mdc-data-table__header-cell mdc-data-table__header-cell--with-sort\\\" role=\\\"columnheader\\\"\\n              scope=\\\"col\\\" aria-sort=\\\"none\\\" data-column-id=\\\"model.topologyOfCellPackPValue\\\">\\n              <div class=\\\"mdc-data-table__header-cell-wrapper\\\">\\n                <div class=\\\"mdc-data-table__header-cell-label\\\"> Topology Of Cell Pack </div>\\n                <button class=\\\"mdc-icon-button material-icons mdc-data-table__sort-icon-button\\\"\\n                  aria-label=\\\"Sort by Topology Of Cell Pack\\\" aria-describedby=\\\"tcp-status-label\\\"> arrow_upward </button>\\n                <div class=\\\"mdc-data-table__sort-status-label\\\" aria-hidden=\\\"true\\\" id=\\\"tcp-status-label\\\"></div>\\n              </div>\\n            </th>\\n            <th class=\\\"mdc-data-table__header-cell mdc-data-table__header-cell--with-sort\\\" role=\\\"columnheader\\\"\\n              scope=\\\"col\\\" aria-sort=\\\"none\\\" data-column-id=\\\"model.uploadedAt\\\">\\n              <div class=\\\"mdc-data-table__header-cell-wrapper\\\">\\n                <div class=\\\"mdc-data-table__header-cell-label\\\"> UploadedAt </div>\\n                <button class=\\\"mdc-icon-button material-icons mdc-data-table__sort-icon-button\\\"\\n                  aria-label=\\\"Sort by Topology Of Cell Pack\\\" aria-describedby=\\\"uploaded-status-label\\\"> arrow_upward\\n                </button>\\n                <div class=\\\"mdc-data-table__sort-status-label\\\" aria-hidden=\\\"true\\\" id=\\\"uploaded-status-label\\\"></div>\\n              </div>\\n            </th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr mdc-data-table-row repeat.for=\\\"baseline of baselines | sort:orderBy:order | page:pageSize:activePage\\\"\\n            with.bind=\\\"baseline\\\">\\n            <td class=\\\"mdc-data-table__cell--checkbox\\\">\\n              <mdc-checkbox checked.bind=\\\"isSelected\\\"></mdc-checkbox>\\n            </td>\\n            <td>${model.name}</td>\\n            <td class=\\\"mdc-data-table__cell--center\\\">${model.singleCellCapacity}</td>\\n            <td class=\\\"mdc-data-table__cell--center\\\"> ${model.topologyOfCellPackPValue}P\\n              ${model.topologyOfCellPackSValue}S </td>\\n            <td>${baseline.model.uploadedAt | dateFormat: format || 'MM/DD/YYYY'}</td>\\n            <td>\\n              <button mdc-icon-button class=\\\"mdc-icon-button--delete\\\" icon=\\\"delete\\\" click.delegate=\\\"delete($this)\\\"></button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </mdc-data-table>\\n  </div>\\n  <!-- DO NOT REMOVE IT -->\\n  <!-- IT'S ANOTHER VERSION OF THE ADD BUTTON! -->\\n  <!-- <mdc-layout-grid no-padding style=\\\"padding-top: 10px\\\">\\n    <mdc-layout-grid-inner>\\n      <mdc-layout-grid-cell>\\n        <mdc-button raised click.delegate=\\\"addNewBaseline()\\\">Add Baseline</mdc-button>\\n      </mdc-layout-grid-cell>\\n    </mdc-layout-grid-inner>\\n  </mdc-layout-grid> -->\\n  <div class=\\\"fab-icon-fixed\\\">\\n    <button mdc-fab icon=\\\"add\\\" class=\\\"app-button-primary\\\" click.delegate=\\\"addNewBaseline()\\\"></button>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\n  <div class=\\\"app-panel-content\\\">\\n    <div class=\\\"app-panel-transition\\\">\\n      <h1 class=\\\"app-panel-title\\\" t=\\\"my_batteries\\\"></h1>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\n  <div class=\\\"app-panel-content\\\">\\n    <div class=\\\"app-panel-transition\\\">\\n      <h1 class=\\\"app-panel-title\\\">REPORTS</h1>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","import { autoinject, inject, transient } from 'aurelia-framework';\nimport { ViewModelCreatorService } from '@logofx/aurelia-mvvm-plugin';\nimport { Start } from './start';\nimport { IDataService, DataService } from 'model';\n\n@transient(Analyze)\n@inject(DataService, ViewModelCreatorService)\nexport class Analyze {\n\n  constructor(private dataService: IDataService, private viewModelCreatorService: ViewModelCreatorService) {    \n  } \n\n    bind() {\n\n      this.dataService.createTestAsync().then(test => {\n        this.currentState =  this.viewModelCreatorService.create<Start>(Start, test);\n    });\n  }\n\n  private _currentState;\n  public get currentState() {\n    return this._currentState;\n  }\n  public set currentState(value) {\n    this._currentState = value;\n  }\n  \n  next(): void {\n    this.currentState.next(this);\n  }\n}\n","import { ObjectViewModel } from '@logofx/aurelia-mvvm-plugin';\nimport { transient, useView, PLATFORM } from 'aurelia-framework';\nimport { DataService, ITest } from 'model';\nimport { Results } from './results';\nimport { IState } from './state';\n\n@useView(PLATFORM.moduleName('./currently-analyzed.html')) // ...because the different behavior in prod. build\n@transient(CurrentlyAnalyzed)\nexport class CurrentlyAnalyzed extends ObjectViewModel<ITest> implements IState {\n  \n  constructor(model: ITest, private dataService: DataService) {\n    super(model);\n  }\n  public get canExecuteNext(): boolean {\n    return true;\n  }\n\n  public next(context): void {\n    context.currentState = context.viewModelCreatorService.create(Results, this.model);\n  }\n}\n","import { transient, inject, useView, PLATFORM } from 'aurelia-framework';\nimport { ChartData } from 'chart.js';\nimport { IDataService } from 'model/contracts';\n\n@useView(PLATFORM.moduleName('./results.html')) // ...because the different behavior in prod. build\n@transient(Results)\n@inject(IDataService)\nexport class Results {\n  \n  constructor(private dataService: IDataService) {    \n  }\n\n  bind(model): void {\n    this.resetLineData();\n  }\n\n  hChartData: ChartData;\n\n  resetLineData() {\n    this.hChartData = {\n      labels: Array.from({length: 15}, (_, i) => (i * 10).toString()),\n      datasets: [\n        {\n          label: '',\n          backgroundColor: 'rgba(220,220,0,0.2)',\n          borderColor: 'rgba(0,220,220,1)',\n          pointBackgroundColor: 'rgba(200,200,200,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          data: [316.8, 316.7, 316.85, 316.7, 315.8, 315.5, 315.45, 315.4, 315.35, 315.4, 315.4, 315.45, 315.4, 315.35, 315.35, 315.4],\n          cubicInterpolationMode: 'default',\n          tension: 0.3\n        }\n      ]\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { IBaselineInfo } from 'model/contracts';\nimport { bindable, bindingMode, computedFrom, transient, inject, autoinject, PLATFORM, useView } from 'aurelia-framework';\nimport { MdcValidationRenderer } from '@aurelia-mdc-web/validation';\nimport { EditableObjectViewModel } from '@logofx/aurelia-mvvm-plugin';\nimport { DataService, ITest } from 'model';\nimport { validateTrigger } from 'aurelia-validation';\nimport { IState } from './state';\nimport { CurrentlyAnalyzed } from './currently-analyzed';\n\n@useView(PLATFORM.moduleName('./start.html')) // ...because the different behavior in prod. build\n@transient(Start)\n//@inject(IDataService)\n@autoinject\nexport class Start extends EditableObjectViewModel<ITest> implements IState{\n  \n  baselines: IBaselineInfo[] = [];\n  \n  constructor(model: ITest, private dataService: DataService) {\n    super(model);\n\n    this.validationController.changeTrigger(validateTrigger.change);\n    this.validationController.addRenderer(new MdcValidationRenderer());    \n  }\n\n  private _files: FileList;\n  @bindable({ defaultBindingMode: bindingMode.fromView })\n  public get files(): FileList {\n    return this._files;\n  }\n  public set files(value: FileList) {\n    this._files = value;\n  }\n  protected filesChanged(files: FileList): void {\n    if (!files || files.length === 0) {\n      return;\n    }\n\n    this.model.originalFileName = this.files[0].name;\n\n    // const reader = new FileReader();\n\n    // reader.onload = \n    \n  }\n\n  @computedFrom('files')\n  public get file() {\n    if (!this.files || this.files.length === 0) {\n      return undefined;\n    }\n    return this.files[0];\n  }\n  \n  @computedFrom('model.isDirty', 'validationController.errors.length')\n  public get canExecuteNext(): boolean {\n    return this.validationController.errors.length === 0 && this.model.isDirty;\n  }\n\n  public next(context): void {\n    // create\n    context.currentState = context.viewModelCreatorService.create(CurrentlyAnalyzed, this.model);\n  }\n\n  protected async attached() {\n    this.baselines = await this.dataService.getBaselineInfosAsync();\n\n    if (this.baselines.length > 0) {\n      this.model.baseline = this.baselines[0];\n    }\n   \n    this.beginEdit();\n  }\n\n  protected save(model: ITest): Promise<any> {\n    throw new Error('Method not implemented.');\n  }\n  protected afterSave(model: ITest): Promise<any> {\n    throw new Error('Method not implemented.');\n  }\n  protected discard(model: ITest): Promise<any> {\n    throw new Error('Method not implemented.');\n  }\n  protected showError(error: any): Promise<any> {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { EditableBaseline } from './editable-baseline';\nimport { ObjectViewModel, ViewModelCreatorService } from '@logofx/aurelia-mvvm-plugin';\nimport { transient, inject } from 'aurelia-framework';\nimport { IBaseline, IDataService } from 'model/contracts';\nimport { DataService } from 'model/implementation';\nimport { Table } from './table';\n\n@transient(Baselines)\n@inject(IDataService, ViewModelCreatorService)\nexport class Baselines {\n  \n  constructor(private dataService: IDataService, private viewModelCreatorService: ViewModelCreatorService) {    \n  } \n\n  private _currentState: unknown = this.viewModelCreatorService.create<Table>(Table);\n  public get currentState() {\n    return this._currentState;\n  }\n  public set currentState(value) {\n    this._currentState = value;\n  }\n\n  public async addNewBaseline(): Promise<void> {\n    const baseline = await this.dataService.createBaselineAsync();\n    const baselineViewModel = this.viewModelCreatorService.create<EditableBaseline>(EditableBaseline, baseline);\n\n    baselineViewModel.beginEdit();\n\n    this.currentState = baselineViewModel;\n  }\n\n  onAddNewBaselineCancelled() {\n    this._currentState = this.viewModelCreatorService.create<Table>(Table);\n  }\n\n  \n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { bindable, bindingMode, computedFrom, inject, transient, useView, PLATFORM } from 'aurelia-framework';\nimport { validateTrigger, ValidationRules } from 'aurelia-validation';\nimport { MdcValidationRenderer } from '@aurelia-mdc-web/validation';\nimport { EditableObjectViewModel } from \"@logofx/aurelia-mvvm-plugin\";\nimport { IBaseline, IDataService } from \"model/contracts\";\nimport { Baselines } from './baselines';\n\n@useView(PLATFORM.moduleName('./editable-baseline.html')) // ...because the different behavior in prod. build\n@transient(EditableBaseline)\n@inject(IBaseline, IDataService)\nexport class EditableBaseline extends EditableObjectViewModel<IBaseline> {\n\n  private _parentContext: Baselines;\n\n  constructor(model: IBaseline, private dataService: IDataService) {\n    super(model);\n\n    this.validationController.changeTrigger(validateTrigger.change);\n    this.validationController.addRenderer(new MdcValidationRenderer());    \n  }\n\n  protected activate(params, _, __): void {\n    this._parentContext = params;\n  }\n\n  private _files: FileList;\n  @bindable({ defaultBindingMode: bindingMode.fromView })\n  public get files(): FileList {\n    return this._files;\n  }\n  public set files(value: FileList) {\n    this._files = value;\n    //this.validationController.validate()\n  }\n  protected filesChanged(files: FileList): void {\n    if (!files || files.length === 0) {\n      return;\n    }\n\n    this.model.originalFileNames.splice(0);\n\n    for (let i = 0; i < files.length; i++) {\n      this.model.originalFileNames.push(files[i].name);\n    }\n    \n  }\n\n  @computedFrom('files')\n  public get file() {\n    if (!this.files || this.files.length === 0) {\n      return undefined;\n    }\n    return this.files[0];\n  }\n\n  @computedFrom('model.isDirty', 'validationController.errors.length', 'files.length')\n  public get canExecuteOk(): boolean {\n    return this.validationController.errors.length === 0 && this.files?.length > 0 && this.model.isDirty;\n  }\n\n  public ok(): void {\n    this.endEdit();\n  }\n  \n  public cancel(): void {\n    this.model.cancelEdit();\n    \n    this._parentContext.onAddNewBaselineCancelled();\n  }\n\n  protected async save(model: IBaseline): Promise<any> {\n    await this.dataService.updateBaselineAsync(model);\n  }\n\n  protected async afterSave(model: IBaseline): Promise<any> {\n    this._parentContext.onAddNewBaselineCancelled();\n  }\n\n  protected async discard(model: IBaseline): Promise<any> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  protected async showError(error: any): Promise<any> {\n    alert(error.message);\n  }\n\n}\n","import { ViewModelCreatorService, WrappingCollection } from '@logofx/aurelia-mvvm-plugin';\nimport { transient, inject, View, bindable, bindingMode, observable, useView, PLATFORM } from 'aurelia-framework';\nimport { IBaseline, IDataService } from 'model/contracts';\nimport { MDCDataTableRowSelectionChangedEvent } from 'resources/components/mdc-data-table';\nimport { IMessageService, MessageBoxButtons, MessageBoxResult, MessageService } from 'resources/message-service';\nimport { EditableBaseline } from './editable-baseline';\n\nexport class SortEntry {\n  property: string;\n  direction: 'ascending' | 'descending';\n}\n\n@useView(PLATFORM.moduleName('./table.html')) // ...because the different behavior in prod. build\n@transient(Table)\n@inject(IDataService, ViewModelCreatorService, IMessageService)\nexport class Table {\n\n  private _baselines: IBaseline[];\n  private _wcContacts: WrappingCollection;\n  // todo: should be from user settings\n  public format = 'MM/DD/YYYY';\n  public nameColumnMenu;\n\n  constructor(private dataService: IDataService\n    , private viewModelCreatorService: ViewModelCreatorService\n    , private messageService: IMessageService) {\n  }\n\n  private _pageSize = 10;\n  @observable\n  public get pageSize(): number {\n    return this._pageSize;\n  }\n  public set pageSize(value: number) {\n    this._pageSize = value;    \n  }\n\n  pageSizeChanged(newValue: number): void {\n    this.activePage = 1;\n  }\n  \n  \n  private _busy = false;\n  public get busy() {\n    return this._busy;\n  }\n  public set busy(value) {\n    this._busy = value;\n  }\n  \n  private _activePage = 1;\n  public get activePage() {\n    return this._activePage;\n  }\n  public set activePage(value) {\n    this._activePage = value;\n  }\n  \n  public created(owningView: View, myView: View): void {\n    this.dataService.getBaselinesAsync()\n      .then(baselines => {\n        this._baselines = baselines;\n        this._wcContacts = new WrappingCollection(\n          item => this.viewModelCreatorService.create<EditableBaseline>(EditableBaseline, item),\n          this._baselines);\n      })\n      .catch(alert);\n  }\n\n  public get baselines(): WrappingCollection {    \n    return this._wcContacts;\n  }\n\n  public async delete(baseline: IBaseline): Promise<void> {\n\n    const retVal = await this.messageService.showQuestion(\n      \"Are you sure you want to delete this baseline?\", \n      'Delete Baseline',\n      MessageBoxButtons.YesNo);\n      \n    if (retVal === MessageBoxResult.No) {\n      return;\n    }\n\n    this._baselines.splice(0, this._baselines.length);\n\n    await this.dataService.deleteBaselineAsync(baseline.model);\n\n    await this.dataService.getBaselinesAsync()\n      .then(baselines => {\n        baselines.map(x => this._baselines.push(x));\n      });\n  }\n\n  selectionChangedEvent: MDCDataTableRowSelectionChangedEvent;\n  onSelectionChanged(event: MDCDataTableRowSelectionChangedEvent): void {\n    this.selectionChangedEvent = { rowId: event.rowId, rowIndex: event.rowIndex, selected: event.selected };\n  }\n\n  private handleNavigation(type: string): void {\n    \n    switch (type) {\n      case 'first': this.activePage = 1; break;\n      case 'prev': this.activePage--; break;\n      case 'next': this.activePage++; break;\n      case 'last': this.activePage = Math.ceil(this.baselines.length/this.pageSize); break;\n    }\n  }\n\n  @bindable({ defaultBindingMode: bindingMode.toView })\n  public order: string;\n  \n  @bindable({ defaultBindingMode: bindingMode.toView })\n  public orderBy: string;\n  \n  private handleSort(event): void {\n    const eventDetail = event.detail;\n    this.orderBy = eventDetail.columnId;\n    this.order = eventDetail.sortValue;\n    this.activePage = 1;\n  }\n\n  private filter(event): void {\n    const eventDetail = event.detail;\n  }\n\n  private dismiss(event): void {\n    this.nameColumnMenu.toggle();\n  }\n\n  private OkFilter(event): void {\n    this.nameColumnMenu.toggle();\n  }\n}\n\n","export class Batteries {}\n","export class Reports {}\n"],"names":[],"sourceRoot":""}