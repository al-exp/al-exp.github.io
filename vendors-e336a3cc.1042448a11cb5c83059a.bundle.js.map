{"version":3,"file":"vendors-e336a3cc.1042448a11cb5c83059a.bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrlkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACjnYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjnMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtlQA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA","sources":["webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/indicator/mdc-tab-indicator.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/mdc-tab-bar.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/scroller/mdc-tab-scroller.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/tab/mdc-tab.js","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/enhance-mdc-text-field.js","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-default-text-field-configuration.js","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-text-field-character-counter.js","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-text-field-helper-line/mdc-text-field-helper-line.js","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-text-field-helper-text/mdc-text-field-helper-text.js","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-text-field-icon.js","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-text-field.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tooltip/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tooltip/dist/native-modules/mdc-default-tooltip-configuration.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tooltip/dist/native-modules/mdc-tooltip-attribute.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tooltip/dist/native-modules/mdc-tooltip.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/enhance-top-app-bar-actions.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar-action-item.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar-fixed-adjust.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar-nav-icon.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar-row.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar-section/mdc-top-app-bar-section.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar-title.js","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tree-view/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tree-view/dist/native-modules/mdc-tree-node-meta.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tree-view/dist/native-modules/mdc-tree-node.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tree-view/dist/native-modules/mdc-tree-view.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tree-view/dist/native-modules/node-filter.js","webpack://web-client/./node_modules/@aurelia-mdc-web/typography/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/typography/dist/native-modules/mdc-typography.js","webpack://web-client/./node_modules/@aurelia-mdc-web/validation/dist/native-modules/index.js","webpack://web-client/./node_modules/@aurelia-mdc-web/validation/dist/native-modules/mdc-validation-controller-factory.js","webpack://web-client/./node_modules/@aurelia-mdc-web/validation/dist/native-modules/mdc-validation-renderer.js","webpack://web-client/./node_modules/aurelia-metadata/dist/native-modules/aurelia-metadata.js","webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/indicator/mdc-tab-indicator.html","webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/mdc-tab-bar.html","webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/scroller/mdc-tab-scroller.html","webpack://web-client/./node_modules/@aurelia-mdc-web/tab-bar/dist/native-modules/tab/mdc-tab.html","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-text-field-helper-line/mdc-text-field-helper-line.html","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-text-field-helper-text/mdc-text-field-helper-text.html","webpack://web-client/./node_modules/@aurelia-mdc-web/text-field/dist/native-modules/mdc-text-field.html","webpack://web-client/./node_modules/@aurelia-mdc-web/tooltip/dist/native-modules/mdc-tooltip.html","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar-section/mdc-top-app-bar-section.html","webpack://web-client/./node_modules/@aurelia-mdc-web/top-app-bar/dist/native-modules/mdc-top-app-bar.html","webpack://web-client/./node_modules/@aurelia-mdc-web/tree-view/dist/native-modules/mdc-tree-view.html"],"sourcesContent":["import { PLATFORM } from 'aurelia-framework';\nexport { MdcTabBar } from './mdc-tab-bar';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-tab-bar'),\n        PLATFORM.moduleName('./tab/mdc-tab'),\n        PLATFORM.moduleName('./scroller/mdc-tab-scroller'),\n        PLATFORM.moduleName('./indicator/mdc-tab-indicator'),\n    ]);\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __extends, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTabIndicatorFoundation, MDCFadingTabIndicatorFoundation, MDCSlidingTabIndicatorFoundation } from '@material/tab-indicator';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { inject, useView, customElement } from 'aurelia-framework';\nimport { PLATFORM } from 'aurelia-pal';\nvar MdcTabIndicator = /** @class */ (function (_super) {\n    __extends(MdcTabIndicator, _super);\n    function MdcTabIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MdcTabIndicator.prototype.computeContentClientRect = function () {\n        return this.foundation.computeContentClientRect();\n    };\n    MdcTabIndicator.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            computeContentClientRect: function () { return _this.content_.getBoundingClientRect(); },\n            setContentStyleProperty: function (prop, value) { return _this.content_.style.setProperty(prop, value); },\n        };\n        if (this.root.classList.contains(MDCTabIndicatorFoundation.cssClasses.FADE)) {\n            return new MDCFadingTabIndicatorFoundation(adapter);\n        }\n        // Default to the sliding indicator\n        return new MDCSlidingTabIndicatorFoundation(adapter);\n    };\n    MdcTabIndicator.prototype.activate = function (previousIndicatorClientRect) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.activate(previousIndicatorClientRect);\n    };\n    MdcTabIndicator.prototype.deactivate = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.deactivate();\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTabIndicator.prototype, \"fade\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTabIndicator.prototype, \"active\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTabIndicator.prototype, \"icon\", void 0);\n    MdcTabIndicator = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-tab-indicator.html')),\n        customElement('mdc-tab-indicator')\n    ], MdcTabIndicator);\n    return MdcTabIndicator;\n}(MdcComponent));\nexport { MdcTabIndicator };\n//# sourceMappingURL=mdc-tab-indicator.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTabBarFoundation, strings } from '@material/tab-bar';\nimport { inject, useView, PLATFORM, customElement } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { MDCTabFoundation } from '@material/tab';\n// aurelia is case insensitive\nMDCTabFoundation.strings.INTERACTED_EVENT = MDCTabFoundation.strings.INTERACTED_EVENT.toLowerCase();\nstrings.TAB_ACTIVATED_EVENT = strings.TAB_ACTIVATED_EVENT.toLowerCase();\nvar MdcTabBar = /** @class */ (function (_super) {\n    __extends(MdcTabBar, _super);\n    function MdcTabBar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MdcTabBar.prototype.focusOnActivateChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.tabScroller_) === null || _a === void 0 ? void 0 : _a.tabs.forEach(function (tab) { return tab.focusOnActivate = _this.focusOnActivate; });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTabBar.prototype.useAutomaticActivationChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setUseAutomaticActivation(this.useAutomaticActivation);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTabBar.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.tabScroller_.initialised];\n                    case 1:\n                        _a.sent();\n                        if (!this.tabScroller_.tabs) return [3 /*break*/, 3];\n                        return [4 /*yield*/, Promise.all(this.tabScroller_.tabs.map(function (x) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                return [2 /*return*/, x.initialised];\n                            }); }); }))];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTabBar.prototype.initialSyncWithDOM = function () {\n        if (this.tabScroller_.tabs) {\n            for (var i = 0; i < this.tabScroller_.tabs.length; i++) {\n                if (this.tabScroller_.tabs[i].active) {\n                    this.scrollIntoView(i);\n                    break;\n                }\n            }\n        }\n    };\n    MdcTabBar.prototype.handleKeyDown_ = function (evt) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleKeyDown(evt);\n        return true;\n    };\n    MdcTabBar.prototype.handleTabInteraction_ = function (evt) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleTabInteraction(evt);\n    };\n    MdcTabBar.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            scrollTo: function (scrollX) { return _this.tabScroller_.scrollTo(scrollX); },\n            incrementScroll: function (scrollXIncrement) { return _this.tabScroller_.incrementScroll(scrollXIncrement); },\n            getScrollPosition: function () { return _this.tabScroller_.getScrollPosition(); },\n            getScrollContentWidth: function () { return _this.tabScroller_.getScrollContentWidth(); },\n            getOffsetWidth: function () { return _this.root.offsetWidth; },\n            isRTL: function () { return window.getComputedStyle(_this.root).getPropertyValue('direction') === 'rtl'; },\n            setActiveTab: function (index) { var _a; return (_a = _this.foundation) === null || _a === void 0 ? void 0 : _a.activateTab(index); },\n            activateTabAtIndex: function (index, clientRect) { return _this.tabScroller_.tabs[index].activate(clientRect); },\n            deactivateTabAtIndex: function (index) { return _this.tabScroller_.tabs[index].deactivate(); },\n            focusTabAtIndex: function (index) { return _this.tabScroller_.tabs[index].focus(); },\n            getTabIndicatorClientRectAtIndex: function (index) { return _this.tabScroller_.tabs[index].computeIndicatorClientRect(); },\n            getTabDimensionsAtIndex: function (index) { return _this.tabScroller_.tabs[index].computeDimensions(); },\n            getPreviousActiveTabIndex: function () {\n                for (var i = 0; i < _this.tabScroller_.tabs.length; i++) {\n                    if (_this.tabScroller_.tabs[i].isActive()) {\n                        return i;\n                    }\n                }\n                return -1;\n            },\n            getFocusedTabIndex: function () {\n                var tabElements = _this.getTabElements_();\n                var activeElement = document.activeElement;\n                return tabElements.indexOf(activeElement);\n            },\n            getIndexOfTabById: function (id) {\n                for (var i = 0; i < _this.tabScroller_.tabs.length; i++) {\n                    if (_this.tabScroller_.tabs[i].id === id) {\n                        return i;\n                    }\n                }\n                return -1;\n            },\n            getTabListLength: function () { return _this.tabScroller_.tabs.length; },\n            notifyTabActivated: function (index) { return _this.emit(strings.TAB_ACTIVATED_EVENT, { index: index }, true); },\n        };\n        return new MDCTabBarFoundation(adapter);\n    };\n    /**\n     * Activates the tab at the given index\n     * @param index The index of the tab\n     */\n    MdcTabBar.prototype.activateTab = function (index) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.activateTab(index);\n    };\n    /**\n     * Scrolls the tab at the given index into view\n     * @param index THe index of the tab\n     */\n    MdcTabBar.prototype.scrollIntoView = function (index) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.scrollIntoView(index);\n    };\n    /**\n     * Returns all the tab elements in a nice clean array\n     */\n    MdcTabBar.prototype.getTabElements_ = function () {\n        return [].slice.call(this.root.querySelectorAll(strings.TAB_SELECTOR));\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTabBar.prototype, \"focusOnActivate\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTabBar.prototype, \"useAutomaticActivation\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTabBar.prototype, \"align\", void 0);\n    MdcTabBar = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-tab-bar.html')),\n        customElement('mdc-tab-bar')\n    ], MdcTabBar);\n    return MdcTabBar;\n}(MdcComponent));\nexport { MdcTabBar };\n//# sourceMappingURL=mdc-tab-bar.js.map","import { __decorate, __extends, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTabScrollerFoundation, util } from '@material/tab-scroller';\nimport { matches } from '@material/dom/ponyfill';\nimport { children, useView, PLATFORM, customElement, inject } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nvar MdcTabScroller = /** @class */ (function (_super) {\n    __extends(MdcTabScroller, _super);\n    function MdcTabScroller() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MdcTabScroller.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            eventTargetMatchesSelector: function (evtTarget, selector) { return matches(evtTarget, selector); },\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            addScrollAreaClass: function (className) { return _this.area_.classList.add(className); },\n            setScrollAreaStyleProperty: function (prop, value) { return _this.area_.style.setProperty(prop, value); },\n            setScrollContentStyleProperty: function (prop, value) { return _this.content_.style.setProperty(prop, value); },\n            getScrollContentStyleValue: function (propName) { return window.getComputedStyle(_this.content_).getPropertyValue(propName); },\n            setScrollAreaScrollLeft: function (scrollX) { return _this.area_.scrollLeft = scrollX; },\n            getScrollAreaScrollLeft: function () { return _this.area_.scrollLeft; },\n            getScrollContentOffsetWidth: function () { return _this.content_.offsetWidth; },\n            getScrollAreaOffsetWidth: function () { return _this.area_.offsetWidth; },\n            computeScrollAreaClientRect: function () { return _this.area_.getBoundingClientRect(); },\n            computeScrollContentClientRect: function () { return _this.content_.getBoundingClientRect(); },\n            computeHorizontalScrollbarHeight: function () { return util.computeHorizontalScrollbarHeight(document); },\n        };\n        return new MDCTabScrollerFoundation(adapter);\n    };\n    MdcTabScroller.prototype.handleInteraction_ = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleInteraction();\n        return true;\n    };\n    MdcTabScroller.prototype.handleTransitionEnd_ = function (evt) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleTransitionEnd(evt);\n        return true;\n    };\n    /**\n     * Returns the current visual scroll position\n     */\n    MdcTabScroller.prototype.getScrollPosition = function () {\n        return this.foundation.getScrollPosition();\n    };\n    /**\n     * Returns the width of the scroll content\n     */\n    MdcTabScroller.prototype.getScrollContentWidth = function () {\n        return this.content_.offsetWidth;\n    };\n    /**\n     * Increments the scroll value by the given amount\n     * @param scrollXIncrement The pixel value by which to increment the scroll value\n     */\n    MdcTabScroller.prototype.incrementScroll = function (scrollXIncrement) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.incrementScroll(scrollXIncrement);\n    };\n    /**\n     * Scrolls to the given pixel position\n     * @param scrollX The pixel value to scroll to\n     */\n    MdcTabScroller.prototype.scrollTo = function (scrollX) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.scrollTo(scrollX);\n    };\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTabScroller.prototype, \"align\", void 0);\n    __decorate([\n        children('mdc-tab'),\n        __metadata(\"design:type\", Array)\n    ], MdcTabScroller.prototype, \"tabs\", void 0);\n    MdcTabScroller = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-tab-scroller.html')),\n        customElement('mdc-tab-scroller')\n    ], MdcTabScroller);\n    return MdcTabScroller;\n}(MdcComponent));\nexport { MdcTabScroller };\n//# sourceMappingURL=mdc-tab-scroller.js.map","import { __decorate, __extends, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTabFoundation } from '@material/tab';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { inject, useView, customElement, bindingMode } from 'aurelia-framework';\nimport { PLATFORM } from 'aurelia-pal';\nvar tabId = 0;\nMDCTabFoundation.strings.INTERACTED_EVENT = MDCTabFoundation.strings.INTERACTED_EVENT.toLowerCase();\nvar MdcTab = /** @class */ (function (_super) {\n    __extends(MdcTab, _super);\n    function MdcTab() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.id = \"mdc-tab-\".concat(++tabId);\n        return _this;\n    }\n    MdcTab.prototype.handleClick_ = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleClick();\n        return true;\n    };\n    MdcTab.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            activateIndicator: function (previousIndicatorClientRect) { return _this.tabIndicator_.activate(previousIndicatorClientRect); },\n            deactivateIndicator: function () { return _this.tabIndicator_.deactivate(); },\n            notifyInteracted: function () { return _this.emit(MDCTabFoundation.strings.INTERACTED_EVENT, { tabId: _this.id }, true /* bubble */); },\n            getOffsetLeft: function () { return _this.root.offsetLeft; },\n            getOffsetWidth: function () { return _this.root.offsetWidth; },\n            getContentOffsetLeft: function () { return _this.content_.offsetLeft; },\n            getContentOffsetWidth: function () { return _this.content_.offsetWidth; },\n            focus: function () { return _this.root.focus(); },\n        };\n        return new MDCTabFoundation(adapter);\n    };\n    MdcTab.prototype.isActive = function () {\n        return this.foundation.isActive();\n    };\n    Object.defineProperty(MdcTab.prototype, \"focusOnActivate\", {\n        set: function (focusOnActivate) {\n            var _a;\n            (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setFocusOnActivate(focusOnActivate);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Activates the tab\n     */\n    MdcTab.prototype.activate = function (computeIndicatorClientRect) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.activate(computeIndicatorClientRect);\n        this.active = true;\n    };\n    /**\n     * Deactivates the tab\n     */\n    MdcTab.prototype.deactivate = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.deactivate();\n        this.active = false;\n    };\n    /**\n     * Returns the indicator's client rect\n     */\n    MdcTab.prototype.computeIndicatorClientRect = function () {\n        return this.tabIndicator_.computeContentClientRect();\n    };\n    MdcTab.prototype.computeDimensions = function () {\n        return this.foundation.computeDimensions();\n    };\n    /**\n     * Focuses the tab\n     */\n    MdcTab.prototype.focus = function () {\n        this.root.focus();\n    };\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTab.prototype, \"id\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTab.prototype, \"fixed\", void 0);\n    __decorate([\n        bindable.booleanAttr({ defaultBindingMode: bindingMode.twoWay }),\n        __metadata(\"design:type\", Boolean)\n    ], MdcTab.prototype, \"active\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTab.prototype, \"icon\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTab.prototype, \"label\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTab.prototype, \"minWidth\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTab.prototype, \"fade\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTab.prototype, \"stacked\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTab.prototype, \"indicatorIcon\", void 0);\n    MdcTab = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-tab.html')),\n        customElement('mdc-tab')\n    ], MdcTab);\n    return MdcTab;\n}(MdcComponent));\nexport { MdcTab };\n//# sourceMappingURL=mdc-tab.js.map","import { __decorate, __values } from \"tslib\";\nimport { viewEngineHooks } from 'aurelia-framework';\nvar EnhanceMdcTextfield = /** @class */ (function () {\n    function EnhanceMdcTextfield() {\n    }\n    EnhanceMdcTextfield.prototype.beforeCompile = function (template) {\n        var e_1, _a;\n        var textFields = template.querySelectorAll('mdc-text-field');\n        try {\n            for (var _b = __values(Array.from(textFields)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var tf = _c.value;\n                var label = document.createElement('label');\n                // Grab all of the original's attributes, and pass them to the replacement\n                for (var i = 0, l = tf.attributes.length; i < l; ++i) {\n                    var nodeName = tf.attributes.item(i).nodeName;\n                    var nodeValue = tf.attributes.item(i).nodeValue;\n                    label.setAttribute(nodeName, nodeValue);\n                }\n                label.setAttribute('as-element', 'mdc-text-field');\n                // Persist contents\n                label.innerHTML = tf.innerHTML;\n                // Switch!\n                tf.parentNode.replaceChild(label, tf);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    EnhanceMdcTextfield = __decorate([\n        viewEngineHooks\n    ], EnhanceMdcTextfield);\n    return EnhanceMdcTextfield;\n}());\nexport { EnhanceMdcTextfield };\n//# sourceMappingURL=enhance-mdc-text-field.js.map","import { PLATFORM, bindingMode, ValueAttributeObserver, EventSubscriber } from 'aurelia-framework';\nimport { MdcComponentAdapters } from '@aurelia-mdc-web/base';\nimport { MdcDefaultTextFieldConfiguration } from './mdc-default-text-field-configuration';\nexport { MdcTextField } from './mdc-text-field';\nexport { MdcDefaultTextFieldConfiguration };\nexport function configure(frameworkConfig, callback) {\n    frameworkConfig.container.get(MdcComponentAdapters).registerMdcElementConfig(textFieldConfig);\n    frameworkConfig.globalResources([\n        PLATFORM.moduleName('./mdc-text-field'),\n        PLATFORM.moduleName('./enhance-mdc-text-field'),\n        PLATFORM.moduleName('./mdc-text-field-icon'),\n        PLATFORM.moduleName('./mdc-text-field-helper-line/mdc-text-field-helper-line'),\n        PLATFORM.moduleName('./mdc-text-field-helper-text/mdc-text-field-helper-text'),\n        PLATFORM.moduleName('./mdc-text-field-character-counter')\n    ]);\n    frameworkConfig.aurelia\n        .use\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/floating-label'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/line-ripple'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/notched-outline'))\n        .plugin(PLATFORM.moduleName('@aurelia-mdc-web/ripple'));\n    if (typeof callback === 'function') {\n        var config = frameworkConfig.container.get(MdcDefaultTextFieldConfiguration);\n        callback(config);\n    }\n}\nvar textFieldConfig = {\n    tagName: 'mdc-text-field',\n    properties: {\n        value: {\n            defaultBindingMode: bindingMode.twoWay,\n            getObserver: function (element) {\n                return new ValueAttributeObserver(element, 'value', new EventSubscriber(['change', 'input']));\n            }\n        }\n    }\n};\n//# sourceMappingURL=index.js.map","var MdcDefaultTextFieldConfiguration = /** @class */ (function () {\n    function MdcDefaultTextFieldConfiguration() {\n    }\n    return MdcDefaultTextFieldConfiguration;\n}());\nexport { MdcDefaultTextFieldConfiguration };\n//# sourceMappingURL=mdc-default-text-field-configuration.js.map","import { __decorate, __extends } from \"tslib\";\nimport { inject, inlineView, customElement } from 'aurelia-framework';\nimport { MDCTextFieldCharacterCounterFoundation, characterCountCssClasses } from '@material/textfield';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nvar MdcTextFieldCharacterCounter = /** @class */ (function (_super) {\n    __extends(MdcTextFieldCharacterCounter, _super);\n    function MdcTextFieldCharacterCounter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MdcTextFieldCharacterCounter.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcTextFieldCharacterCounter.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n        };\n        return new MDCTextFieldCharacterCounterFoundation(adapter);\n    };\n    MdcTextFieldCharacterCounter = __decorate([\n        inject(Element),\n        inlineView(\"<template class=\\\"\".concat(characterCountCssClasses.ROOT, \"\\\"></template>\")),\n        customElement(characterCountCssClasses.ROOT)\n    ], MdcTextFieldCharacterCounter);\n    return MdcTextFieldCharacterCounter;\n}(MdcComponent));\nexport { MdcTextFieldCharacterCounter };\n//# sourceMappingURL=mdc-text-field-character-counter.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { inject, customElement, useView, PLATFORM } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nvar MdcTextFieldHelperLine = /** @class */ (function () {\n    function MdcTextFieldHelperLine() {\n    }\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Array)\n    ], MdcTextFieldHelperLine.prototype, \"errors\", void 0);\n    MdcTextFieldHelperLine = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-text-field-helper-line.html')),\n        customElement('mdc-text-field-helper-line')\n    ], MdcTextFieldHelperLine);\n    return MdcTextFieldHelperLine;\n}());\nexport { MdcTextFieldHelperLine };\n//# sourceMappingURL=mdc-text-field-helper-line.js.map","import { __decorate, __extends, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTextFieldHelperTextFoundation, helperTextCssClasses } from '@material/textfield';\nimport { inject, customElement, useView, PLATFORM } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nvar MdcTextFieldHelperText = /** @class */ (function (_super) {\n    __extends(MdcTextFieldHelperText, _super);\n    function MdcTextFieldHelperText() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.helperTextCssClasses = helperTextCssClasses;\n        return _this;\n    }\n    Object.defineProperty(MdcTextFieldHelperText.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcTextFieldHelperText.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            getAttr: function (attr) { return _this.root.getAttribute(attr); },\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            removeAttr: function (attr) { return _this.root.removeAttribute(attr); },\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n        };\n        return new MDCTextFieldHelperTextFoundation(adapter);\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextFieldHelperText.prototype, \"persistent\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextFieldHelperText.prototype, \"validation\", void 0);\n    MdcTextFieldHelperText = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-text-field-helper-text.html')),\n        customElement(helperTextCssClasses.ROOT)\n    ], MdcTextFieldHelperText);\n    return MdcTextFieldHelperText;\n}(MdcComponent));\nexport { MdcTextFieldHelperText };\n//# sourceMappingURL=mdc-text-field-helper-text.js.map","import { __awaiter, __decorate, __extends, __generator } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTextFieldIconFoundation, iconCssClasses } from '@material/textfield';\nimport { inject, customAttribute } from 'aurelia-framework';\nimport { strings } from '@material/textfield/icon/constants';\nexport var mdcIconStrings = {\n    ATTRIBUTE: 'mdc-text-field-icon',\n    LEADING: 'leading',\n    TRAILING: 'trailing'\n};\nstrings.ICON_EVENT = strings.ICON_EVENT.toLowerCase();\nvar MdcTextFieldIcon = /** @class */ (function (_super) {\n    __extends(MdcTextFieldIcon, _super);\n    function MdcTextFieldIcon() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    MdcTextFieldIcon.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.root.classList.add(iconCssClasses.ROOT);\n                if (this.root.hasAttribute(mdcIconStrings.LEADING)) {\n                    this.root.classList.add(\"\".concat(iconCssClasses.ROOT, \"--\").concat(mdcIconStrings.LEADING));\n                }\n                if (this.root.hasAttribute(mdcIconStrings.TRAILING)) {\n                    this.root.classList.add(\"\".concat(iconCssClasses.ROOT, \"--\").concat(mdcIconStrings.TRAILING));\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    Object.defineProperty(MdcTextFieldIcon.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcTextFieldIcon.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            getAttr: function (attr) { return _this.root.getAttribute(attr); },\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            removeAttr: function (attr) { return _this.root.removeAttribute(attr); },\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n            registerInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },\n            deregisterInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },\n            notifyIconAction: function () { return _this.emit(MDCTextFieldIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */); },\n        };\n        return new MDCTextFieldIconFoundation(adapter);\n    };\n    MdcTextFieldIcon = __decorate([\n        inject(Element),\n        customAttribute(mdcIconStrings.ATTRIBUTE)\n    ], MdcTextFieldIcon);\n    return MdcTextFieldIcon;\n}(MdcComponent));\nexport { MdcTextFieldIcon };\n//# sourceMappingURL=mdc-text-field-icon.js.map","import { __assign, __awaiter, __decorate, __extends, __generator, __metadata, __read, __spreadArray } from \"tslib\";\nimport { useView, inject, customElement, processContent, PLATFORM, TaskQueue } from 'aurelia-framework';\nimport { MDCTextFieldFoundation, cssClasses, helperTextStrings, characterCountStrings } from '@material/textfield';\nimport { applyPassive } from '@material/dom/events';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { mdcIconStrings } from './mdc-text-field-icon';\nimport { MdcDefaultTextFieldConfiguration } from './mdc-default-text-field-configuration';\nvar textFieldId = 0;\nvar leadingIconSelector = \"[\".concat(mdcIconStrings.ATTRIBUTE, \"][\").concat(mdcIconStrings.LEADING, \"]\");\nvar trailingIconSelector = \"[\".concat(mdcIconStrings.ATTRIBUTE, \"][\").concat(mdcIconStrings.TRAILING, \"]\");\nvar MdcTextField = /** @class */ (function (_super) {\n    __extends(MdcTextField, _super);\n    function MdcTextField(root, taskQueue, defaultConfiguration) {\n        var _this = _super.call(this, root) || this;\n        _this.taskQueue = taskQueue;\n        _this.defaultConfiguration = defaultConfiguration;\n        _this.id = \"mdc-text-field-\".concat(++textFieldId);\n        _this.errors = new Map();\n        _this.mutationObserver = new MutationObserver(function (mutations) { return _this.mutated(mutations); });\n        _this.outlined = _this.defaultConfiguration.outlined;\n        _this.placeholder = ' '; // non empty placeholder solves the issue of misplaced labels in Safari\n        defineMdcTextFieldElementApis(_this.root);\n        return _this;\n    }\n    MdcTextField_1 = MdcTextField;\n    MdcTextField.processContent = function (_viewCompiler, _resources, element) {\n        // move icons to slots - this allows omitting slot specification\n        var leadingIcon = element.querySelector(leadingIconSelector);\n        leadingIcon === null || leadingIcon === void 0 ? void 0 : leadingIcon.setAttribute('slot', 'leading-icon');\n        var trailingIcon = element.querySelector(trailingIconSelector);\n        trailingIcon === null || trailingIcon === void 0 ? void 0 : trailingIcon.setAttribute('slot', 'trailing-icon');\n        return true;\n    };\n    MdcTextField.prototype.labelChanged = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _a.sent();\n                        this.taskQueue.queueTask(function () {\n                            if (_this.foundation) {\n                                var openNotch = _this.foundation.shouldFloat;\n                                _this.foundation.notchOutline(openNotch);\n                            }\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTextField.prototype.requiredChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        this.input_.required = this.required;\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setUseNativeValidation(true);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTextField.prototype.disabledChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.input_.disabled = this.disabled;\n                        return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setDisabled(this.disabled);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTextField.prototype.readonlyChanged = function () {\n        this.input_.readOnly = this.readonly;\n    };\n    MdcTextField.prototype.maxlengthChanged = function () {\n        if (this.maxlength) {\n            this.input_.setAttribute('maxlength', this.maxlength);\n        }\n        else {\n            this.input_.removeAttribute('maxlength');\n        }\n    };\n    MdcTextField.prototype.rowsChanged = function () {\n        if (this.rows) {\n            this.input_.setAttribute('rows', this.rows);\n        }\n        else {\n            this.input_.removeAttribute('rows');\n        }\n    };\n    MdcTextField.prototype.colsChanged = function () {\n        if (this.rows) {\n            this.input_.setAttribute('cols', this.cols);\n        }\n        else {\n            this.input_.removeAttribute('cols');\n        }\n    };\n    MdcTextField.prototype.maxChanged = function () {\n        if (this.max === undefined) {\n            this.input_.removeAttribute('max');\n        }\n        else {\n            this.input_.max = this.max;\n        }\n    };\n    MdcTextField.prototype.minChanged = function () {\n        if (this.min === undefined) {\n            this.input_.removeAttribute('min');\n        }\n        else {\n            this.input_.min = this.min;\n        }\n    };\n    MdcTextField.prototype.stepChanged = function () {\n        if (this.step === undefined) {\n            this.input_.removeAttribute('step');\n        }\n        else {\n            this.input_.step = this.step;\n        }\n    };\n    MdcTextField.prototype.autocompleteChanged = function () {\n        if (this.autocomplete === undefined) {\n            this.input_.removeAttribute('autocomplete');\n        }\n        else {\n            this.input_.autocomplete = this.autocomplete;\n        }\n    };\n    MdcTextField.prototype.tabindexChanged = function () {\n        if (isNaN(this.tabindex)) {\n            this.input_.removeAttribute('tabindex');\n        }\n        else {\n            this.input_.tabIndex = this.tabindex;\n        }\n    };\n    MdcTextField.prototype.typeChanged = function () {\n        if (!this.textarea) {\n            if (this.type === undefined) {\n                this.input_.removeAttribute('type');\n            }\n            else {\n                this.input_.type = this.type;\n            }\n        }\n    };\n    MdcTextField.prototype.nameChanged = function () {\n        if (this.name === undefined) {\n            this.input_.removeAttribute('name');\n        }\n        else {\n            this.input_.name = this.name;\n        }\n    };\n    Object.defineProperty(MdcTextField.prototype, \"value\", {\n        get: function () {\n            if (this.foundation) {\n                return this.foundation.getValue();\n            }\n            else {\n                return this.initialValue;\n            }\n        },\n        set: function (value) {\n            if (this.foundation) {\n                if (this.foundation.getValue() !== value) {\n                    this.foundation.setValue(value === null || value === undefined ? '' : value.toString());\n                }\n            }\n            else {\n                this.initialValue = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcTextField.prototype.addError = function (error) {\n        this.errors.set(error, true);\n        this.valid = false;\n    };\n    MdcTextField.prototype.removeError = function (error) {\n        this.errors.delete(error);\n        this.valid = this.errors.size === 0;\n    };\n    Object.defineProperty(MdcTextField.prototype, \"valid\", {\n        get: function () {\n            var _a, _b;\n            return (_b = (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.isValid()) !== null && _b !== void 0 ? _b : true;\n        },\n        set: function (value) {\n            var _a, _b;\n            (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setUseNativeValidation(false);\n            (_b = this.foundation) === null || _b === void 0 ? void 0 : _b.setValid(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MdcTextField.prototype.renderErrors = function () {\n        var helperLine = this.root.nextElementSibling;\n        if ((helperLine === null || helperLine === void 0 ? void 0 : helperLine.tagName) === 'MDC-TEXT-FIELD-HELPER-LINE') {\n            helperLine.au.controller.viewModel.errors = Array.from(this.errors.keys())\n                .filter(function (x) { return x.message !== null; }).map(function (x) { return x.message; });\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    MdcTextField.prototype.bind = function () { };\n    MdcTextField.prototype.initialSyncWithDOM = function () {\n        this.value = this.initialValue;\n        this.errors = new Map();\n        this.valid = true;\n    };\n    MdcTextField.prototype.initialise = function () {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function () {\n            var nextSibling, initialisedChildren;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        this.requiredChanged();\n                        this.disabledChanged();\n                        this.readonlyChanged();\n                        this.tabindexChanged();\n                        this.maxlengthChanged();\n                        this.rowsChanged();\n                        this.colsChanged();\n                        this.minChanged();\n                        this.maxChanged();\n                        this.stepChanged();\n                        this.typeChanged();\n                        this.autocompleteChanged();\n                        this.nameChanged();\n                        this.mutationObserver.observe(this.root, { subtree: true, childList: true });\n                        this.leadingIconChanged();\n                        this.trailingIconChanged();\n                        // handle the case when attribute value was set, not bound, in html\n                        if (this.root.hasAttribute('value')) {\n                            this.value = (_a = this.root.getAttribute('value')) !== null && _a !== void 0 ? _a : '';\n                        }\n                        nextSibling = this.root.nextElementSibling;\n                        initialisedChildren = [];\n                        if (this.label_) {\n                            initialisedChildren.push(this.label_.initialised);\n                        }\n                        if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) === cssClasses.HELPER_LINE.toUpperCase()) {\n                            this.helperText_ = (_b = nextSibling.querySelector(helperTextStrings.ROOT_SELECTOR)) === null || _b === void 0 ? void 0 : _b.au.controller.viewModel;\n                            this.characterCounter_ = (_c = nextSibling.querySelector(characterCountStrings.ROOT_SELECTOR)) === null || _c === void 0 ? void 0 : _c.au.controller.viewModel;\n                            if (this.helperText_) {\n                                initialisedChildren.push(this.helperText_.initialised);\n                            }\n                            if (this.characterCounter_) {\n                                initialisedChildren.push(this.characterCounter_.initialised);\n                            }\n                        }\n                        return [4 /*yield*/, Promise.all(initialisedChildren)];\n                    case 1:\n                        _d.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTextField.prototype.mutated = function (mutations) {\n        if (mutations.find(function (x) { return __spreadArray(__spreadArray([], __read(Array.from(x.addedNodes)), false), __read(Array.from(x.removedNodes)), false).find(function (y) { return y instanceof HTMLElement && y.matches(leadingIconSelector); }); })) {\n            this.leadingIconChanged();\n        }\n        if (mutations.find(function (x) { return __spreadArray(__spreadArray([], __read(Array.from(x.addedNodes)), false), __read(Array.from(x.removedNodes)), false).find(function (y) { return y instanceof HTMLElement && y.matches(trailingIconSelector); }); })) {\n            this.trailingIconChanged();\n        }\n    };\n    MdcTextField.prototype.trailingIconChanged = function () {\n        var el = this.root.querySelector(trailingIconSelector);\n        this.trailingIcon_ = el === null || el === void 0 ? void 0 : el.au['mdc-text-field-icon'].viewModel;\n    };\n    MdcTextField.prototype.leadingIconChanged = function () {\n        var el = this.root.querySelector(leadingIconSelector);\n        this.leadingIcon_ = el === null || el === void 0 ? void 0 : el.au['mdc-text-field-icon'].viewModel;\n    };\n    MdcTextField.prototype.destroy = function () {\n        this.mutationObserver.disconnect();\n    };\n    MdcTextField.prototype.getDefaultFoundation = function () {\n        var adapter = __assign(__assign(__assign(__assign(__assign({}, this.getRootAdapterMethods_()), this.getInputAdapterMethods_()), this.getLabelAdapterMethods_()), this.getLineRippleAdapterMethods_()), this.getOutlineAdapterMethods_());\n        return new MDCTextFieldFoundation(adapter, this.getFoundationMap_());\n    };\n    MdcTextField.prototype.getRootAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            registerTextFieldInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },\n            deregisterTextFieldInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },\n            registerValidationAttributeChangeHandler: function (handler) {\n                var getAttributesList = function (mutationsList) {\n                    return mutationsList\n                        .map(function (mutation) { return mutation.attributeName; })\n                        .filter(function (attributeName) { return attributeName; });\n                };\n                var observer = new MutationObserver(function (mutationsList) { return handler(getAttributesList(mutationsList)); });\n                var config = { attributes: true };\n                observer.observe(_this.input_, config);\n                return observer;\n            },\n            deregisterValidationAttributeChangeHandler: function (observer) { return observer.disconnect(); },\n        };\n    };\n    MdcTextField.prototype.getInputAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            getNativeInput: function () { return _this.input_; },\n            setInputAttr: function (attr, value) {\n                _this.input_.setAttribute(attr, value);\n            },\n            removeInputAttr: function (attr) {\n                _this.input_.removeAttribute(attr);\n            },\n            isFocused: function () { return document.activeElement === _this.input_; },\n            registerInputInteractionHandler: function (evtType, handler) { return _this.input_.addEventListener(evtType, handler, applyPassive()); },\n            deregisterInputInteractionHandler: function (evtType, handler) { var _a; return (_a = _this.input_) === null || _a === void 0 ? void 0 : _a.removeEventListener(evtType, handler, applyPassive()); },\n        };\n    };\n    MdcTextField.prototype.getLabelAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            floatLabel: function (shouldFloat) { var _a; return (_a = _this.label_) === null || _a === void 0 ? void 0 : _a.float(shouldFloat); },\n            getLabelWidth: function () { return _this.label_ ? _this.label_.getWidth() : 0; },\n            hasLabel: function () { return Boolean(_this.label_); },\n            shakeLabel: function (shouldShake) { var _a; return (_a = _this.label_) === null || _a === void 0 ? void 0 : _a.shake(shouldShake); },\n            setLabelRequired: function (isRequired) { var _a; return (_a = _this.label_) === null || _a === void 0 ? void 0 : _a.setRequired(isRequired); },\n        };\n    };\n    MdcTextField.prototype.getLineRippleAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            activateLineRipple: function () { var _a; return (_a = _this.lineRipple_) === null || _a === void 0 ? void 0 : _a.activate(); },\n            deactivateLineRipple: function () { var _a; return (_a = _this.lineRipple_) === null || _a === void 0 ? void 0 : _a.deactivate(); },\n            setLineRippleTransformOrigin: function (normalizedX) { var _a; return (_a = _this.lineRipple_) === null || _a === void 0 ? void 0 : _a.setRippleCenter(normalizedX); }\n        };\n    };\n    MdcTextField.prototype.getOutlineAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            closeOutline: function () { var _a; return (_a = _this.outline_) === null || _a === void 0 ? void 0 : _a.closeNotch(); },\n            hasOutline: function () { return Boolean(_this.outline_); },\n            notchOutline: function (labelWidth) { var _a; return (_a = _this.outline_) === null || _a === void 0 ? void 0 : _a.notch(labelWidth); },\n        };\n    };\n    /**\n     * @return A map of all subcomponents to subfoundations.\n     */\n    MdcTextField.prototype.getFoundationMap_ = function () {\n        return {\n            characterCounter: this.characterCounter_ ? this.characterCounter_.foundationForTextField : undefined,\n            helperText: this.helperText_ ? this.helperText_.foundationForTextField : undefined,\n            leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundationForTextField : undefined,\n            trailingIcon: this.trailingIcon_ ? this.trailingIcon_.foundationForTextField : undefined,\n        };\n    };\n    MdcTextField.prototype.onInput = function (evt) {\n        var value = evt.target.value;\n        this.value = value;\n    };\n    MdcTextField.prototype.onFocus = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.activateFocus();\n        this.emit('focus', {}, true);\n    };\n    MdcTextField.prototype.onChange = function (evt) {\n        var value = evt.target.value;\n        this.value = value;\n    };\n    MdcTextField.prototype.onBlur = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.deactivateFocus();\n        this.emit('blur', {}, true);\n    };\n    MdcTextField.prototype.focus = function () {\n        this.input_.focus();\n    };\n    MdcTextField.prototype.blur = function () {\n        this.input_.blur();\n    };\n    MdcTextField.prototype.onKeyup = function (e) {\n        if (this.blurOnEnter && e.keyCode === 13) {\n            this.blur();\n        }\n        return true;\n    };\n    var MdcTextField_1;\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"label\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextField.prototype, \"textarea\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextField.prototype, \"endAligned\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextField.prototype, \"ltrText\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextField.prototype, \"outlined\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"prefix\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"suffix\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextField.prototype, \"required\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextField.prototype, \"disabled\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextField.prototype, \"readonly\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTextField.prototype, \"blurOnEnter\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"maxlength\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"rows\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"cols\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"max\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"min\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"step\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"autocomplete\", void 0);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcTextField.prototype, \"tabindex\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"type\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"name\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", String)\n    ], MdcTextField.prototype, \"placeholder\", void 0);\n    MdcTextField = MdcTextField_1 = __decorate([\n        inject(Element, TaskQueue, MdcDefaultTextFieldConfiguration),\n        useView(PLATFORM.moduleName('./mdc-text-field.html')),\n        customElement(cssClasses.ROOT),\n        processContent(MdcTextField_1.processContent),\n        __metadata(\"design:paramtypes\", [HTMLElement, TaskQueue, MdcDefaultTextFieldConfiguration])\n    ], MdcTextField);\n    return MdcTextField;\n}(MdcComponent));\nexport { MdcTextField };\nfunction defineMdcTextFieldElementApis(element) {\n    Object.defineProperties(element, {\n        value: {\n            get: function () {\n                return this.au.controller.viewModel.value;\n            },\n            set: function (value) {\n                this.au.controller.viewModel.value = value;\n            },\n            configurable: true\n        },\n        disabled: {\n            get: function () {\n                return this.au.controller.viewModel.disabled;\n            },\n            set: function (value) {\n                this.au.controller.viewModel.disabled = value;\n            },\n            configurable: true\n        },\n        readOnly: {\n            get: function () {\n                return this.au.controller.viewModel.readonly;\n            },\n            set: function (value) {\n                this.au.controller.viewModel.readonly = value;\n            },\n            configurable: true\n        },\n        valid: {\n            get: function () {\n                return this.au.controller.viewModel.valid;\n            },\n            set: function (value) {\n                this.au.controller.viewModel.valid = value;\n            },\n            configurable: true\n        },\n        addError: {\n            value: function (error) {\n                this.au.controller.viewModel.addError(error);\n            },\n            configurable: true\n        },\n        removeError: {\n            value: function (error) {\n                this.au.controller.viewModel.removeError(error);\n            },\n            configurable: true\n        },\n        renderErrors: {\n            value: function () {\n                this.au.controller.viewModel.renderErrors();\n            },\n            configurable: true\n        },\n        focus: {\n            value: function () {\n                this.au.controller.viewModel.focus();\n            },\n            configurable: true\n        },\n        blur: {\n            value: function () {\n                this.au.controller.viewModel.blur();\n            },\n            configurable: true\n        },\n        isFocused: {\n            get: function () {\n                return document.activeElement === this.au.controller.viewModel.input_;\n            },\n            configurable: true\n        }\n    });\n}\n//# sourceMappingURL=mdc-text-field.js.map","import { PLATFORM } from 'aurelia-framework';\nimport { MdcDefaultTooltipConfiguration } from './mdc-default-tooltip-configuration';\nexport { MdcTooltip } from './mdc-tooltip';\nexport { MdcTooltipAttribute } from './mdc-tooltip-attribute';\nexport { MdcDefaultTooltipConfiguration } from './mdc-default-tooltip-configuration';\nexport function configure(frameworkConfig, callback) {\n    frameworkConfig.globalResources([\n        PLATFORM.moduleName('./mdc-tooltip'),\n        PLATFORM.moduleName('./mdc-tooltip-attribute')\n    ]);\n    if (typeof callback === 'function') {\n        var config = frameworkConfig.container.get(MdcDefaultTooltipConfiguration);\n        callback(config);\n    }\n}\n//# sourceMappingURL=index.js.map","var MdcDefaultTooltipConfiguration = /** @class */ (function () {\n    function MdcDefaultTooltipConfiguration() {\n    }\n    return MdcDefaultTooltipConfiguration;\n}());\nexport { MdcDefaultTooltipConfiguration };\n//# sourceMappingURL=mdc-default-tooltip-configuration.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { inject, customAttribute, TemplatingEngine } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { MdcDefaultTooltipConfiguration } from './mdc-default-tooltip-configuration';\n/**\n * @selector [mdc-tooltip]\n */\nvar MdcTooltipAttribute = /** @class */ (function () {\n    function MdcTooltipAttribute(root, templatingEngine, defaultConfiguration) {\n        this.templatingEngine = templatingEngine;\n        this.defaultConfiguration = defaultConfiguration;\n        this.scrollHost = this.defaultConfiguration.scrollHost;\n        this.root = root;\n    }\n    MdcTooltipAttribute.prototype.attached = function () {\n        this.tooltip = document.createElement('div');\n        this.tooltip.setAttribute('as-element', 'mdc-tooltip');\n        this.tooltip.setAttribute('anchor-elem.bind', 'root');\n        this.tooltip.setAttribute('x-position.bind', 'xPosition');\n        this.tooltip.setAttribute('y-position.bind', 'yPosition');\n        this.tooltip.setAttribute('boundary-type.bind', 'boundaryType');\n        this.tooltip.setAttribute('rich.bind', 'rich');\n        this.tooltip.setAttribute('persistent.bind', 'persistent');\n        this.tooltip.setAttribute('show-delay.bind', 'showDelay');\n        this.tooltip.setAttribute('hide-delay.bind', 'hideDelay');\n        this.tooltip.setAttribute('scroll-host.bind', 'scrollHost');\n        this.tooltip.innerText = this.value;\n        document.body.appendChild(this.tooltip);\n        this.view = this.templatingEngine.enhance({\n            element: this.tooltip,\n            bindingContext: this\n        });\n    };\n    MdcTooltipAttribute.prototype.detached = function () {\n        this.view.detached();\n        this.tooltip.remove();\n    };\n    __decorate([\n        bindable({ primaryProperty: true }),\n        __metadata(\"design:type\", String)\n    ], MdcTooltipAttribute.prototype, \"value\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTooltipAttribute.prototype, \"rich\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTooltipAttribute.prototype, \"persistent\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltipAttribute.prototype, \"xPosition\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltipAttribute.prototype, \"yPosition\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltipAttribute.prototype, \"boundaryType\", void 0);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcTooltipAttribute.prototype, \"showDelay\", void 0);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcTooltipAttribute.prototype, \"hideDelay\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltipAttribute.prototype, \"scrollHost\", void 0);\n    MdcTooltipAttribute = __decorate([\n        inject(Element, TemplatingEngine, MdcDefaultTooltipConfiguration),\n        customAttribute('mdc-tooltip'),\n        __metadata(\"design:paramtypes\", [HTMLElement, TemplatingEngine, MdcDefaultTooltipConfiguration])\n    ], MdcTooltipAttribute);\n    return MdcTooltipAttribute;\n}());\nexport { MdcTooltipAttribute };\n//# sourceMappingURL=mdc-tooltip-attribute.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTooltipFoundation, events, XPosition, YPosition, AnchorBoundaryType, attributes, CssClasses, PositionWithCaret, numbers } from '@material/tooltip';\nimport { inject, customElement, useView, PLATFORM } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { MdcDefaultTooltipConfiguration } from './mdc-default-tooltip-configuration';\n/**\n * @selector mdc-tooltip\n */\nvar MdcTooltip = /** @class */ (function (_super) {\n    __extends(MdcTooltip, _super);\n    function MdcTooltip(root, defaultConfiguration) {\n        var _this = _super.call(this, root) || this;\n        _this.defaultConfiguration = defaultConfiguration;\n        _this.showDelay = _this.defaultConfiguration.showDelay;\n        _this.hideDelay = _this.defaultConfiguration.hideDelay;\n        _this.scrollHost = _this.defaultConfiguration.scrollHost;\n        return _this;\n    }\n    MdcTooltip.prototype.xPositionChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(this.xPosition !== undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setTooltipPosition({ xPos: XPosition[this.xPosition] });\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTooltip.prototype.yPositionChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(this.yPosition !== undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setTooltipPosition({ yPos: YPosition[this.yPosition] });\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTooltip.prototype.withCaretPosChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(this.withCaretPos !== undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setTooltipPosition({ withCaretPos: PositionWithCaret[this.withCaretPos] });\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTooltip.prototype.boundaryTypeChanged = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(this.boundaryType !== undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _b.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setAnchorBoundaryType(AnchorBoundaryType[this.boundaryType]);\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTooltip.prototype.showDelayChanged = function () {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _c.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setShowDelay((_b = this.showDelay) !== null && _b !== void 0 ? _b : numbers.SHOW_DELAY_MS);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTooltip.prototype.hideDelayChanged = function () {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.initialised];\n                    case 1:\n                        _c.sent();\n                        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.setHideDelay((_b = this.hideDelay) !== null && _b !== void 0 ? _b : numbers.HIDE_DELAY_MS);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/require-await\n    MdcTooltip.prototype.initialise = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.persistent) {\n                    this.root.setAttribute(attributes.PERSISTENT, 'true');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    MdcTooltip.prototype.initialSyncWithDOM = function () {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (this.rich && this.persistent) {\n            (_a = this.anchorElem) === null || _a === void 0 ? void 0 : _a.addEventListener('click', this);\n        }\n        else {\n            (_b = this.anchorElem) === null || _b === void 0 ? void 0 : _b.addEventListener('mouseenter', this);\n            // TODO(b/157075286): Listening for a 'focus' event is too broad.\n            (_c = this.anchorElem) === null || _c === void 0 ? void 0 : _c.addEventListener('focus', this);\n            (_d = this.anchorElem) === null || _d === void 0 ? void 0 : _d.addEventListener('mouseleave', this);\n            (_e = this.anchorElem) === null || _e === void 0 ? void 0 : _e.addEventListener('touchstart', this);\n            (_f = this.anchorElem) === null || _f === void 0 ? void 0 : _f.addEventListener('touchend', this);\n        }\n        if (typeof (this.scrollHost) === 'string') {\n            this.scrollHost = (_g = document.querySelector(this.scrollHost)) !== null && _g !== void 0 ? _g : undefined;\n        }\n        if (this.scrollHost) {\n            var scrollHost_1 = this.scrollHost;\n            this.foundation.attachScrollHandler(function (event, listener) { return scrollHost_1.addEventListener(event, listener); });\n            this.foundation.removeScrollHandler(function (event, listener) { return scrollHost_1.removeEventListener(event, listener); });\n        }\n    };\n    MdcTooltip.prototype.destroy = function () {\n        if (!this.anchorElem) {\n            return;\n        }\n        if (this.rich && this.persistent) {\n            this.anchorElem.removeEventListener('click', this);\n        }\n        else {\n            this.anchorElem.removeEventListener('mouseenter', this);\n            this.anchorElem.removeEventListener('focus', this);\n            this.anchorElem.removeEventListener('mouseleave', this);\n            this.anchorElem.removeEventListener('touchstart', this);\n            this.anchorElem.removeEventListener('touchend', this);\n        }\n    };\n    MdcTooltip.prototype.handleEvent = function (evt) {\n        switch (evt.type) {\n            case 'click':\n                this.handleClick();\n                break;\n            case 'mouseenter':\n                this.handleMouseEnter();\n                break;\n            case 'focus':\n                this.handleFocus(evt);\n                break;\n            case 'mouseleave':\n                this.handleMouseLeave();\n                break;\n            case 'touchstart':\n                this.handleTouchstart();\n                break;\n            case 'touchend':\n                this.handleTouchend();\n                break;\n        }\n    };\n    MdcTooltip.prototype.handleMouseEnter = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleAnchorMouseEnter();\n    };\n    MdcTooltip.prototype.handleFocus = function (evt) {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleAnchorFocus(evt);\n    };\n    MdcTooltip.prototype.handleMouseLeave = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleAnchorMouseLeave();\n    };\n    MdcTooltip.prototype.handleTouchstart = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleAnchorTouchstart();\n    };\n    MdcTooltip.prototype.handleTouchend = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleAnchorTouchend();\n    };\n    MdcTooltip.prototype.handleClick = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleAnchorClick();\n    };\n    MdcTooltip.prototype.handleTransitionEnd = function () {\n        var _a;\n        (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleTransitionEnd();\n    };\n    MdcTooltip.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        var adapter = {\n            getAttribute: function (attr) { return _this.root.getAttribute(attr); },\n            setAttribute: function (attr, value) {\n                _this.root.setAttribute(attr, value);\n            },\n            removeAttribute: function (attr) {\n                _this.root.removeAttribute(attr);\n            },\n            addClass: function (className) {\n                _this.root.classList.add(className);\n            },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            removeClass: function (className) {\n                _this.root.classList.remove(className);\n            },\n            getComputedStyleProperty: function (propertyName) {\n                return window.getComputedStyle(_this.root).getPropertyValue(propertyName);\n            },\n            setStyleProperty: function (propertyName, value) {\n                _this.root.style.setProperty(propertyName, value);\n            },\n            setSurfaceAnimationStyleProperty: function (propertyName, value) {\n                var surface = _this.root.querySelector(\".\".concat(CssClasses.SURFACE_ANIMATION));\n                surface === null || surface === void 0 ? void 0 : surface.style.setProperty(propertyName, value);\n            },\n            getViewportWidth: function () { return window.innerWidth; },\n            getViewportHeight: function () { return window.innerHeight; },\n            getTooltipSize: function () {\n                return {\n                    width: _this.root.offsetWidth,\n                    height: _this.root.offsetHeight\n                };\n            },\n            getAnchorBoundingRect: function () {\n                return _this.anchorElem ? _this.anchorElem.getBoundingClientRect() : null;\n            },\n            getParentBoundingRect: function () {\n                var _a, _b;\n                return (_b = (_a = _this.root.parentElement) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) !== null && _b !== void 0 ? _b : null;\n            },\n            getAnchorAttribute: function (attr) {\n                return _this.anchorElem ? _this.anchorElem.getAttribute(attr) : null;\n            },\n            setAnchorAttribute: function (attr, value) {\n                var _a;\n                (_a = _this.anchorElem) === null || _a === void 0 ? void 0 : _a.setAttribute(attr, value);\n            },\n            isRTL: function () { return getComputedStyle(_this.root).direction === 'rtl'; },\n            anchorContainsElement: function (element) {\n                var _a;\n                return !!((_a = _this.anchorElem) === null || _a === void 0 ? void 0 : _a.contains(element));\n            },\n            tooltipContainsElement: function (element) {\n                return _this.root.contains(element);\n            },\n            focusAnchorElement: function () {\n                var _a;\n                (_a = _this.anchorElem) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            registerEventHandler: function (evt, handler) {\n                if (_this.root instanceof HTMLElement) {\n                    _this.root.addEventListener(evt, handler);\n                }\n            },\n            deregisterEventHandler: function (evt, handler) {\n                if (_this.root instanceof HTMLElement) {\n                    _this.root.removeEventListener(evt, handler);\n                }\n            },\n            registerAnchorEventHandler: function (evt, handler) {\n                var _a;\n                (_a = _this.anchorElem) === null || _a === void 0 ? void 0 : _a.addEventListener(evt, handler);\n            },\n            deregisterAnchorEventHandler: function (evt, handler) {\n                var _a;\n                (_a = _this.anchorElem) === null || _a === void 0 ? void 0 : _a.addEventListener(evt, handler);\n            },\n            registerDocumentEventHandler: function (evt, handler) {\n                document.body.addEventListener(evt, handler);\n            },\n            deregisterDocumentEventHandler: function (evt, handler) {\n                document.body.removeEventListener(evt, handler);\n            },\n            registerWindowEventHandler: function (evt, handler) {\n                window.addEventListener(evt, handler);\n            },\n            deregisterWindowEventHandler: function (evt, handler) {\n                window.removeEventListener(evt, handler);\n            },\n            notifyHidden: function () {\n                _this.emit(events.HIDDEN, {});\n            },\n            getTooltipCaretBoundingRect: function () {\n                var caret = _this.root.querySelector(\".\".concat(CssClasses.TOOLTIP_CARET_TOP));\n                if (!caret) {\n                    return null;\n                }\n                return caret.getBoundingClientRect();\n            },\n            setTooltipCaretStyle: function (propertyName, value) {\n                var topCaret = _this.root.querySelector(\".\".concat(CssClasses.TOOLTIP_CARET_TOP));\n                var bottomCaret = _this.root.querySelector(\".\".concat(CssClasses.TOOLTIP_CARET_BOTTOM));\n                if (!topCaret || !bottomCaret) {\n                    return;\n                }\n                topCaret.style.setProperty(propertyName, value);\n                bottomCaret.style.setProperty(propertyName, value);\n            },\n            clearTooltipCaretStyles: function () {\n                var topCaret = _this.root.querySelector(\".\".concat(CssClasses.TOOLTIP_CARET_TOP));\n                var bottomCaret = _this.root.querySelector(\".\".concat(CssClasses.TOOLTIP_CARET_BOTTOM));\n                if (!topCaret || !bottomCaret) {\n                    return;\n                }\n                topCaret.removeAttribute('style');\n                bottomCaret.removeAttribute('style');\n            },\n            getActiveElement: function () {\n                return document.activeElement;\n            },\n        };\n        return new MDCTooltipFoundation(adapter);\n    };\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", HTMLElement)\n    ], MdcTooltip.prototype, \"anchorElem\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTooltip.prototype, \"rich\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTooltip.prototype, \"persistent\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltip.prototype, \"xPosition\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltip.prototype, \"yPosition\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltip.prototype, \"withCaretPos\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltip.prototype, \"boundaryType\", void 0);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcTooltip.prototype, \"showDelay\", void 0);\n    __decorate([\n        bindable.number,\n        __metadata(\"design:type\", Number)\n    ], MdcTooltip.prototype, \"hideDelay\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTooltip.prototype, \"scrollHost\", void 0);\n    MdcTooltip = __decorate([\n        inject(Element, MdcDefaultTooltipConfiguration),\n        useView(PLATFORM.moduleName('./mdc-tooltip.html')),\n        customElement('mdc-tooltip'),\n        __metadata(\"design:paramtypes\", [HTMLElement, MdcDefaultTooltipConfiguration])\n    ], MdcTooltip);\n    return MdcTooltip;\n}(MdcComponent));\nexport { MdcTooltip };\n//# sourceMappingURL=mdc-tooltip.js.map","import { __decorate, __values } from \"tslib\";\nimport { viewEngineHooks } from 'aurelia-framework';\nvar EnhanceTopAppBarActions = /** @class */ (function () {\n    function EnhanceTopAppBarActions() {\n    }\n    EnhanceTopAppBarActions.prototype.beforeCompile = function (template) {\n        var e_1, _a;\n        var actions = template.querySelectorAll('[mdc-top-app-bar-action-item],[mdc-top-app-bar-nav-icon]');\n        try {\n            for (var _b = __values(Array.from(actions)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var i = _c.value;\n                i.setAttribute('mdc-ripple', 'unbounded.bind: true');\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    EnhanceTopAppBarActions = __decorate([\n        viewEngineHooks\n    ], EnhanceTopAppBarActions);\n    return EnhanceTopAppBarActions;\n}());\nexport { EnhanceTopAppBarActions };\n//# sourceMappingURL=enhance-top-app-bar-actions.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcTopAppBar } from './mdc-top-app-bar';\nexport { EnhanceTopAppBarActions } from './enhance-top-app-bar-actions';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-top-app-bar'),\n        PLATFORM.moduleName('./mdc-top-app-bar-row'),\n        PLATFORM.moduleName('./mdc-top-app-bar-title'),\n        PLATFORM.moduleName('./mdc-top-app-bar-section/mdc-top-app-bar-section'),\n        PLATFORM.moduleName('./mdc-top-app-bar-fixed-adjust'),\n        PLATFORM.moduleName('./mdc-top-app-bar-nav-icon'),\n        PLATFORM.moduleName('./mdc-top-app-bar-action-item'),\n        PLATFORM.moduleName('./enhance-top-app-bar-actions')\n    ]);\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customAttribute, inject } from 'aurelia-framework';\nvar MdcTopAppBarActionItem = /** @class */ (function () {\n    function MdcTopAppBarActionItem(root) {\n        this.root = root;\n    }\n    MdcTopAppBarActionItem.prototype.attached = function () {\n        this.root.setAttribute('role', 'button');\n        this.root.classList.add('mdc-top-app-bar__action-item', 'mdc-icon-button');\n    };\n    MdcTopAppBarActionItem = __decorate([\n        inject(Element),\n        customAttribute('mdc-top-app-bar-action-item'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcTopAppBarActionItem);\n    return MdcTopAppBarActionItem;\n}());\nexport { MdcTopAppBarActionItem };\n//# sourceMappingURL=mdc-top-app-bar-action-item.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customAttribute, inject } from 'aurelia-framework';\nvar MdcTopAppBarFixedAdjust = /** @class */ (function () {\n    function MdcTopAppBarFixedAdjust(root) {\n        this.root = root;\n    }\n    MdcTopAppBarFixedAdjust.prototype.attached = function () {\n        this.root.classList.add(this.value ? \"mdc-top-app-bar--\".concat(this.value, \"-fixed-adjust\") : 'mdc-top-app-bar--fixed-adjust');\n    };\n    MdcTopAppBarFixedAdjust = __decorate([\n        inject(Element),\n        customAttribute('mdc-top-app-bar-fixed-adjust'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcTopAppBarFixedAdjust);\n    return MdcTopAppBarFixedAdjust;\n}());\nexport { MdcTopAppBarFixedAdjust };\n//# sourceMappingURL=mdc-top-app-bar-fixed-adjust.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customAttribute, inject } from 'aurelia-framework';\nvar MdcTopAppBarNavIcon = /** @class */ (function () {\n    function MdcTopAppBarNavIcon(root) {\n        this.root = root;\n    }\n    MdcTopAppBarNavIcon.prototype.attached = function () {\n        this.root.setAttribute('role', 'button');\n        this.root.classList.add('mdc-top-app-bar__navigation-icon', 'mdc-icon-button');\n    };\n    MdcTopAppBarNavIcon = __decorate([\n        inject(Element),\n        customAttribute('mdc-top-app-bar-nav-icon'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcTopAppBarNavIcon);\n    return MdcTopAppBarNavIcon;\n}());\nexport { MdcTopAppBarNavIcon };\n//# sourceMappingURL=mdc-top-app-bar-nav-icon.js.map","import { __decorate } from \"tslib\";\nimport { inlineView, customElement } from 'aurelia-framework';\nvar MdcTopAppBarRow = /** @class */ (function () {\n    function MdcTopAppBarRow() {\n    }\n    MdcTopAppBarRow = __decorate([\n        inlineView('<template class=\"mdc-top-app-bar__row\"><slot></slot></template>'),\n        customElement('mdc-top-app-bar-row')\n    ], MdcTopAppBarRow);\n    return MdcTopAppBarRow;\n}());\nexport { MdcTopAppBarRow };\n//# sourceMappingURL=mdc-top-app-bar-row.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customElement, useView, PLATFORM } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nvar MdcTopAppBarSection = /** @class */ (function () {\n    function MdcTopAppBarSection() {\n    }\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTopAppBarSection.prototype, \"end\", void 0);\n    MdcTopAppBarSection = __decorate([\n        useView(PLATFORM.moduleName('./mdc-top-app-bar-section.html')),\n        customElement('mdc-top-app-bar-section')\n    ], MdcTopAppBarSection);\n    return MdcTopAppBarSection;\n}());\nexport { MdcTopAppBarSection };\n//# sourceMappingURL=mdc-top-app-bar-section.js.map","import { __decorate } from \"tslib\";\nimport { inlineView, customElement } from 'aurelia-framework';\nvar MdcTopAppBarTitle = /** @class */ (function () {\n    function MdcTopAppBarTitle() {\n    }\n    MdcTopAppBarTitle = __decorate([\n        inlineView('<template class=\"mdc-top-app-bar__title\"><slot></slot></template>'),\n        customElement('mdc-top-app-bar-title')\n    ], MdcTopAppBarTitle);\n    return MdcTopAppBarTitle;\n}());\nexport { MdcTopAppBarTitle };\n//# sourceMappingURL=mdc-top-app-bar-title.js.map","import { __decorate, __extends, __metadata } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTopAppBarFoundation, cssClasses, strings, MDCShortTopAppBarFoundation, MDCFixedTopAppBarFoundation } from '@material/top-app-bar';\nimport { inject, useView, customElement, PLATFORM } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nvar MdcTopAppBar = /** @class */ (function (_super) {\n    __extends(MdcTopAppBar, _super);\n    function MdcTopAppBar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.scrollTarget = window;\n        return _this;\n    }\n    MdcTopAppBar.prototype.scrollTargetChanged = function (newValue, oldValue) {\n        // Remove scroll handler from the previous scroll target\n        oldValue === null || oldValue === void 0 ? void 0 : oldValue.removeEventListener('scroll', this.handleTargetScroll_);\n        // Initialize scroll handler on the new scroll target\n        newValue === null || newValue === void 0 ? void 0 : newValue.addEventListener('scroll', this.handleTargetScroll_);\n    };\n    MdcTopAppBar.prototype.initialSyncWithDOM = function () {\n        var _a, _b, _c;\n        this.handleNavigationClick_ = (_a = this.foundation) === null || _a === void 0 ? void 0 : _a.handleNavigationClick.bind(this.foundation);\n        this.handleWindowResize_ = (_b = this.foundation) === null || _b === void 0 ? void 0 : _b.handleWindowResize.bind(this.foundation);\n        this.handleTargetScroll_ = (_c = this.foundation) === null || _c === void 0 ? void 0 : _c.handleTargetScroll.bind(this.foundation);\n        this.hasActionItems = !!this.root.querySelector(strings.ACTION_ITEM_SELECTOR);\n        this.scrollTargetChanged(this.scrollTarget, window);\n        this.navIcon_ = this.root.querySelector(strings.NAVIGATION_ICON_SELECTOR);\n        if (this.navIcon_) {\n            this.navIcon_.addEventListener('click', this.handleNavigationClick_);\n        }\n        var isFixed = this.root.classList.contains(cssClasses.FIXED_CLASS);\n        var isShort = this.root.classList.contains(cssClasses.SHORT_CLASS);\n        if (!isShort && !isFixed) {\n            window.addEventListener('resize', this.handleWindowResize_);\n        }\n    };\n    MdcTopAppBar.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            setStyle: function (property, value) { return _this.root.style.setProperty(property, value); },\n            getTopAppBarHeight: function () { return _this.root.clientHeight; },\n            notifyNavigationIconClicked: function () { return _this.emit(strings.NAVIGATION_EVENT, {}); },\n            getViewportScrollY: function () {\n                var win = _this.scrollTarget;\n                var el = _this.scrollTarget;\n                return win.pageYOffset !== undefined ? win.pageYOffset : el.scrollTop;\n            },\n            getTotalActionItems: function () { return _this.root.querySelectorAll(strings.ACTION_ITEM_SELECTOR).length; },\n        };\n        var foundation;\n        if (this.root.classList.contains(cssClasses.SHORT_CLASS)) {\n            foundation = new MDCShortTopAppBarFoundation(adapter);\n        }\n        else if (this.root.classList.contains(cssClasses.FIXED_CLASS)) {\n            foundation = new MDCFixedTopAppBarFoundation(adapter);\n        }\n        else {\n            foundation = new MDCTopAppBarFoundation(adapter);\n        }\n        return foundation;\n    };\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTopAppBar.prototype, \"short\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTopAppBar.prototype, \"collapsed\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTopAppBar.prototype, \"fixed\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTopAppBar.prototype, \"prominent\", void 0);\n    __decorate([\n        bindable.booleanAttr,\n        __metadata(\"design:type\", Boolean)\n    ], MdcTopAppBar.prototype, \"dense\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", EventTarget)\n    ], MdcTopAppBar.prototype, \"scrollTarget\", void 0);\n    MdcTopAppBar = __decorate([\n        inject(Element),\n        useView(PLATFORM.moduleName('./mdc-top-app-bar.html')),\n        customElement('mdc-top-app-bar')\n    ], MdcTopAppBar);\n    return MdcTopAppBar;\n}(MdcComponent));\nexport { MdcTopAppBar };\n//# sourceMappingURL=mdc-top-app-bar.js.map","import { PLATFORM } from 'aurelia-framework';\nexport { MdcTreeView } from './mdc-tree-view';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-tree-view'),\n        PLATFORM.moduleName('./mdc-tree-node-meta')\n    ]);\n    config.aurelia.use.plugin(PLATFORM.moduleName('@aurelia-mdc-web/icon-button'));\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { customAttribute, inject } from 'aurelia-framework';\nvar MdcTreeViewNOdeMeta = /** @class */ (function () {\n    function MdcTreeViewNOdeMeta(root) {\n        this.root = root;\n    }\n    MdcTreeViewNOdeMeta.prototype.attached = function () {\n        this.root.classList.add('mdc-tree-node__meta');\n    };\n    MdcTreeViewNOdeMeta = __decorate([\n        inject(Element),\n        customAttribute('mdc-tree-node-meta'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcTreeViewNOdeMeta);\n    return MdcTreeViewNOdeMeta;\n}());\nexport { MdcTreeViewNOdeMeta };\n//# sourceMappingURL=mdc-tree-node-meta.js.map","import { __decorate, __metadata } from \"tslib\";\nimport { inject, bindable, noView, ViewSlot, customElement, ViewFactory, Container } from 'aurelia-framework';\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(element, container) {\n        this.element = element;\n        this.container = container;\n        this.viewSlot = new ViewSlot(this.element, true);\n    }\n    TreeNode.prototype.bind = function (bindingContext) {\n        this.build();\n        this.viewSlot.bind(bindingContext, this.rootBindingContext);\n    };\n    TreeNode.prototype.attached = function () {\n        this.viewSlot.attached();\n    };\n    TreeNode.prototype.detached = function () {\n        this.viewSlot.detached();\n    };\n    TreeNode.prototype.unbind = function () {\n        this.viewSlot.unbind();\n    };\n    TreeNode.prototype.build = function () {\n        if (this.built) {\n            return;\n        }\n        this.built = true;\n        if (!this.factory) {\n            return;\n        }\n        this.view = this.factory.create(this.container);\n        this.viewSlot.add(this.view);\n    };\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", ViewFactory)\n    ], TreeNode.prototype, \"factory\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], TreeNode.prototype, \"rootBindingContext\", void 0);\n    TreeNode = __decorate([\n        inject(Element, Container),\n        customElement('mdc-tree-node'),\n        noView(),\n        __metadata(\"design:paramtypes\", [Element, Container])\n    ], TreeNode);\n    return TreeNode;\n}());\nexport { TreeNode };\n//# sourceMappingURL=mdc-tree-node.js.map","import { __awaiter, __decorate, __extends, __generator, __metadata, __read, __spreadArray } from \"tslib\";\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCFoundation } from '@material/base';\nimport { customElement, bindable, useView, PLATFORM, processContent, ViewCompiler, ViewResources, inject, Optional, Container } from 'aurelia-framework';\nvar id = 0;\nvar templateLookup = {};\nvar getNextNodeTemplateId = function () { return ++id; };\nvar NODE_SELECTED_EVENT = 'mdctree:node-selected';\nvar MDCTreeViewFoundation = /** @class */ (function (_super) {\n    __extends(MDCTreeViewFoundation, _super);\n    function MDCTreeViewFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MDCTreeViewFoundation;\n}(MDCFoundation));\nexport { MDCTreeViewFoundation };\nvar MdcTreeView = /** @class */ (function (_super) {\n    __extends(MdcTreeView, _super);\n    function MdcTreeView(root, container) {\n        var _this = _super.call(this, root) || this;\n        /**\n         * Allows for filtering tree nodes\n         */\n        _this.filter = function () { return true; };\n        _this.nodeViewFactory = MdcTreeView_1.getNodeFactory(root, container);\n        return _this;\n    }\n    MdcTreeView_1 = MdcTreeView;\n    MdcTreeView.prototype.getDefaultFoundation = function () {\n        return new MDCTreeViewFoundation();\n    };\n    MdcTreeView.processContent = function (_viewCompiler, _resources, element) {\n        var treeNode = element.querySelector('mdc-tree-node');\n        if (treeNode) {\n            var nodeTemplateId = getNextNodeTemplateId();\n            element.setAttribute('data-template-id', nodeTemplateId.toString());\n            templateLookup[nodeTemplateId] = treeNode.innerHTML;\n        }\n        element.innerHTML = '';\n        return false;\n    };\n    /**\n     * @param element the host element of a <mdc-tree-view/>\n     * @param container the container associated with a <mdc-tree-view/>\n     */\n    MdcTreeView.getNodeFactory = function (element, container) {\n        var parent = container.parent ? container.parent.get(Optional.of(MdcTreeView_1)) : null;\n        var isRoot = !parent;\n        // a root mdc-tree view means a consumer defined one\n        // this potentiall contains the template for the tree node\n        if (isRoot) {\n            var nodeTemplateId = element.getAttribute('data-template-id');\n            if (nodeTemplateId && templateLookup[nodeTemplateId]) {\n                var nodeTemplate = templateLookup[nodeTemplateId];\n                var nodeViewFactory = container.get(ViewCompiler).compile(\"<template>\".concat(nodeTemplate, \"</template>\"), container.get(ViewResources));\n                return nodeViewFactory;\n            }\n            else {\n                // create a default <mdc-tree-node/> factory\n                // eslint-disable-next-line no-template-curly-in-string\n                return container.get(ViewCompiler).compile('<template>${$node}</template>', container.get(ViewResources));\n            }\n        }\n        else {\n            // if it's not a root <mdc-tree-view/>\n            // assume that the parent has already built the node factory and simply get it from there\n            return parent.nodeViewFactory;\n        }\n    };\n    MdcTreeView.prototype.bind = function (bindingContext) {\n        var _a;\n        this.rootBindingContext = (_a = this.rootBindingContext) !== null && _a !== void 0 ? _a : bindingContext;\n    };\n    MdcTreeView.prototype.toggleExpanded = function (n, e) {\n        n.expanded = !n.expanded;\n        e.stopPropagation();\n        return false;\n    };\n    MdcTreeView.prototype.nodeClicked = function (n) {\n        if (this.selectedNode) {\n            this.selectedNode.selected = false;\n        }\n        if (n) {\n            n.selected = true;\n        }\n        this.selectedNode = n;\n        this.root.dispatchEvent(new CustomEvent(NODE_SELECTED_EVENT, { detail: { node: n }, bubbles: true }));\n        return true;\n    };\n    MdcTreeView.prototype.childNodeSelected = function (n) {\n        if (this.selectedNode && this.selectedNode !== n) {\n            this.selectedNode.selected = false;\n        }\n        this.selectedNode = n;\n    };\n    MdcTreeView.prototype.findPath = function (nodes, predicate) {\n        var _this = this;\n        var path = [];\n        for (var i = 0; i < nodes.length; ++i) {\n            if (predicate(nodes[i])) {\n                return [i];\n            }\n            if (!nodes[i].children) {\n                continue;\n            }\n            var filteredChildren = nodes[i].children.filter(function (x) { return _this.filter(x); });\n            var childPath = this.findPath(filteredChildren, predicate);\n            if (childPath.length) {\n                return __spreadArray([i], __read(childPath), false);\n            }\n        }\n        return path;\n    };\n    MdcTreeView.prototype.expandPath = function (path) {\n        return __awaiter(this, void 0, void 0, function () {\n            var filteredNodes, childTreeView;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        filteredNodes = this.nodes.filter(function (x) { return _this.filter(x); });\n                        if (!(path.length === 1)) return [3 /*break*/, 1];\n                        this.nodeClicked(filteredNodes[path[0]]);\n                        this.root.querySelectorAll('.mdc-tree-view__node')[path[0]].scrollIntoView();\n                        return [3 /*break*/, 5];\n                    case 1:\n                        filteredNodes[path[0]].expanded = true;\n                        // child tree views are hidden with 'if.bind'\n                        // promises are created by a helper element `mdc-promisify-reference`\n                        // this lets dependent code to wait till a view model reference is assigned\n                        return [4 /*yield*/, this.initialised];\n                    case 2:\n                        // child tree views are hidden with 'if.bind'\n                        // promises are created by a helper element `mdc-promisify-reference`\n                        // this lets dependent code to wait till a view model reference is assigned\n                        _a.sent();\n                        return [4 /*yield*/, (filteredNodes[path[0]].childTreeViewPromise)];\n                    case 3:\n                        childTreeView = _a.sent();\n                        return [4 /*yield*/, (childTreeView === null || childTreeView === void 0 ? void 0 : childTreeView.expandPath(path.slice(1)))];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTreeView.prototype.find = function (predicate) {\n        return __awaiter(this, void 0, void 0, function () {\n            var filteredNodes, path;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        filteredNodes = this.nodes.filter(function (x) { return _this.filter(x); });\n                        path = this.findPath(filteredNodes, predicate);\n                        if (!path.length) return [3 /*break*/, 2];\n                        // secondly, expand the path\n                        return [4 /*yield*/, this.expandPath(path)];\n                    case 1:\n                        // secondly, expand the path\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MdcTreeView.prototype.dispatchEvent = function (type, node) {\n        this.root.dispatchEvent(new CustomEvent(type, { bubbles: true, detail: { node: node } }));\n    };\n    var MdcTreeView_1;\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Array)\n    ], MdcTreeView.prototype, \"nodes\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Function)\n    ], MdcTreeView.prototype, \"filter\", void 0);\n    __decorate([\n        bindable,\n        __metadata(\"design:type\", Object)\n    ], MdcTreeView.prototype, \"rootBindingContext\", void 0);\n    MdcTreeView = MdcTreeView_1 = __decorate([\n        inject(Element, Container),\n        customElement('mdc-tree-view'),\n        useView(PLATFORM.moduleName('./mdc-tree-view.html')),\n        processContent(MdcTreeView_1.processContent),\n        __metadata(\"design:paramtypes\", [HTMLElement, Container])\n    ], MdcTreeView);\n    return MdcTreeView;\n}(MdcComponent));\nexport { MdcTreeView };\n//# sourceMappingURL=mdc-tree-view.js.map","var NodeFilterValueConverter = /** @class */ (function () {\n    function NodeFilterValueConverter() {\n    }\n    NodeFilterValueConverter.prototype.toView = function (nodes, filter) {\n        if (!filter) {\n            return nodes;\n        }\n        return nodes === null || nodes === void 0 ? void 0 : nodes.filter(function (x) { return filter(x); });\n    };\n    return NodeFilterValueConverter;\n}());\nexport { NodeFilterValueConverter };\n//# sourceMappingURL=node-filter.js.map","import { PLATFORM } from 'aurelia-framework';\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./mdc-typography')\n    ]);\n}\n//# sourceMappingURL=index.js.map","import { __decorate, __extends, __metadata } from \"tslib\";\nimport { customAttribute, inject } from 'aurelia-framework';\nvar MdcTypography = /** @class */ (function () {\n    function MdcTypography(root) {\n        this.root = root;\n    }\n    MdcTypography.prototype.attached = function () {\n        this.root.classList.add(this.type ? \"mdc-typography--\".concat(this.type) : 'mdc-typography');\n    };\n    return MdcTypography;\n}());\nvar MdcHeadline1 = /** @class */ (function (_super) {\n    __extends(MdcHeadline1, _super);\n    function MdcHeadline1(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'headline1';\n        return _this;\n    }\n    MdcHeadline1 = __decorate([\n        inject(Element),\n        customAttribute('mdc-headline1'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcHeadline1);\n    return MdcHeadline1;\n}(MdcTypography));\nexport { MdcHeadline1 };\nvar MdcHeadline2 = /** @class */ (function (_super) {\n    __extends(MdcHeadline2, _super);\n    function MdcHeadline2(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'headline2';\n        return _this;\n    }\n    MdcHeadline2 = __decorate([\n        inject(Element),\n        customAttribute('mdc-headline2'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcHeadline2);\n    return MdcHeadline2;\n}(MdcTypography));\nexport { MdcHeadline2 };\nvar MdcHeadline3 = /** @class */ (function (_super) {\n    __extends(MdcHeadline3, _super);\n    function MdcHeadline3(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'headline3';\n        return _this;\n    }\n    MdcHeadline3 = __decorate([\n        inject(Element),\n        customAttribute('mdc-headline3'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcHeadline3);\n    return MdcHeadline3;\n}(MdcTypography));\nexport { MdcHeadline3 };\nvar MdcHeadline4 = /** @class */ (function (_super) {\n    __extends(MdcHeadline4, _super);\n    function MdcHeadline4(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'headline4';\n        return _this;\n    }\n    MdcHeadline4 = __decorate([\n        inject(Element),\n        customAttribute('mdc-headline4'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcHeadline4);\n    return MdcHeadline4;\n}(MdcTypography));\nexport { MdcHeadline4 };\nvar MdcHeadline5 = /** @class */ (function (_super) {\n    __extends(MdcHeadline5, _super);\n    function MdcHeadline5(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'headline5';\n        return _this;\n    }\n    MdcHeadline5 = __decorate([\n        inject(Element),\n        customAttribute('mdc-headline5'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcHeadline5);\n    return MdcHeadline5;\n}(MdcTypography));\nexport { MdcHeadline5 };\nvar MdcHeadline6 = /** @class */ (function (_super) {\n    __extends(MdcHeadline6, _super);\n    function MdcHeadline6(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'headline6';\n        return _this;\n    }\n    MdcHeadline6 = __decorate([\n        inject(Element),\n        customAttribute('mdc-headline6'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcHeadline6);\n    return MdcHeadline6;\n}(MdcTypography));\nexport { MdcHeadline6 };\nvar MdcSubtitle1 = /** @class */ (function (_super) {\n    __extends(MdcSubtitle1, _super);\n    function MdcSubtitle1(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'subtitle1';\n        return _this;\n    }\n    MdcSubtitle1 = __decorate([\n        inject(Element),\n        customAttribute('mdc-subtitle1'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcSubtitle1);\n    return MdcSubtitle1;\n}(MdcTypography));\nexport { MdcSubtitle1 };\nvar MdcSubtitle2 = /** @class */ (function (_super) {\n    __extends(MdcSubtitle2, _super);\n    function MdcSubtitle2(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'subtitle2';\n        return _this;\n    }\n    MdcSubtitle2 = __decorate([\n        inject(Element),\n        customAttribute('mdc-subtitle2'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcSubtitle2);\n    return MdcSubtitle2;\n}(MdcTypography));\nexport { MdcSubtitle2 };\nvar MdcBody1 = /** @class */ (function (_super) {\n    __extends(MdcBody1, _super);\n    function MdcBody1(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'body1';\n        return _this;\n    }\n    MdcBody1 = __decorate([\n        inject(Element),\n        customAttribute('mdc-body1'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcBody1);\n    return MdcBody1;\n}(MdcTypography));\nexport { MdcBody1 };\nvar MdcBody2 = /** @class */ (function (_super) {\n    __extends(MdcBody2, _super);\n    function MdcBody2(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'body2';\n        return _this;\n    }\n    MdcBody2 = __decorate([\n        inject(Element),\n        customAttribute('mdc-body2'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcBody2);\n    return MdcBody2;\n}(MdcTypography));\nexport { MdcBody2 };\nvar MdcCaption = /** @class */ (function (_super) {\n    __extends(MdcCaption, _super);\n    function MdcCaption(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'caption';\n        return _this;\n    }\n    MdcCaption = __decorate([\n        inject(Element),\n        customAttribute('mdc-caption'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcCaption);\n    return MdcCaption;\n}(MdcTypography));\nexport { MdcCaption };\nvar MdcTypographyButton = /** @class */ (function (_super) {\n    __extends(MdcTypographyButton, _super);\n    function MdcTypographyButton(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'button';\n        return _this;\n    }\n    MdcTypographyButton = __decorate([\n        inject(Element),\n        customAttribute('mdc-typography-button'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcTypographyButton);\n    return MdcTypographyButton;\n}(MdcTypography));\nexport { MdcTypographyButton };\nvar MdcOveline = /** @class */ (function (_super) {\n    __extends(MdcOveline, _super);\n    function MdcOveline(root) {\n        var _this = _super.call(this, root) || this;\n        _this.type = 'overline';\n        return _this;\n    }\n    MdcOveline = __decorate([\n        inject(Element),\n        customAttribute('mdc-overline'),\n        __metadata(\"design:paramtypes\", [HTMLElement])\n    ], MdcOveline);\n    return MdcOveline;\n}(MdcTypography));\nexport { MdcOveline };\n//# sourceMappingURL=mdc-typography.js.map","import { ValidationControllerFactory } from 'aurelia-validation';\nimport { MdcValidationControllerFactory } from './mdc-validation-controller-factory';\nexport { MdcValidationRenderer } from './mdc-validation-renderer';\nexport { MdcValidationControllerFactory } from './mdc-validation-controller-factory';\nexport function configure() {\n    // replace default static get with ours\n    ValidationControllerFactory.get = MdcValidationControllerFactory.get;\n}\n//# sourceMappingURL=index.js.map","import { __extends } from \"tslib\";\nimport { ValidationControllerFactory } from 'aurelia-validation';\nimport { MdcValidationRenderer } from './mdc-validation-renderer';\nvar MdcValidationControllerFactory = /** @class */ (function (_super) {\n    __extends(MdcValidationControllerFactory, _super);\n    function MdcValidationControllerFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MdcValidationControllerFactory.get = function (container) {\n        return new MdcValidationControllerFactory(container);\n    };\n    MdcValidationControllerFactory.prototype.createForCurrentScope = function (validator) {\n        var controller = _super.prototype.createForCurrentScope.call(this, validator);\n        controller.addRenderer(new MdcValidationRenderer());\n        // controller.validateTrigger = validateTrigger.changeOrBlur;\n        return controller;\n    };\n    // this tells DI to call static get method to resolve dependency\n    MdcValidationControllerFactory['protocol:aurelia:resolver'] = true;\n    return MdcValidationControllerFactory;\n}(ValidationControllerFactory));\nexport { MdcValidationControllerFactory };\n//# sourceMappingURL=mdc-validation-controller-factory.js.map","import { __values } from \"tslib\";\nvar MdcValidationRenderer = /** @class */ (function () {\n    function MdcValidationRenderer() {\n    }\n    MdcValidationRenderer.prototype.render = function (instruction) {\n        var e_1, _a;\n        var elements = new Map();\n        for (var i = 0; i < instruction.unrender.length; ++i) {\n            var ri = instruction.unrender[i];\n            for (var j = 0; j < ri.elements.length; ++j) {\n                var el = ri.elements[j];\n                if (!ri.result.valid && Object.getOwnPropertyDescriptor(el, 'removeError')) {\n                    el.removeError(ri.result);\n                    elements.set(el, true);\n                }\n            }\n        }\n        for (var i = 0; i < instruction.render.length; ++i) {\n            var ri = instruction.render[i];\n            for (var j = 0; j < ri.elements.length; ++j) {\n                var el = ri.elements[j];\n                if (!ri.result.valid && Object.getOwnPropertyDescriptor(el, 'addError')) {\n                    el.addError(ri.result);\n                    elements.set(el, true);\n                }\n            }\n        }\n        try {\n            for (var _b = __values(elements.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var el = _c.value;\n                if (Object.getOwnPropertyDescriptor(el, 'renderErrors')) {\n                    el.renderErrors();\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return MdcValidationRenderer;\n}());\nexport { MdcValidationRenderer };\n//# sourceMappingURL=mdc-validation-renderer.js.map","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\n\nimport { PLATFORM } from 'aurelia-pal';\n\nfunction isObject(val) {\n  return val && (typeof val === 'function' || (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object');\n}\n\nexport var metadata = {\n  resource: 'aurelia:resource',\n  paramTypes: 'design:paramtypes',\n  propertyType: 'design:type',\n  properties: 'design:properties',\n  get: function get(metadataKey, target, targetKey) {\n    if (!isObject(target)) {\n      return undefined;\n    }\n    var result = metadata.getOwn(metadataKey, target, targetKey);\n    return result === undefined ? metadata.get(metadataKey, Object.getPrototypeOf(target), targetKey) : result;\n  },\n  getOwn: function getOwn(metadataKey, target, targetKey) {\n    if (!isObject(target)) {\n      return undefined;\n    }\n    return Reflect.getOwnMetadata(metadataKey, target, targetKey);\n  },\n  define: function define(metadataKey, metadataValue, target, targetKey) {\n    Reflect.defineMetadata(metadataKey, metadataValue, target, targetKey);\n  },\n  getOrCreateOwn: function getOrCreateOwn(metadataKey, Type, target, targetKey) {\n    var result = metadata.getOwn(metadataKey, target, targetKey);\n\n    if (result === undefined) {\n      result = new Type();\n      Reflect.defineMetadata(metadataKey, result, target, targetKey);\n    }\n\n    return result;\n  }\n};\n\nvar originStorage = new Map();\nvar unknownOrigin = Object.freeze({ moduleId: undefined, moduleMember: undefined });\n\nexport var Origin = function () {\n  function Origin(moduleId, moduleMember) {\n    \n\n    this.moduleId = moduleId;\n    this.moduleMember = moduleMember;\n  }\n\n  Origin.get = function get(fn) {\n    var origin = originStorage.get(fn);\n\n    if (origin === undefined) {\n      PLATFORM.eachModule(function (key, value) {\n        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n          for (var name in value) {\n            try {\n              var exp = value[name];\n              if (exp === fn) {\n                originStorage.set(fn, origin = new Origin(key, name));\n                return true;\n              }\n            } catch (e) {}\n          }\n        }\n\n        if (value === fn) {\n          originStorage.set(fn, origin = new Origin(key, 'default'));\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return origin || unknownOrigin;\n  };\n\n  Origin.set = function set(fn, origin) {\n    originStorage.set(fn, origin);\n  };\n\n  return Origin;\n}();\n\nexport function decorators() {\n  for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n    rest[_key] = arguments[_key];\n  }\n\n  var applicator = function applicator(target, key, descriptor) {\n    var i = rest.length;\n\n    if (key) {\n      descriptor = descriptor || {\n        value: target[key],\n        writable: true,\n        configurable: true,\n        enumerable: true\n      };\n\n      while (i--) {\n        descriptor = rest[i](target, key, descriptor) || descriptor;\n      }\n\n      Object.defineProperty(target, key, descriptor);\n    } else {\n      while (i--) {\n        target = rest[i](target) || target;\n      }\n    }\n\n    return target;\n  };\n\n  applicator.on = applicator;\n  return applicator;\n}\n\nexport function deprecated(optionsOrTarget, maybeKey, maybeDescriptor) {\n  function decorator(target, key, descriptor) {\n    var methodSignature = target.constructor.name + '#' + key;\n    var options = maybeKey ? {} : optionsOrTarget || {};\n    var message = 'DEPRECATION - ' + methodSignature;\n\n    if (typeof descriptor.value !== 'function') {\n      throw new SyntaxError('Only methods can be marked as deprecated.');\n    }\n\n    if (options.message) {\n      message += ' - ' + options.message;\n    }\n\n    return _extends({}, descriptor, {\n      value: function deprecationWrapper() {\n        if (options.error) {\n          throw new Error(message);\n        } else {\n          console.warn(message);\n        }\n\n        return descriptor.value.apply(this, arguments);\n      }\n    });\n  }\n\n  return maybeKey ? decorator(optionsOrTarget, maybeKey, maybeDescriptor) : decorator;\n}\n\nexport function mixin(behavior) {\n  var instanceKeys = Object.keys(behavior);\n\n  function _mixin(possible) {\n    var decorator = function decorator(target) {\n      var resolvedTarget = typeof target === 'function' ? target.prototype : target;\n\n      var i = instanceKeys.length;\n      while (i--) {\n        var property = instanceKeys[i];\n        Object.defineProperty(resolvedTarget, property, {\n          value: behavior[property],\n          writable: true\n        });\n      }\n    };\n\n    return possible ? decorator(possible) : decorator;\n  }\n\n  return _mixin;\n}\n\nfunction alwaysValid() {\n  return true;\n}\nfunction noCompose() {}\n\nfunction ensureProtocolOptions(options) {\n  if (options === undefined) {\n    options = {};\n  } else if (typeof options === 'function') {\n    options = {\n      validate: options\n    };\n  }\n\n  if (!options.validate) {\n    options.validate = alwaysValid;\n  }\n\n  if (!options.compose) {\n    options.compose = noCompose;\n  }\n\n  return options;\n}\n\nfunction createProtocolValidator(validate) {\n  return function (target) {\n    var result = validate(target);\n    return result === true;\n  };\n}\n\nfunction createProtocolAsserter(name, validate) {\n  return function (target) {\n    var result = validate(target);\n    if (result !== true) {\n      throw new Error(result || name + ' was not correctly implemented.');\n    }\n  };\n}\n\nexport function protocol(name, options) {\n  options = ensureProtocolOptions(options);\n\n  var result = function result(target) {\n    var resolvedTarget = typeof target === 'function' ? target.prototype : target;\n\n    options.compose(resolvedTarget);\n    result.assert(resolvedTarget);\n\n    Object.defineProperty(resolvedTarget, 'protocol:' + name, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: true\n    });\n  };\n\n  result.validate = createProtocolValidator(options.validate);\n  result.assert = createProtocolAsserter(name, options.validate);\n\n  return result;\n}\n\nprotocol.create = function (name, options) {\n  options = ensureProtocolOptions(options);\n  var hidden = 'protocol:' + name;\n  var result = function result(target) {\n    var decorator = protocol(name, options);\n    return target ? decorator(target) : decorator;\n  };\n\n  result.decorates = function (obj) {\n    return obj[hidden] === true;\n  };\n  result.validate = createProtocolValidator(options.validate);\n  result.assert = createProtocolAsserter(name, options.validate);\n\n  return result;\n};","// Module\nvar code = \"<template class=\\\"\\n    mdc-tab-indicator\\n    ${fade ? 'mdc-tab-indicator--fade' : ''}\\n    ${active ? 'mdc-tab-indicator--active' : ''}\\n  \\\">\\n  <span class=\\\"mdc-tab-indicator__content mdc-tab-indicator__content--${icon ? 'icon' : 'underline'} ${icon ? 'material-icons' : ''}\\\"\\n    aria-hidden=\\\"true\\\" ref=\\\"content_\\\">${icon}</span>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-tab-bar\\\" role=\\\"tablist\\\" keydown.trigger=\\\"handleKeyDown_($event)\\\" mdctab:interacted.trigger=\\\"handleTabInteraction_($event)\\\">\\n  <div as-element=\\\"mdc-tab-scroller\\\" view-model.ref=\\\"tabScroller_\\\" align.bind=\\\"align\\\">\\n    <slot></slot>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-tab-scroller\\n  ${align ? 'mdc-tab-scroller--align-' + align : ''}\\n  \\\" wheel.trigger=\\\"handleInteraction_()\\\" touchstart.trigger=\\\"handleInteraction_()\\\"\\n  pointerdown.trigger=\\\"handleInteraction_()\\\" mousedown.trigger=\\\"handleInteraction_()\\\"\\n  keydown.trigger=\\\"handleInteraction_()\\\" transitionend.trigger=\\\"handleTransitionEnd_($event)\\\">\\n  <div class=\\\" mdc-tab-scroller__scroll-area\\\" ref=\\\"area_\\\">\\n    <div class=\\\"mdc-tab-scroller__scroll-content\\\" ref=\\\"content_\\\">\\n      <slot></slot>\\n    </div>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"\\n    mdc-tab\\n    ${active ? 'mdc-tab--active' : ''}\\n    ${minWidth ? 'mdc-tab--min-width' : ''}\\n    ${stacked ? 'mdc-tab--stacked' : ''}\\n  \\\" role=\\\"tab\\\" aria-selected=\\\"false\\\" tabindex=\\\"-1\\\" mdc-ripple=\\\"no-class.bind: true\\\" click.trigger=\\\"handleClick_()\\\">\\n  <span class=\\\"mdc-tab__content\\\" ref=\\\"content_\\\">\\n    <span class=\\\"mdc-tab__icon material-icons\\\" aria-hidden=\\\"true\\\" if.bind=\\\"icon\\\">${icon}</span>\\n    <span class=\\\"mdc-tab__text-label\\\" if.bind=\\\"label\\\">${label}</span>\\n    <slot></slot>\\n    <mdc-tab-indicator if.bind=\\\"fixed\\\" active.bind=\\\"active\\\" fade.bind=\\\"fade\\\" view-model.ref=\\\"tabIndicator_\\\"\\n      icon.bind=\\\"indicatorIcon\\\">\\n    </mdc-tab-indicator>\\n  </span>\\n  <mdc-tab-indicator if.bind=\\\"!fixed\\\" active.bind=\\\"active\\\" fade.bind=\\\"fade\\\" view-model.ref=\\\"tabIndicator_\\\"\\n    icon.bind=\\\"indicatorIcon\\\">\\n  </mdc-tab-indicator>\\n  <span class=\\\"mdc-tab__ripple\\\" ref=\\\"rippleSurface\\\"></span>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-text-field-helper-line ${errors.length ? 'mdc-text-field-helper-line--with-errors' : ''}\\\">\\n  <slot></slot>\\n  <mdc-text-field-helper-text if.bind=\\\"errors.length\\\" validation class=\\\"mdc-text-field-helper-text--errors\\\">\\n    <span class=\\\"mdc-text-field-helper-text__error\\\" repeat.for=\\\"e of errors\\\">${e}<br/></span>\\n  </mdc-text-field-helper-text>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<!-- DO NOT FORMAT THIS FILE! ANY SPACE BEFORE <SLOT> BREAKS HELPER TEXT ALIGNMENT! -->\\n<template class=\\\"\\n    ${helperTextCssClasses.ROOT} ${persistent ? helperTextCssClasses.ROOT + '--persistent' : ''}\\n    ${validation ? helperTextCssClasses.ROOT + '--validation-msg' : ''}\\\"><slot></slot></template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"\\n    mdc-text-field\\n    ${textarea ? 'mdc-text-field--textarea' : ''}\\n    ${endAligned ? 'mdc-text-field--end-aligned' : ''}\\n    ${ltrText ? 'mdc-text-field--ltr-text' : ''}\\n    ${label ? '' : 'mdc-text-field--no-label'}\\n    mdc-text-field--${outlined ? 'outlined' : 'filled'}\\n    ${leadingIcon_ ? 'mdc-text-field--with-leading-icon' : ''}\\n    ${trailingIcon_ ? 'mdc-text-field--with-trailing-icon' : ''}\\n  \\\" mdc-ripple=\\\"no-class.bind: true; input.bind: input_\\\">\\n  <span class=\\\"mdc-text-field__ripple\\\"></span>\\n  <slot name=\\\"leading-icon\\\"></slot>\\n  <span class=\\\"mdc-text-field__affix mdc-text-field__affix--prefix\\\" if.bind=\\\"prefix && !textarea\\\">${prefix}</span>\\n  <mdc-notched-outline if.bind=\\\"outlined\\\" view-model.ref=\\\"outline_\\\">\\n    <mdc-floating-label if.bind=\\\"label\\\" id=\\\"${id}\\\" view-model.ref=\\\"label_\\\">${label}</mdc-floating-label>\\n  </mdc-notched-outline>\\n  <input if.bind=\\\"!textarea\\\" class=\\\"mdc-text-field__input\\\" type=\\\"text\\\" aria-labelledby.bind=\\\"id\\\" ref=\\\"input_\\\"\\n    focus.trigger=\\\"onFocus()\\\" input.trigger=\\\"onInput($event)\\\" change.trigger=\\\"onChange($event)\\\" blur.trigger=\\\"onBlur()\\\"\\n    placeholder.bind=\\\"placeholder\\\" keyup.trigger=\\\"onKeyup($event)\\\">\\n  <span if.bind=\\\"textarea\\\" class=\\\"mdc-text-field__resizer\\\">\\n    <textarea class=\\\"mdc-text-field__input\\\" aria-labelledby.bind=\\\"id\\\" ref=\\\"input_\\\"\\n      focus.trigger=\\\"onFocus()\\\" input.trigger=\\\"onInput($event)\\\" change.trigger=\\\"onChange($event)\\\"\\n      blur.trigger=\\\"onBlur()\\\" keyup.trigger=\\\"onKeyup($event)\\\"></textarea>\\n  </span>\\n  <span class=\\\"mdc-text-field__affix mdc-text-field__affix--suffix\\\" if.bind=\\\"suffix && !textarea\\\">${suffix}</span>\\n  <slot name=\\\"trailing-icon\\\"></slot>\\n  <mdc-floating-label if.bind=\\\"label && !outlined\\\" id=\\\"${id}\\\" view-model.ref=\\\"label_\\\">${label}</mdc-floating-label>\\n  <mdc-line-ripple if.bind=\\\"!outlined\\\" view-model.ref=\\\"lineRipple_\\\"></mdc-line-ripple>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-tooltip\\n  ${rich ? 'mdc-tooltip--rich' : ''}\\n\\\" role=\\\"tooltip\\\" aria-hidden=\\\"true\\\" transitionend.trigger=\\\"handleTransitionEnd()\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">\\n    <slot></slot>\\n  </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-top-app-bar__section mdc-top-app-bar__section--align-${end ? 'end' : 'start'}\\\" role=\\\"toolbar\\\">\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-top-app-bar\\n  ${short ? 'mdc-top-app-bar--short' : ''}\\n  ${short && collapsed ? 'mdc-top-app-bar--short-collapsed' : ''}\\n  ${fixed ? 'mdc-top-app-bar--fixed' : ''}\\n  ${prominent ? 'mdc-top-app-bar--prominent' : ''}\\n  ${dense ? 'mdc-top-app-bar--dense' : ''}\\n  ${hasActionItems ? 'mdc-top-app-bar--short-has-action-item' : ''}\\\">\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template class=\\\"mdc-tree-view\\\">\\n  <require from=\\\"./mdc-tree-node\\\"></require>\\n  <require from=\\\"./node-filter\\\"></require>\\n  <ul class=\\\"mdc-tree-view__list\\\">\\n    <li repeat.for=\\\"$node of nodes | nodeFilter:filter\\\" class=\\\"mdc-tree-view__list-item\\\">\\n      <let $tree.bind=\\\"element\\\"></let>\\n      <let $tree-vm.bind=\\\"$parent\\\"></let>\\n      <div class=\\\"mdc-tree-view__node ${$node.selected ? 'mdc-tree-view__node--selected' : ''}\\\"\\n        click.trigger=\\\"nodeClicked($node)\\\" mdc-ripple=\\\"no-class.bind: true;\\\">\\n        <div class=\\\"mdc-tree-view__node__ripple\\\"></div>\\n        <let filtered-children.bind=\\\"$node.children | nodeFilter:filter\\\"></let>\\n        <button mdc-icon-button if.bind=\\\"filteredChildren.length\\\" type=\\\"fab\\\" size=\\\"small\\\" class=\\\"mdc-tree-view__expander\\\"\\n          on.bind=\\\"$node.expanded\\\">\\n          <mdc-icon-button-icon class=\\\"material-icons\\\">chevron_right</mdc-icon-button-icon>\\n          <mdc-icon-button-icon class=\\\"material-icons\\\" on>expand_more</mdc-icon-button-icon>\\n        </button>\\n        <div else class=\\\"mdc-tree-view__leaf-padding\\\"></div>\\n        <mdc-tree-node class=\\\"mdc-tree-node\\\" factory.bind=\\\"nodeViewFactory\\\"\\n          root-binding-context.bind=\\\"rootBindingContext\\\"></mdc-tree-node>\\n      </div>\\n      <mdc-promisify-reference if.bind=\\\"$node.children\\\" promise.from-view=\\\"$node.childTreeViewPromise\\\"\\n        reference.to-view=\\\"treeView\\\">\\n      </mdc-promisify-reference>\\n      <mdc-tree-view if.bind=\\\"filteredChildren.length && $node.expanded\\\" nodes.bind=\\\"filteredChildren\\\"\\n        root-binding-context.bind=\\\"rootBindingContext\\\" view-model.ref=\\\"treeView\\\" filter.bind=\\\"filter\\\"\\n        mdctree:node-selected.trigger=\\\"childNodeSelected($event.detail.node)\\\">\\n      </mdc-tree-view>\\n    </li>\\n  </ul>\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nexport default code;"],"names":[],"sourceRoot":""}