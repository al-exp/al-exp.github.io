{"version":3,"file":"app-efc01b10.f77665d3faa0d235c766.bundle.js","mappings":"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","sources":["webpack://web-client/./src/resources/message-service/message-box.scss","webpack://web-client/./src/resources/components/locales/locales.html","webpack://web-client/./src/resources/message-service/dialog.html","webpack://web-client/./src/resources/message-service/message-box.html","webpack://web-client/./src/resources/components/index.ts","webpack://web-client/./src/resources/components/locales/locales.ts","webpack://web-client/./src/resources/components/mdc-data-table/index.ts","webpack://web-client/./src/resources/index.ts","webpack://web-client/./src/resources/message-service/contracts/index.ts","webpack://web-client/./src/resources/message-service/contracts/message-box-buttons.ts","webpack://web-client/./src/resources/message-service/contracts/message-box-icon.ts","webpack://web-client/./src/resources/message-service/contracts/message-box-result.ts","webpack://web-client/./src/resources/message-service/contracts/message-service.ts","webpack://web-client/./src/resources/message-service/dialog.ts","webpack://web-client/./src/resources/message-service/implementation/index.ts","webpack://web-client/./src/resources/message-service/implementation/message-service.ts","webpack://web-client/./src/resources/message-service/index.ts","webpack://web-client/./src/resources/message-service/message-box.ts","webpack://web-client/./src/resources/message-service/preserve-breaks.ts","webpack://web-client/./src/resources/services/index.ts","webpack://web-client/./src/resources/services/lite-event.ts","webpack://web-client/./src/resources/services/localization/index.ts","webpack://web-client/./src/resources/services/localization/localization-service.ts","webpack://web-client/./src/resources/value-converters/camel-case-value-converter.ts","webpack://web-client/./src/resources/value-converters/capitalize-value-converter.ts","webpack://web-client/./src/resources/value-converters/date-format-value-converter.ts","webpack://web-client/./src/resources/value-converters/decapitalize-value-converter.ts","webpack://web-client/./src/resources/value-converters/group-value-converter.ts","webpack://web-client/./src/resources/value-converters/index.ts","webpack://web-client/./src/resources/value-converters/page-value-converter.ts","webpack://web-client/./src/resources/value-converters/percentage-value-converter.ts","webpack://web-client/./src/resources/value-converters/sort-value-converter.ts","webpack://web-client/./src/resources/value-converters/title-case-value-converter.ts","webpack://web-client/./src/resources/value-converters/to-lower-case-value-converter.ts","webpack://web-client/./src/resources/value-converters/to-upper-case-value-converter.ts","webpack://web-client/./src/resources/value-converters/utils.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"ux-dialog-overlay{background-color:rgba(0,0,0,.6)}.message-box{box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);min-width:480px}.message-box__header{align-items:center;display:flex;flex-direction:row;padding:16px 24px}.message-box__header .icon-box{height:22px}.message-box__header .icon-box>svg{max-height:22px}.message-box__header .text{font-weight:500!important;line-height:20px;margin:0 10px}.message-box__separator{margin:0}.message-box__separator--top{height:2px}.message-box .color-question{background-color:#f9a646}.message-box .color-warning{background-color:#fbbf25}.message-box .color-error{background-color:#b61615}.message-box .color-information{background-color:#569dbc}.message-box .color-success{background-color:#38c976}.message-box__content{font-size:18px;min-height:100px;padding:16px 24px}.message-box__footer{justify-content:flex-end;padding:20px}.message-box ux-button{margin:0 15px 0 0}.message-box ux-button.message-box__btn-cancel{margin-left:15px}.message-box__btn-cancel button{background-color:transparent;border:1px solid #045faf;color:#045faf;transition:.2}.message-box__btn-cancel button:hover{background-color:#045faf;color:#fff}.ltr .message-box ux-button{margin:0 0 0 15px}.ltr .message-box ux-button.message-box__btn-cancel{margin-right:15px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/resources/message-service/message-box.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACE,+BACF,CAEA,aAEE,kEAAA,CADA,eAEF,CACE,qBAGE,kBAAA,CAFA,YAAA,CACA,kBAAA,CAEA,iBACJ,CACI,+BACE,WACN,CACM,mCACE,eACR,CAGI,2BAEE,yBAAA,CACA,gBAAA,CAFA,aACN,CAKE,wBACE,QAHJ,CAKI,6BACE,UAHN,CAQI,6BACE,wBANN,CASI,4BACE,wBAPN,CAUI,0BACE,wBARN,CAWI,gCACE,wBATN,CAYI,4BACE,wBAVN,CAcE,sBAGE,cAAA,CADA,gBAAA,CADA,iBAVJ,CAeE,qBACE,wBAAA,CACA,YAbJ,CAgBE,uBACE,iBAdJ,CAgBI,+CACE,gBAdN,CAmBI,gCAEE,4BAAA,CACA,wBAAA,CAFA,aAAA,CAGA,aAjBN,CAmBM,sCAEE,wBAAA,CADA,UAhBR,CAyBI,4BACE,iBAtBN,CAwBM,oDACE,iBAtBR\",\"sourcesContent\":[\"ux-dialog-overlay {\\n  background-color: rgba(0, 0, 0, 0.6);\\n}\\n\\n.message-box {\\n  min-width: 480px;\\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\\n\\n  &__header {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    padding: 16px 24px;\\n\\n    .icon-box {\\n      height: 22px;\\n\\n      &>svg {\\n        max-height: 22px;\\n      }\\n    }\\n\\n    .text {\\n      margin: 0 10px;\\n      font-weight: 500 !important;\\n      line-height: 20px;\\n    }\\n  }\\n\\n  &__separator {\\n    margin: 0;\\n\\n    &--top {\\n      height: 2px;\\n    }\\n  }\\n\\n  .color {\\n    &-question {\\n      background-color: #F9A646;\\n    }\\n\\n    &-warning {\\n      background-color: #FBBF25;\\n    }\\n\\n    &-error {\\n      background-color: #B61615;\\n    }\\n\\n    &-information {\\n      background-color: #569DBC;\\n    }\\n\\n    &-success {\\n      background-color: #38C976;\\n    }\\n  }\\n\\n  &__content {\\n    padding: 16px 24px;\\n    min-height: 100px;\\n    font-size: 18px;\\n  }\\n\\n  &__footer {\\n    justify-content: flex-end;\\n    padding: 20px;\\n  }\\n\\n  ux-button {\\n    margin: 0 15px 0 0;\\n\\n    &.message-box__btn-cancel {\\n      margin-left: 15px;\\n    }\\n  }\\n\\n  &__btn-cancel {\\n    button {\\n      color: #045FAF;\\n      background-color: transparent;\\n      border: 1px solid #045FAF;\\n      transition: 0.2;\\n\\n      &:hover {\\n        color: #fff;\\n        background-color: #045FAF;\\n      }\\n    }\\n  }\\n}\\n\\n.ltr {\\n  .message-box {\\n    ux-button {\\n      margin: 0 0 0 15px;\\n\\n      &.message-box__btn-cancel {\\n        margin-right: 15px;\\n      }\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Module\nvar code = \"<template>\\n  <select value.bind=\\\"selectedLocale\\\">\\n    <option repeat.for=\\\"lang of source\\\" model.bind=\\\"lang.locale\\\"> ${lang.nativeName.slice(0, 2).toUpperCase()}\\n      (${lang.englishName}) </option>\\n  </select>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\n   <compose view-model.bind=\\\"viewModel\\\" view=\\\"./message-box.html\\\"></compose>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\n  <style>\\n    .dialog-button {\\n      margin-right: 16px\\n    }\\n\\n  </style>\\n  <require from=\\\"./message-box.scss\\\"></require>\\n  <require from=\\\"./preserve-breaks\\\"></require>\\n  <mdc-card class=\\\"message-box\\\">\\n    <div class=\\\"message-box__header\\\">\\n      <div class=\\\"icon-box\\\">\\n        <svg if.bind=\\\"isSuccessImage\\\" width=\\\"34\\\" height=\\\"35\\\" viewBox=\\\"0 0 34 35\\\" fill=\\\"none\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path\\n            d=\\\"M34 17.2188C34 7.89617 26.3226 0.21875 17 0.21875C7.60887 0.21875 0 7.89617 0 17.2188C0 26.6099 7.60887 34.2188 17 34.2188C26.3226 34.2188 34 26.6099 34 17.2188ZM15.0121 26.2671C14.6008 26.6784 13.8468 26.6784 13.4355 26.2671L6.30645 19.1381C5.89516 18.7268 5.89516 17.9728 6.30645 17.5615L7.88306 16.0534C8.29435 15.5736 8.97984 15.5736 9.39113 16.0534L14.2581 20.8518L24.5403 10.5696C24.9516 10.0897 25.6371 10.0897 26.0484 10.5696L27.625 12.0776C28.0363 12.4889 28.0363 13.2429 27.625 13.6542L15.0121 26.2671Z\\\"\\n            fill=\\\"#38C976\\\" />\\n        </svg>\\n        <svg if.bind=\\\"isWarningImage\\\" width=\\\"34\\\" height=\\\"32\\\" viewBox=\\\"0 0 34 32\\\" fill=\\\"none\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path\\n            d=\\\"M33.6308 27.5593L19.4518 1.47773C18.3884 -0.461181 15.6116 -0.523727 14.5482 1.47773L0.369174 27.5593C-0.694254 29.4982 0.664571 32 2.8505 32H31.1495C33.3354 32 34.6942 29.5607 33.6308 27.5593ZM17.0295 22.1178C18.5065 22.1178 19.7472 23.4312 19.7472 24.9949C19.7472 26.6211 18.5065 27.872 17.0295 27.872C15.4935 27.872 14.3119 26.6211 14.3119 24.9949C14.3119 23.4312 15.4935 22.1178 17.0295 22.1178ZM14.43 11.5C14.371 11.0622 14.7254 10.6869 15.139 10.6869H18.861C19.2746 10.6869 19.629 11.0622 19.57 11.5L19.1564 20.304C19.0973 20.7418 18.8019 20.992 18.4474 20.992H15.5526C15.1981 20.992 14.9027 20.7418 14.8436 20.304L14.43 11.5Z\\\"\\n            fill=\\\"#FBBF25\\\" />\\n        </svg>\\n        <svg if.bind=\\\"isErrorImage\\\" width=\\\"34\\\" height=\\\"34\\\" viewBox=\\\"0 0 34 34\\\" fill=\\\"none\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n            d=\\\"M17 34C26.3888 34 34 26.3888 34 17C34 7.61116 26.3888 0 17 0C7.61116 0 0 7.61116 0 17C0 26.3888 7.61116 34 17 34ZM17.7618 13.875H22.1137C22.789 13.875 23.2392 14.7773 22.864 15.4219L16.2611 28.4844C16.111 28.8281 15.8109 29 15.4733 29C14.9105 29 14.4978 28.3984 14.6104 27.7539L16.3361 19.375H11.9092C11.3465 19.375 10.9338 18.8594 11.0088 18.2148L12.2093 7.90234C12.2469 7.38672 12.6595 7 13.1097 7H18.5121C19.0748 7 19.525 7.64453 19.375 8.33203L17.7618 13.875Z\\\"\\n            fill=\\\"#B61615\\\" />\\n        </svg>\\n        <svg if.bind=\\\"isInformationImage\\\" width=\\\"36\\\" height=\\\"36\\\" viewBox=\\\"0 0 36 36\\\" fill=\\\"none\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path\\n            d=\\\"M18 36C27.936 36 36 27.936 36 18C36 8.064 27.936 -7.04977e-07 18 -1.57361e-06C8.064 -2.44224e-06 -5.18715e-06 8.064 -6.05578e-06 18C-6.92442e-06 27.936 8.06399 36 18 36ZM16.2 9L19.8 9L19.8 12.6L16.2 12.6L16.2 9ZM16.2 16.2L19.8 16.2L19.8 27L16.2 27L16.2 16.2Z\\\"\\n            fill=\\\"#4C647C\\\" />\\n        </svg>\\n        <svg if.bind=\\\"isQuestionImage\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" fill=\\\"none\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path\\n            d=\\\"M32 16C32 7.22581 24.7742 0 16 0C7.16129 0 0 7.22581 0 16C0 24.8387 7.16129 32 16 32C24.7742 32 32 24.8387 32 16ZM16.3871 5.29032C20.0645 5.29032 23.9355 8.12903 23.9355 11.871C23.9355 16.9032 18.5806 16.9677 18.5806 18.7742V18.8387C18.5806 19.2903 18.1935 19.6129 17.8065 19.6129H14.1935C13.7419 19.6129 13.4194 19.2903 13.4194 18.8387V18.5806C13.4194 15.9355 15.4194 14.9032 16.9032 14.0645C18.1935 13.3548 19.0323 12.8387 19.0323 11.871C19.0323 10.5806 17.3548 9.74194 16.0645 9.74194C14.3226 9.74194 13.5484 10.5806 12.3871 12.0645C12.129 12.3871 11.6129 12.4516 11.2903 12.1935L9.03226 10.5161C8.70968 10.2581 8.64516 9.80645 8.90323 9.41935C10.6452 6.77419 12.9032 5.29032 16.3871 5.29032ZM16 21.2903C17.6129 21.2903 18.9677 22.6452 18.9677 24.2581C18.9677 25.9355 17.6129 27.2258 16 27.2258C14.3226 27.2258 13.0323 25.9355 13.0323 24.2581C13.0323 22.6452 14.3226 21.2903 16 21.2903Z\\\"\\n            fill=\\\"#FD7A54\\\" />\\n        </svg>\\n      </div>\\n      <div class=\\\"text\\\">${caption}</div>\\n    </div>\\n    <mdc-list-divider if.bind=\\\"isSuccessImage\\\" class=\\\"message-box__separator message-box__separator--top color-success\\\">\\n    </mdc-list-divider>\\n    <mdc-list-divider if.bind=\\\"isWarningImage\\\" class=\\\"message-box__separator message-box__separator--top color-warning\\\">\\n    </mdc-list-divider>\\n    <mdc-list-divider if.bind=\\\"isErrorImage\\\" class=\\\"message-box__separator message-box__separator--top color-error\\\">\\n    </mdc-list-divider>\\n    <mdc-list-divider if.bind=\\\"isInformationImage\\\"\\n      class=\\\"message-box__separator message-box__separator--top color-information\\\"></mdc-list-divider>\\n    <mdc-list-divider if.bind=\\\"isQuestionImage\\\"\\n      class=\\\"message-box__separator message-box__separator--top color-question\\\"></mdc-list-divider>\\n    <div class=\\\"mdc-card__content message-box__content\\\">\\n      <div preserve-breaks.bind=\\\"message\\\"></div>\\n    </div>\\n    <mdc-list-divider class=\\\"message-box__separator\\\"></mdc-list-divider>\\n    <mdc-card-actions class=\\\"message-box__footer\\\">\\n      <mdc-button class=\\\"dialog-button\\\" if.bind=\\\"isSaveButtonVisible\\\" click.delegate=\\\"save()\\\"><span\\n          t=\\\"button.save\\\"></span></mdc-button>\\n      <mdc-button class=\\\"dialog-button\\\" if.bind=\\\"isOkButtonVisible\\\" click.delegate=\\\"ok()\\\"><span t=\\\"button.ok\\\"></span>\\n      </mdc-button>\\n      <mdc-button class=\\\"dialog-button\\\" if.bind=\\\"isYesButtonVisible\\\" click.delegate=\\\"yes()\\\"><span t=\\\"yes\\\"></span>\\n      </mdc-button>\\n      <mdc-button class=\\\"dialog-button\\\" if.bind=\\\"isNoButtonVisible\\\" click.delegate=\\\"no()\\\"><span t=\\\"no\\\"></span>\\n      </mdc-button>\\n      <mdc-button class=\\\"message-box__btn-cancel dialog-button\\\" if.bind=\\\"isCancelButtonVisible\\\"\\n        click.delegate=\\\"cancel()\\\"><span t=\\\"button.cancel\\\"></span></mdc-button>\\n      <mdc-button class=\\\"dialog-button\\\" if.bind=\\\"isNoSaveButtonVisible\\\" click.delegate=\\\"dontSave()\\\"><span\\n          t=\\\"button.dont_save\\\"></span></mdc-button>\\n    </mdc-card-actions>\\n  </mdc-card>\\n</template>\\n\";\n// Exports\nexport default code;","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\n\nexport * from './mdc-data-table';\n \nexport function configure(config: FrameworkConfiguration): void {\n  config.globalResources([\n    PLATFORM.moduleName('resources/components/locales/locales')\n  ]);\n}\n","import { LocalizationService } from './../../services/localization';\nimport {customElement, bindable, autoinject} from 'aurelia-framework';\n\n@customElement('locales')\n@autoinject\nexport class Locales {\n  @bindable source: LocaleInfo[];\n\n  constructor(private element: Element, \n              private localizationService: LocalizationService) {}\n\n  public attached(): void {\n    this.source = this.localizationService.languages.map(x => {\n      return {\n        locale: x,\n        nativeName: this.localizationService.getLocalizedValue(x, \"locale_native_name\"),\n        englishName: this.localizationService.getLocalizedValue(x, \"locale_english_name\")\n      }\n    });\n  }\n\n  public get selectedLocale(): string {\n    return this.localizationService.getLocale();\n  }\n\n  public set selectedLocale(value: string) {\n    this.localizationService.setLocal(value);\n  }\n}\n\nclass LocaleInfo {\n  public locale: string;\n  public nativeName: string;\n  public englishName: string;\n}\n","export interface MDCDataTableRowSelectionChangedEvent {\n  rowIndex: number;\n  rowId: string | null;\n  selected: boolean;\n}\n","import {FrameworkConfiguration, PLATFORM} from 'aurelia-framework';\nimport i18next from 'i18next';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.globalResources([\n    PLATFORM.moduleName('resources/message-service/message-box')\n  ]);\n\n  config.aurelia.use\n    .plugin(PLATFORM.moduleName('resources/services/localization/index'), {\n      onSetLocale: (locale: string) => {\n        const direction = i18next.dir(locale);\n        document.querySelector('body').style.direction = direction;\n        // document.querySelector('body').removeAttribute('class');\n        // document.querySelector('body').classList.add(direction);\n        //moment.locale(locale);\n      }\n    })\n    .feature(PLATFORM.moduleName('resources/components/index'))\n    .feature(PLATFORM.moduleName('resources/value-converters/index'))\n    .feature(PLATFORM.moduleName('resources/message-service/index'));\n}\n\nexport * from './components';\nexport * from './services';\nexport * from './value-converters';\nexport * from './message-service';\n","export * from './message-box-result'\nexport * from './message-box-buttons'\nexport * from './message-box-icon'\nexport * from './message-service'\n","export enum MessageBoxButtons {\n  Ok,\n  OkCancel,\n  YesNoCancel,\n  YesNo,\n  SaveNoSaveCancel\n}\n","export enum MessageBoxIcon {\n  None,\n  Error,\n  Question,\n  Warning,\n  Information,\n  Success\n}\n","export enum MessageBoxResult {\n  OK,\n  Cancel,\n  DontSave,\n  Save,\n  Yes,\n  No\n}\n","import { MessageBoxButtons } from \"./message-box-buttons\";\nimport { MessageBoxIcon } from \"./message-box-icon\";\nimport { MessageBoxResult } from \"./message-box-result\";\n\nexport const IMessageService = Symbol('IMessageService');\n\nexport interface IMessageService {\n  show(message: string, caption?: string, buttons?: MessageBoxButtons, icon?: MessageBoxIcon): Promise<MessageBoxResult>;\n  showError(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult>;\n  showQuestion(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult>;\n  showWarning(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult>;\n  showInformation(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult>;\n  showSuccess(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult>;\n}\n","import { useView, PLATFORM } from 'aurelia-framework';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { DialogController } from 'aurelia-dialog';\n\n/**\n * Represents the Dialog View\n */\nexport class Dialog {\n\n  private viewModel: any;\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor (dialogController: DialogController) {}\n\n  protected activate(viewModel: any): void {\n    this.viewModel = viewModel;\n  }\n}\n","export * from './message-service'\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ViewModelCreatorService } from '@logofx/aurelia-mvvm-plugin';\nimport { IMessageService, MessageBoxButtons, MessageBoxIcon, MessageBoxResult } from \"../contracts\";\nimport { autoinject } from \"aurelia-dependency-injection\";\nimport { MessageBox as MessageBoxViewModel } from '../message-box';\nimport { DialogService, DialogCloseResult } from 'aurelia-dialog';\nimport { Dialog } from '../dialog';\n\n@autoinject\nexport class MessageService implements IMessageService {\n\n  constructor (private readonly dialogService: DialogService, private viewModelCreatorService: ViewModelCreatorService) { }\n\n  private async showDialog(viewModel: any): Promise<DialogCloseResult> {\n    // tslint:disable: no-floating-promises\n\n    return new Promise((resolve: (value?: DialogCloseResult | PromiseLike<DialogCloseResult>) => void): void => {\n        this.dialogService.open({\n                viewModel: Dialog,\n                model: viewModel\n              })\n              .whenClosed((response: any): void => {\n                resolve(response);\n              });\n    });\n  }  \n\n  public async show(message: string, caption?: string, buttons?: MessageBoxButtons, icon?: MessageBoxIcon): Promise<MessageBoxResult> {\n    const vm = this.viewModelCreatorService.create<MessageBoxViewModel>(MessageBoxViewModel);\n    if (caption) {\n      vm.caption = caption;\n    } else {\n      vm.caption = \"\";\n    }\n\n    vm.message = message;\n\n    if (buttons) {\n      vm.buttons = buttons;\n    } else {\n      vm.buttons = MessageBoxButtons.Ok;\n    }\n\n    if (icon) {\n      vm.image = icon;\n    } else {\n      vm.image = MessageBoxIcon.None;\n    }\n\n    const retVal = await this.showDialog(vm);\n\n    return retVal.output;\n  }\n\n  public async showError(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult> {\n    return await this.show(message, caption, buttons, MessageBoxIcon.Error);\n  }\n\n  public async showQuestion(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult> {\n    if (!buttons) {\n      buttons = MessageBoxButtons.YesNo;\n    }\n    return await this.show(message, caption, buttons, MessageBoxIcon.Question);\n  }\n  \n  public async showWarning(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult> {\n    return await this.show(message, caption, buttons, MessageBoxIcon.Warning);\n  }\n  \n  public async showInformation(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult> {\n    return await this.show(message, caption, buttons, MessageBoxIcon.Information);\n  }\n  \n  public async showSuccess(message: string, caption?: string, buttons?: MessageBoxButtons): Promise<MessageBoxResult> {\n    return await this.show(message, caption, buttons, MessageBoxIcon.Success);\n  }\n}\n","import { MessageService } from './implementation';\nimport { IMessageService } from './contracts';\nimport { FrameworkConfiguration } from 'aurelia-framework';\n\nexport * from './contracts'\nexport * from './implementation'\nexport * from './message-box'\n\n\nexport function configure(config: FrameworkConfiguration): void {  \n  config.aurelia.container.registerSingleton(IMessageService, MessageService);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useView, PLATFORM } from 'aurelia-framework';\nimport { DialogService } from 'aurelia-dialog';\nimport { ObjectViewModel } from '@logofx/aurelia-mvvm-plugin';\nimport { autoinject, transient } from \"aurelia-dependency-injection\";\nimport { MessageBoxButtons, MessageBoxIcon, MessageBoxResult } from './contracts';\n\n//@useView(PLATFORM.moduleName('./message-box.html')) // ...because the different behavior in prod. build\n@autoinject\n@transient(MessageBox)\nexport class MessageBox extends ObjectViewModel<any> {\n\n  private _title: string;\n  private _message: string;\n  private _buttons: MessageBoxButtons;\n  private _image: MessageBoxIcon;\n\n  constructor (private _dialogService: DialogService) {\n    super(null);\n  }\n\n  public get caption(): string {\n    return this._title;\n  }\n  public set caption(value: string) {\n    this._title = value;\n  }\n\n  public get message(): string {\n    return this._message;\n  }\n  public set message(value: string) {\n    this._message = value;\n  }\n\n  public get buttons(): MessageBoxButtons {\n    return this._buttons;\n  }\n  public set buttons(value: MessageBoxButtons) {\n    this._buttons = value;\n  }\n\n  public get isCancelButtonVisible(): boolean {\n    return this._buttons === MessageBoxButtons.OkCancel || this._buttons === MessageBoxButtons.YesNoCancel || this._buttons === MessageBoxButtons.SaveNoSaveCancel;\n  }\n\n  public get isNoButtonVisible(): boolean {\n    return this._buttons === MessageBoxButtons.YesNo || this._buttons === MessageBoxButtons.YesNoCancel;\n  }\n\n  public get isOkButtonVisible(): boolean {\n    return this._buttons === MessageBoxButtons.Ok || this._buttons === MessageBoxButtons.OkCancel;\n  }\n\n  public get isYesButtonVisible(): boolean {\n    return this._buttons === MessageBoxButtons.YesNo || this._buttons === MessageBoxButtons.YesNoCancel;\n  }\n\n  public get isSaveButtonVisible(): boolean {\n    return this._buttons === MessageBoxButtons.SaveNoSaveCancel;\n  }\n\n  public get isNoSaveButtonVisible(): boolean {\n    return this._buttons === MessageBoxButtons.SaveNoSaveCancel;\n  }\n\n  public get image(): MessageBoxIcon {\n    return this._image;\n  }\n  public set image(value: MessageBoxIcon) {\n    this._image = value;\n  }\n\n  public get isSuccessImage(): boolean {\n    return this._image === MessageBoxIcon.Success;\n  }\n\n  public get isWarningImage(): boolean {\n    return this._image === MessageBoxIcon.Warning;\n  }\n\n  public get isErrorImage(): boolean {\n    return this._image === MessageBoxIcon.Error;\n  }\n\n  public get isInformationImage(): boolean {\n    return this._image === MessageBoxIcon.Information;\n  }\n\n  public get isQuestionImage(): boolean {\n    return this._image === MessageBoxIcon.Question;\n  }\n\n  public ok(): void {\n    this._dialogService.controllers[0].ok(MessageBoxResult.OK);\n  }\n\n  public cancel(): void {\n    this._dialogService.controllers[0].cancel(MessageBoxResult.Cancel);\n  }\n\n  public no(): void {\n    this._dialogService.controllers[0].close(false, MessageBoxResult.No);\n  }\n\n  public yes(): void {\n    this._dialogService.controllers[0].close(true, MessageBoxResult.Yes);\n  }\n\n  public save(): void {\n    this._dialogService.controllers[0].close(true, MessageBoxResult.Save);\n  }\n\n  public dontSave(): void {\n    this._dialogService.controllers[0].close(false, MessageBoxResult.DontSave);\n  }\n\n  // // temporary solution for the issue in prod. build\n  // public getViewStrategy(): unknown {\n  //   return './message-box.html';\n  // }\n}\n","import {inject} from 'aurelia-framework';\n\nfunction htmlEncode(html: string): string {\n\n  /*\n  return document.createElement('a').appendChild(document.createTextNode(html)).parentNode.innerHTML;  \n  */\n\n  const element = document.createElement('a');\n  const newChild = document.createTextNode(html);\n  const child = element.appendChild(newChild);\n  const result = (child.parentNode as any).innerHTML;\n\n  return result;\n}\n\n@inject(Element)\nexport class PreserveBreaksCustomAttribute {\n  constructor(private element) { }\n\n  public value: string;\n\n  public valueChanged(): void {\n    let html = htmlEncode(this.value);\n    html = html.replace(/\\r/g, '').replace(/\\n/g, '<br/>');\n    this.element.innerHTML = html;\n  }\n}\n","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.globalResources([\n    PLATFORM.moduleName('resources/services/localization/index')\n  ]);\n}\n\nexport * from './localization';\nexport * from './lite-event';\n","export interface ILiteEvent<T> {\n  on(handler: { (data?: T): void }) : void;\n  off(handler: { (data?: T): void }) : void;\n}\n\nexport class LiteEvent<T> implements ILiteEvent<T> {\n  private handlers: { (data?: T): void; }[] = [];\n\n  public on(handler: { (data?: T): void }) : void {\n      this.handlers.push(handler);\n  }\n\n  public off(handler: { (data?: T): void }) : void {\n      this.handlers = this.handlers.filter(h => h !== handler);\n  }\n\n  public trigger(data?: T) {\n      this.handlers.slice(0).forEach(h => h(data));\n  }\n\n  public expose() : ILiteEvent<T> {\n      return this;\n  }\n}\n","import { FrameworkConfiguration } from 'aurelia-framework';\nimport { ValidationMessageProvider } from 'aurelia-validation';\nimport i18next from 'i18next';\n\nexport * from './localization-service';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function configure(config: FrameworkConfiguration, callback?: { onSetLocale: (locale: string) => void  }): void {\n  ValidationMessageProvider.prototype.getMessage = function(key: string) {\n    const translation = i18next.t(key);\n    return this.parser.parse(translation);\n  };\n\n  ValidationMessageProvider.prototype.getDisplayName = \n    function(propertyName: string | number, displayName?: string | null | (() => string)) {\n      if (displayName !== null && displayName !== undefined) {\n        return displayName;\n      }\n\n      const key = propertyName.toString();\n      const translation = i18next.t(key);\n      return this.parser.parse(translation);\n    }\n\n  if (callback?.onSetLocale) {\n    callback.onSetLocale(i18next.language);\n  }\n\n  i18next.on(\"languageChanged\", (lng: string) => {\n    if (callback?.onSetLocale) {\n      callback.onSetLocale(i18next.language);\n    }\n  });\n}\n","import { I18N } from 'aurelia-i18n';\nimport { autoinject } from 'aurelia-dependency-injection';\nimport { LiteEvent, ILiteEvent } from '../lite-event';\n\n@autoinject\nexport class LocalizationService {\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _options: any;\n\n  private readonly _onLocaleChanged = new LiteEvent<string>();\n\n  constructor (private _i18n: I18N) {\n    this._options = _i18n.i18next.options;\n    this._i18n.i18next.on(\"languageChanged\", lng => {\n      this._onLocaleChanged.trigger(lng);\n    });\n  }\n\n  public get onLocaleChanged() : ILiteEvent<string> {\n    return this._onLocaleChanged.expose();\n  }\n\n  public get languages(): string[] {\n    return this._options.supportedLanguages;\n  }\n\n  public setLocal(locale: string): void {\n    this._i18n.setLocale(locale);   \n  }\n\n  public getLocale(): string {\n    return this._i18n.getLocale();\n  }\n\n  public getLocalizedValue(locale: string, key: string | string[]): string {\n    return this._i18n.i18next.getFixedT(locale)(key);\n  }\n}\n","import * as voca from 'voca';\n\nexport class CamelCaseValueConverter {\n\n\n  public toView(value: string): string {\n\n    return voca.camelCase(value);\n\n  }\n\n}\n","import * as voca from 'voca';\n\nexport class CapitalizeValueConverter {\n\n\n  public toView(value: string): string {\n\n    return voca.capitalize(value);\n\n  }\n\n}\n","import moment from 'moment';\n\nexport class DateFormatValueConverter {\n  /**\n   * @desc Formats a date value based on a moment format\n   * @param {Date} dt the date value\n   * @param {String} [format=M/D/YYYY h:mm a] the moment.js format\n   * @requires moment.js\n   * @return {string} the formated date\n   */\n  toView(dt, format) {\n    if (!dt) return dt;\n    if (!format) format = 'M/D/YYYY h:mm a';\n\n    // convert to date because moment depreciated the string construction\n    return moment(dt).format(format);\n  }\n\n  /**\n   * @desc Converts a date string to a date object\n   * @param {String} strDate the date as a string recognizable by new Date()\n   * @return {Date} the date object\n   */\n  fromView(strDate) {\n    return new Date(strDate);\n  }\n}\n","import * as voca from 'voca';\n\nexport class DecapitalizeValueConverter {\n\n\n  public toView(value: string): string {\n\n    return voca.decapitalize(value);\n\n  }\n\n}\n","import { getObjectValue } from './utils';\n\nexport class GroupValueConverter {\n  /**\n   * @desc Groups the array by the property name\n   * @param {Array} array the array to group\n   * @param {String} propertyName the property name to group by\n   */\n  toView(array, propertyName) {\n    if (!array || !propertyName) return array;\n\n    const groups = { };\n\n    // create the groups\n    array.forEach(obj => {\n      let group = getObjectValue(obj, propertyName);\n\n      if (isMissing(group)) group = '';\n\n      groups[group] = groups[group] || [];\n      groups[group].push(obj);\n    });\n\n    // map out to a new object\n    return Object.keys(groups).map(group => {\n      return {\n        group: group,\n        values: groups[group]\n      };\n    });\n  }\n}\n\nfunction isMissing(val) {\n  return val === null || typeof val === 'undefined';\n}\n","import { PLATFORM } from 'aurelia-framework';\n\nexport * from './date-format-value-converter';\nexport * from './group-value-converter';\nexport * from './page-value-converter';\nexport * from './sort-value-converter';\nexport * from './to-lower-case-value-converter';\nexport * from './to-upper-case-value-converter';\nexport * from './capitalize-value-converter';\nexport * from './decapitalize-value-converter';\nexport * from './camel-case-value-converter';\nexport * from './title-case-value-converter';\nexport * from './percentage-value-converter';\n\nexport * from './utils';\n\nexport function configure(aurelia) {\n  aurelia.globalResources(\n    PLATFORM.moduleName('./date-format-value-converter'),\n    PLATFORM.moduleName('./page-value-converter'),\n    PLATFORM.moduleName('./sort-value-converter'),\n    PLATFORM.moduleName('./group-value-converter'),    \n    PLATFORM.moduleName('./to-lower-case-value-converter'),\n    PLATFORM.moduleName('./to-upper-case-value-converter'),\n    PLATFORM.moduleName('./capitalize-value-converter'),\n    PLATFORM.moduleName('./decapitalize-value-converter'),\n    PLATFORM.moduleName('./camel-case-value-converter'),\n    PLATFORM.moduleName('./title-case-value-converter'),\n    PLATFORM.moduleName('./percentage-value-converter')\n    \n  );\n}\n","export class PageValueConverter {\n\n  public toView(array: [], pageSize, pageIndex) {\n    if (!array) return;\n\n    return array.slice((\n      pageIndex * pageSize) - pageSize, \n      (pageIndex * pageSize) < array.length ? (pageIndex * pageSize) : array.length);\n  }\n}\n","import numeral from 'numeral';\n\nexport class PercentageValueConverter {\n  public toView(value: string): string {\n    return numeral(value).format('0%');\n  }\n}\n","import { getObjectValue } from './utils';\nimport {\n  dateComparison,\n  isDate,\n  isString\n} from './utils';\n\nfunction _isDesc(direction) {\n  return direction.toLowerCase() === 'descending';\n}\n\nexport class SortValueConverter {\n  /**\n   * @desc Sorts the array\n   * @param {Array} array the array to sort\n   * @param {String} [propertyName] the property name to group by\n   * @param {String} [direction=asc] the direction to sort\n   */\n  toView(array: [], propertyName: string, direction: string) {\n    if (!array) return;\n\n    if (!propertyName || String.isEmptyOrWhitespace(propertyName)) return array;\n\n    if (!direction || String.isEmptyOrWhitespace(direction)) direction = 'ascending';\n\n    const isDesc = _isDesc(direction || 'ascending');\n    const factor = isDesc ? -1 : 1;\n\n    return array.slice(0).sort((a, b) => {\n      let aProp = getObjectValue(a, propertyName);\n      let bProp = getObjectValue(b, propertyName);\n\n      if (isDate(aProp) && isDate(bProp)) {\n        return dateComparison(aProp, bProp) * factor;\n      }\n\n      if (isString(aProp)) aProp = aProp.toLowerCase();\n      if (isString(bProp)) bProp = bProp.toLowerCase();\n\n      return (aProp > bProp ? 1 : -1) * factor;\n    });\n  }\n}\n","import * as voca from 'voca';\n\nexport class TitleCaseValueConverter {\n\n\n  public toView(value: string): string {\n\n    return voca.titleCase(value);\n\n  }\n\n}\n","import * as voca from 'voca';\n\nexport class ToLowerCaseValueConverter {\n\n\n  public toView(value: string): string {\n\n    return voca.lowerCase(value);\n\n  }\n\n}\n","import * as voca from 'voca';\n\nexport class ToUpperCaseValueConverter {\n  \n  public toView(value: string): string {\n\n    return voca.upperCase(value);\n\n  }\n}\n\n\n","import moment from 'moment';\nimport topath from 'lodash.topath';\n\n/**\n * Compares two dates (Date objects or strings).\n * @param {Date} a the first date\n * @param {Date} b the second date\n * @return {Number} number representing the diff from a to b\n */\nexport function dateComparison(a, b) {\n  if (a === null) a = new Date(1900, 0, 1);\n  if (b === null) b = new Date(1900, 0, 1);\n  return moment(a).diff(moment(b));\n}\n\nexport function isDate(val) {\n  return moment(val, moment.ISO_8601, true).isValid();\n}\n\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\nexport function getObjectValue(obj, propertyPath) {\n  if (!obj) {\n    throw new Error('Must provide an object to get the value');\n  }\n  if (!propertyPath) {\n    return obj;\n  }\n\n  const paths = topath(propertyPath);\n  const length = paths.length;\n\n  let result = obj;\n  for (let i = 0; i < length && result; ++i) {\n    result = result[paths[i]];\n  }\n\n  return result;\n}\n"],"names":[],"sourceRoot":""}